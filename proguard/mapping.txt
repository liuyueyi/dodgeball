a.a.a.a.a.a -> a.a.a.a.a.a:
    void a(a.a.a.a.a.a$b) -> a
    void a(android.content.Context,a.a.a.a.a.a$a) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,org.json.JSONArray,java.lang.String,java.lang.String,java.lang.String) -> a
    a.a.a.a.a.g a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.Object,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.Object,java.lang.String,long) -> b
    void a(android.content.Context,java.lang.Object,int) -> a
    void a(android.content.Context,int) -> a
a.a.a.a.a.a$a -> a.a.a.a.a.b:
    void a(android.content.Context,java.lang.Object,java.lang.String,java.lang.String) -> a
    void a() -> a
a.a.a.a.a.a$b -> a.a.a.a.a.c:
    void a(java.lang.String,java.lang.String) -> a
    void a(a.a.a.a.a.e) -> a
    void b(a.a.a.a.a.e) -> b
    void d(a.a.a.a.a.e) -> d
    void e(a.a.a.a.a.e) -> e
    void f(a.a.a.a.a.e) -> f
    void c(a.a.a.a.a.e) -> c
a.a.a.a.a.b -> a.a.a.a.a.d:
    cn.domob.android.i.f a -> a
    android.database.sqlite.SQLiteDatabase q -> b
    a.a.a.a.a.b r -> c
    a.a.a.a.a.b a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a() -> a
    void b() -> b
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    boolean a(a.a.a.a.a.c) -> a
    boolean a(java.lang.String,android.content.ContentValues) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> a
    int a(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
a.a.a.a.a.c -> a.a.a.a.a.e:
    java.lang.String e -> a
    java.lang.String f -> b
    int g -> c
    java.lang.String h -> d
    java.lang.String i -> e
    int j -> f
    int k -> g
    int l -> h
    long m -> i
    long n -> j
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    int f() -> f
    void b(int) -> b
    long g() -> g
    long h() -> h
    int i() -> i
    void c(int) -> c
    int j() -> j
    void d(int) -> d
a.a.a.a.a.d -> a.a.a.a.a.f:
    cn.domob.android.i.f a -> a
    a.a.a.a.a.d b -> b
    a.a.a.a.a.a$a c -> c
    a.a.a.a.a.a$b d -> d
    a.a.a.a.a.d$b e -> e
    java.lang.String f -> f
    java.lang.String h -> g
    boolean i -> h
    boolean a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    a.a.a.a.a.d b() -> b
    void a(android.content.Context,a.a.a.a.a.a$a) -> a
    a.a.a.a.a.a$b c() -> c
    void a(a.a.a.a.a.a$b) -> a
    boolean c(android.content.Context) -> c
    void a(android.content.Context,java.lang.Object,java.lang.String,long,boolean) -> a
    void a(android.content.Context,java.lang.Object,int) -> a
    boolean a(java.lang.String[]) -> a
    void d(android.content.Context) -> d
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String[] b(android.content.Context,java.lang.String) -> b
    boolean f(android.content.Context) -> f
    void d() -> d
    boolean g(android.content.Context) -> g
    cn.domob.android.i.f a(a.a.a.a.a.d) -> a
a.a.a.a.a.d$1 -> a.a.a.a.a.g:
    int[] a -> a
a.a.a.a.a.d$a -> a.a.a.a.a.h:
    java.lang.String b -> b
    java.lang.String c -> c
    a.a.a.a.a.d a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
a.a.a.a.a.d$b -> a.a.a.a.a.i:
    a.a.a.a.a.d a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
a.a.a.a.a.e -> a.a.a.a.a.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean a() -> a
a.a.a.a.a.f -> a.a.a.a.a.k:
    cn.domob.android.i.f a -> a
    a.a.a.a.a.f b -> b
    int k -> c
    int l -> d
    boolean m -> e
    a.a.a.a.a.f a() -> a
    boolean a(android.content.Context) -> a
    void a(android.content.Context,org.json.JSONArray,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void h(android.content.Context) -> h
    int a(android.content.Context,java.lang.String,java.lang.String[],java.lang.String,int) -> a
    boolean e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,android.content.ContentValues) -> a
    boolean a(java.lang.String,long) -> a
    void a(android.content.Context,int) -> a
    a.a.a.a.a.g a(android.content.Context,java.lang.String,java.lang.String) -> a
    void i(android.content.Context) -> i
    void a(java.lang.String) -> a
    void a(java.io.File) -> a
    void f(android.content.Context) -> f
    java.util.Hashtable j(android.content.Context) -> j
    boolean b(android.content.Context,java.lang.String) -> b
    int b() -> b
    void g(android.content.Context) -> g
a.a.a.a.a.g -> a.a.a.a.a.l:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String a() -> a
    a.a.a.a.a.g a(java.lang.String) -> a
    a.a.a.a.a.g a(int) -> a
    a.a.a.a.a.g b(int) -> b
cn.domob.android.a.a.a -> cn.domob.android.a.a.a:
    cn.domob.android.i.f a -> a
    int b -> b
    android.content.Context c -> c
    cn.domob.android.a.a.a$a d -> d
    java.util.Timer e -> e
    android.widget.TextView f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    java.lang.String o -> o
    void a(cn.domob.android.a.a.a$a) -> a
    int e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    java.lang.String i() -> i
    int a() -> a
    void b() -> b
    void j() -> j
    void k() -> k
    void l() -> l
    void c() -> c
    void d() -> d
    void m() -> m
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(cn.domob.android.a.a.a) -> a
    java.lang.String b(cn.domob.android.a.a.a) -> b
    android.widget.TextView c(cn.domob.android.a.a.a) -> c
cn.domob.android.a.a.a$1 -> cn.domob.android.a.a.a$1:
    cn.domob.android.a.a.a a -> a
    void run() -> run
cn.domob.android.a.a.a$2 -> cn.domob.android.a.a.a$2:
    cn.domob.android.a.a.a a -> a
    void run() -> run
cn.domob.android.a.a.a$a -> cn.domob.android.a.a.a$a:
    void a() -> a
cn.domob.android.a.a.b -> cn.domob.android.a.a.b:
    cn.domob.android.i.f a -> a
    cn.domob.android.a.a.b$a b -> b
    void a(cn.domob.android.a.a.b$a) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
cn.domob.android.a.a.b$a -> cn.domob.android.a.a.b$a:
    void a(boolean) -> a
cn.domob.android.ads.A -> cn.domob.android.ads.A:
    cn.domob.android.i.f d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.domob.android.f.g G -> G
    void a(java.lang.String,cn.domob.android.ads.A$b,java.util.HashMap) -> a
    void a(java.lang.String,cn.domob.android.ads.A$f,java.util.HashMap) -> a
    void a(java.util.HashMap,cn.domob.android.ads.A$a) -> a
    void a(java.lang.String,cn.domob.android.ads.A$h,java.lang.String,cn.domob.android.ads.A$c,java.util.HashMap) -> a
    void a(java.lang.String,cn.domob.android.f.f,java.lang.String) -> a
    void a(java.util.HashMap) -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.A$1 -> cn.domob.android.ads.A$1:
    cn.domob.android.ads.A a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.A$2 -> cn.domob.android.ads.A$2:
    cn.domob.android.ads.A a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.A$a -> cn.domob.android.ads.A$a:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.domob.android.ads.A c -> c
cn.domob.android.ads.A$b -> cn.domob.android.ads.A$b:
    cn.domob.android.ads.A d -> d
cn.domob.android.ads.A$c -> cn.domob.android.ads.A$c:
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    cn.domob.android.ads.A k -> k
cn.domob.android.ads.A$d -> cn.domob.android.ads.A$d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    cn.domob.android.ads.A Q -> Q
cn.domob.android.ads.A$e -> cn.domob.android.ads.A$e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    cn.domob.android.ads.A e -> e
cn.domob.android.ads.A$f -> cn.domob.android.ads.A$f:
    java.lang.String d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    cn.domob.android.ads.A j -> j
cn.domob.android.ads.A$g -> cn.domob.android.ads.A$g:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.domob.android.ads.A c -> c
cn.domob.android.ads.A$h -> cn.domob.android.ads.A$h:
    cn.domob.android.ads.A$h a -> a
    cn.domob.android.ads.A$h b -> b
    cn.domob.android.ads.A$h c -> c
    cn.domob.android.ads.A$h d -> d
    cn.domob.android.ads.A$h e -> e
    cn.domob.android.ads.A$h f -> f
    cn.domob.android.ads.A$h g -> g
    cn.domob.android.ads.A$h h -> h
    cn.domob.android.ads.A$h i -> i
    cn.domob.android.ads.A$h j -> j
    cn.domob.android.ads.A$h k -> k
    cn.domob.android.ads.A$h l -> l
    cn.domob.android.ads.A$h m -> m
    cn.domob.android.ads.A$h n -> n
    cn.domob.android.ads.A$h o -> o
    cn.domob.android.ads.A$h p -> p
    cn.domob.android.ads.A$h q -> q
    cn.domob.android.ads.A$h r -> r
    cn.domob.android.ads.A$h s -> s
    cn.domob.android.ads.A$h[] t -> t
    cn.domob.android.ads.A$h[] values() -> values
    cn.domob.android.ads.A$h valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.B -> cn.domob.android.ads.B:
    android.content.Context b -> b
    android.view.ViewGroup c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int a -> a
    int i -> i
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    android.content.Context e() -> e
    void a(android.content.Context) -> a
    android.view.ViewGroup f() -> f
    void a(android.view.ViewGroup) -> a
    int g() -> g
    void c(int) -> c
    int h() -> h
    void d(int) -> d
    int i() -> i
    void e(int) -> e
    int j() -> j
    void f(int) -> f
    int k() -> k
cn.domob.android.ads.C -> cn.domob.android.ads.C:
    cn.domob.android.i.f J -> J
    void a(cn.domob.android.ads.i,int) -> a
    void b(cn.domob.android.ads.i,java.lang.String) -> b
    void a(cn.domob.android.ads.i,java.lang.String,java.lang.String) -> a
cn.domob.android.ads.D -> cn.domob.android.ads.D:
    cn.domob.android.i.f s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    int v -> v
    cn.domob.android.ads.DomobSplashAdListener w -> w
    int x -> x
    android.view.View p -> p
    boolean q -> q
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode r -> r
    boolean y -> y
    java.lang.String z -> z
    int A -> A
    int B -> B
    boolean p() -> p
    void a(java.lang.String,java.lang.String) -> a
    void a(cn.domob.android.ads.DomobSplashAdListener) -> a
    boolean q() -> q
    boolean m() -> m
    void onAttachedToWindow() -> onAttachedToWindow
    void a(int) -> a
    void a(android.content.Context,android.view.View) -> a
    void showAd(cn.domob.android.ads.m,android.view.animation.AnimationSet[]) -> showAd
    void l() -> l
    void o() -> o
    void n() -> n
    boolean r() -> r
    void a(cn.domob.android.ads.m) -> a
    void close() -> close
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    cn.domob.android.i.f s() -> s
cn.domob.android.ads.D$1 -> cn.domob.android.ads.D$1:
    cn.domob.android.ads.D a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.D$2 -> cn.domob.android.ads.D$2:
    android.widget.ImageButton a -> a
    cn.domob.android.ads.D b -> b
    void run() -> run
cn.domob.android.ads.D$3 -> cn.domob.android.ads.D$3:
    cn.domob.android.ads.D a -> a
    void run() -> run
cn.domob.android.ads.D$4 -> cn.domob.android.ads.D$4:
    cn.domob.android.ads.D a -> a
    void run() -> run
cn.domob.android.ads.DomobActivity -> cn.domob.android.ads.DomobActivity:
    cn.domob.android.i.f a -> a
    java.lang.String ACTIVITY_TYPE -> ACTIVITY_TYPE
    int TYPE_NONE -> TYPE_NONE
    int TYPE_INSTALL_RECEIVER -> TYPE_INSTALL_RECEIVER
    int TYPE_DOWNLOADER -> TYPE_DOWNLOADER
    int TYPE_NOTICE -> TYPE_NOTICE
    int TYPE_UPLOAD_PIC -> TYPE_UPLOAD_PIC
    int TYPE_SHOW_WEBVIEW -> TYPE_SHOW_WEBVIEW
    java.lang.String NOTICE_MESSAGE -> NOTICE_MESSAGE
    java.lang.String WEBVIEW_URL_NAME -> WEBVIEW_URL_NAME
    android.content.Context b -> b
    java.lang.String c -> c
    cn.domob.android.ads.a.b d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void b() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String a(cn.domob.android.ads.DomobActivity) -> a
cn.domob.android.ads.DomobActivity$1 -> cn.domob.android.ads.DomobActivity$1:
    cn.domob.android.ads.DomobActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.DomobActivity$2 -> cn.domob.android.ads.DomobActivity$2:
    cn.domob.android.ads.DomobActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.DomobActivity$3 -> cn.domob.android.ads.DomobActivity$3:
    cn.domob.android.ads.DomobActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.DomobAdEventListener -> cn.domob.android.ads.DomobAdEventListener:
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
cn.domob.android.ads.DomobAdListener -> cn.domob.android.ads.DomobAdListener:
    void onReceivedFreshAd(cn.domob.android.ads.DomobAdView) -> onReceivedFreshAd
    void onFailedToReceiveFreshAd(cn.domob.android.ads.DomobAdView) -> onFailedToReceiveFreshAd
    void onLandingPageOpening() -> onLandingPageOpening
    void onLandingPageClose() -> onLandingPageClose
cn.domob.android.ads.DomobAdManager -> cn.domob.android.ads.DomobAdManager:
    java.lang.String GENDER_MALE -> GENDER_MALE
    java.lang.String GENDER_FEMALE -> GENDER_FEMALE
    java.lang.String ACTION_URL -> ACTION_URL
    java.lang.String ACTION_LAUNCH_APP -> ACTION_LAUNCH_APP
    java.lang.String ACTION_IN_APP -> ACTION_IN_APP
    java.lang.String ACTION_MAP -> ACTION_MAP
    java.lang.String ACTION_SMS -> ACTION_SMS
    java.lang.String ACTION_MAIL -> ACTION_MAIL
    java.lang.String ACTION_MARKET -> ACTION_MARKET
    java.lang.String ACTION_CALL -> ACTION_CALL
    java.lang.String ACTION_VIDEO -> ACTION_VIDEO
    java.lang.String ACTION_AUDIO -> ACTION_AUDIO
    java.lang.String TEST_EMULATOR -> TEST_EMULATOR
    java.lang.String SDK_VER -> SDK_VER
    void setAllowUseOfLocation(boolean) -> setAllowUseOfLocation
    void setPublisherId(java.lang.String) -> setPublisherId
    java.lang.String getPublisherId(android.content.Context) -> getPublisherId
    void setPostalCode(java.lang.String) -> setPostalCode
    java.lang.String getPostalCode() -> getPostalCode
    void setBirthday(java.util.GregorianCalendar) -> setBirthday
    void setBirthday(int,int,int) -> setBirthday
    java.util.GregorianCalendar getBirthday() -> getBirthday
    void setGender(java.lang.String) -> setGender
    java.lang.String getGender() -> getGender
    void setEndpoint(java.lang.String) -> setEndpoint
    java.lang.String getEndpoint() -> getEndpoint
    void setIsTestMode(boolean) -> setIsTestMode
    java.lang.String getSDKVersion() -> getSDKVersion
cn.domob.android.ads.DomobAdManager$ErrorCode -> cn.domob.android.ads.DomobAdManager$ErrorCode:
    cn.domob.android.ads.DomobAdManager$ErrorCode INTERNAL_ERROR -> INTERNAL_ERROR
    cn.domob.android.ads.DomobAdManager$ErrorCode INVALID_REQUEST -> INVALID_REQUEST
    cn.domob.android.ads.DomobAdManager$ErrorCode NETWORK_ERROR -> NETWORK_ERROR
    cn.domob.android.ads.DomobAdManager$ErrorCode NO_FILL -> NO_FILL
    cn.domob.android.ads.DomobAdManager$ErrorCode RT_SPLASH_TIMEOUT_LOAD_RESOURCE -> RT_SPLASH_TIMEOUT_LOAD_RESOURCE
    cn.domob.android.ads.DomobAdManager$ErrorCode RT_SPLASH_TIMEOUT_REQUEST_AD -> RT_SPLASH_TIMEOUT_REQUEST_AD
    cn.domob.android.ads.DomobAdManager$ErrorCode[] a -> a
    cn.domob.android.ads.DomobAdManager$ErrorCode[] values() -> values
    cn.domob.android.ads.DomobAdManager$ErrorCode valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.DomobAdView -> cn.domob.android.ads.DomobAdView:
    cn.domob.android.i.f p -> p
    cn.domob.android.ads.f a -> a
    int b -> b
    android.content.Context c -> c
    boolean d -> d
    boolean e -> e
    cn.domob.android.ads.P f -> f
    cn.domob.android.ads.m g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    cn.domob.android.ads.DomobAdListener n -> n
    cn.domob.android.ads.DomobAdEventListener o -> o
    boolean q -> q
    java.lang.String INLINE_SIZE_300X250 -> INLINE_SIZE_300X250
    java.lang.String INLINE_SIZE_320X50 -> INLINE_SIZE_320X50
    java.lang.String INLINE_SIZE_600X94 -> INLINE_SIZE_600X94
    java.lang.String INLINE_SIZE_600X500 -> INLINE_SIZE_600X500
    java.lang.String INLINE_SIZE_728X90 -> INLINE_SIZE_728X90
    java.lang.String INLINE_SIZE_FLEXIBLE -> INLINE_SIZE_FLEXIBLE
    java.lang.String r -> r
    java.lang.String s -> s
    void setAdSize(java.lang.String) -> setAdSize
    void a(java.lang.String,java.lang.String) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean a(android.content.Context) -> a
    boolean a() -> a
    android.content.Context b() -> b
    boolean c() -> c
    boolean d() -> d
    int e() -> e
    cn.domob.android.ads.DomobAdListener f() -> f
    cn.domob.android.ads.DomobAdEventListener g() -> g
    cn.domob.android.ads.m h() -> h
    java.lang.String i() -> i
    void setCreativeRect(int,int) -> setCreativeRect
    boolean j() -> j
    void c(cn.domob.android.ads.m) -> c
    void showAd(cn.domob.android.ads.m,android.view.animation.AnimationSet[]) -> showAd
    void a(cn.domob.android.ads.m) -> a
    void close() -> close
    void b(cn.domob.android.ads.m) -> b
    void l() -> l
    void setSpots(java.lang.String) -> setSpots
    void setKeyword(java.lang.String) -> setKeyword
    void setUserGender(java.lang.String) -> setUserGender
    void setUserBirthdayStr(java.lang.String) -> setUserBirthdayStr
    void setUserPostcode(java.lang.String) -> setUserPostcode
    void setRefreshable(boolean) -> setRefreshable
    void setOnAdListener(cn.domob.android.ads.DomobAdListener) -> setOnAdListener
    void setAdEventListener(cn.domob.android.ads.DomobAdEventListener) -> setAdEventListener
    void requestRefreshAd() -> requestRefreshAd
    void requestAdForAggregationPlatform() -> requestAdForAggregationPlatform
    void loadUrl(java.lang.String,java.lang.String) -> loadUrl
    void clean() -> clean
    void orientationChanged() -> orientationChanged
    void needCleanWhenDetached(boolean) -> needCleanWhenDetached
    void onProcessActionType(java.lang.String) -> onProcessActionType
    void domobAdLoad() -> domobAdLoad
    void domobAdImpression() -> domobAdImpression
    void domobAdDismiss() -> domobAdDismiss
    void onDomobAdFailed(cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented() -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed() -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication() -> onDomobLeaveApplication
    void onDomobAdClicked() -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    void onDomobAdReturned(cn.domob.android.ads.m) -> onDomobAdReturned
    cn.domob.android.i.f k() -> k
cn.domob.android.ads.DomobAdView$1 -> cn.domob.android.ads.DomobAdView$1:
    android.view.animation.AnimationSet[] a -> a
    android.view.View b -> b
    cn.domob.android.ads.m c -> c
    cn.domob.android.ads.DomobAdView d -> d
    void run() -> run
cn.domob.android.ads.DomobAdView$a -> cn.domob.android.ads.DomobAdView$a:
    cn.domob.android.ads.DomobAdView$a a -> a
    cn.domob.android.ads.DomobAdView$a b -> b
    cn.domob.android.ads.DomobAdView$a c -> c
    cn.domob.android.ads.DomobAdView$a d -> d
    cn.domob.android.ads.DomobAdView$a e -> e
    cn.domob.android.ads.DomobAdView$a f -> f
    cn.domob.android.ads.DomobAdView$a g -> g
    cn.domob.android.ads.DomobAdView$a h -> h
    cn.domob.android.ads.DomobAdView$a[] i -> i
    cn.domob.android.ads.DomobAdView$a[] values() -> values
    cn.domob.android.ads.DomobAdView$a valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.DomobFeedsAdListener -> cn.domob.android.ads.DomobFeedsAdListener:
    void onFeedsAdReady() -> onFeedsAdReady
    void onFeedsAdFailed(cn.domob.android.ads.DomobAdManager$ErrorCode) -> onFeedsAdFailed
    void onFeedsAdPresent() -> onFeedsAdPresent
    void onFeedsAdDismiss() -> onFeedsAdDismiss
    void onLandingPageOpen() -> onLandingPageOpen
    void onLandingPageClose() -> onLandingPageClose
    void onFeedsAdLeaveApplication() -> onFeedsAdLeaveApplication
    void onFeedsAdClicked(cn.domob.android.ads.DomobFeedsAdView) -> onFeedsAdClicked
cn.domob.android.ads.DomobFeedsAdView -> cn.domob.android.ads.DomobFeedsAdView:
    cn.domob.android.i.f r -> r
    cn.domob.android.ads.DomobFeedsAdListener s -> s
    android.os.Handler t -> t
    void t() -> t
    void showAd(cn.domob.android.ads.m,android.view.animation.AnimationSet[]) -> showAd
    void c(android.content.Context) -> c
    void closeFeedsAd() -> closeFeedsAd
    void close() -> close
    void setFeedsAdListener(cn.domob.android.ads.DomobFeedsAdListener) -> setFeedsAdListener
    void loadFeedsAd() -> loadFeedsAd
    boolean isFeedsAdReady() -> isFeedsAdReady
    void showFeedsAd(android.content.Context) -> showFeedsAd
    void setKeyword(java.lang.String) -> setKeyword
    void setUserGender(java.lang.String) -> setUserGender
    void setUserBirthdayStr(java.lang.String) -> setUserBirthdayStr
    void setUserPostcode(java.lang.String) -> setUserPostcode
    void onInterstitialAdReady() -> onInterstitialAdReady
    void onInterstitialAdFailed(cn.domob.android.ads.DomobAdManager$ErrorCode) -> onInterstitialAdFailed
    void onInterstitialAdPresent() -> onInterstitialAdPresent
    void onInterstitialAdDismiss() -> onInterstitialAdDismiss
    void onLandingPageOpen() -> onLandingPageOpen
    void onLandingPageClose() -> onLandingPageClose
    void onInterstitialAdLeaveApplication() -> onInterstitialAdLeaveApplication
    void onInterstitialAdClicked(cn.domob.android.ads.DomobInterstitialAd) -> onInterstitialAdClicked
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    android.os.Handler a(cn.domob.android.ads.DomobFeedsAdView) -> a
cn.domob.android.ads.DomobFeedsAdView$1 -> cn.domob.android.ads.DomobFeedsAdView$1:
    android.view.View a -> a
    cn.domob.android.ads.DomobFeedsAdView b -> b
    void run() -> run
cn.domob.android.ads.DomobFeedsAdView$2 -> cn.domob.android.ads.DomobFeedsAdView$2:
    android.content.Context a -> a
    cn.domob.android.ads.DomobFeedsAdView b -> b
    void run() -> run
cn.domob.android.ads.DomobFeedsAdView$2$1 -> cn.domob.android.ads.DomobFeedsAdView$2$1:
    cn.domob.android.ads.DomobFeedsAdView$2 a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.DomobFeedsAdView$2$2 -> cn.domob.android.ads.DomobFeedsAdView$2$2:
    android.widget.ImageButton a -> a
    cn.domob.android.ads.DomobFeedsAdView$2 b -> b
    void run() -> run
cn.domob.android.ads.DomobFeedsAdView$2$3 -> cn.domob.android.ads.DomobFeedsAdView$2$3:
    cn.domob.android.ads.DomobFeedsAdView$2 a -> a
    void run() -> run
cn.domob.android.ads.DomobFeedsAdView$2$4 -> cn.domob.android.ads.DomobFeedsAdView$2$4:
    cn.domob.android.ads.DomobFeedsAdView$2 a -> a
    void run() -> run
cn.domob.android.ads.DomobInterstitialAd -> cn.domob.android.ads.DomobInterstitialAd:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.t b -> b
    java.lang.String INTERSITIAL_SIZE_300X250 -> INTERSITIAL_SIZE_300X250
    java.lang.String INTERSITIAL_SIZE_600X500 -> INTERSITIAL_SIZE_600X500
    java.lang.String INTERSITIAL_SIZE_FULL_SCREEN -> INTERSITIAL_SIZE_FULL_SCREEN
    void loadInterstitialAd() -> loadInterstitialAd
    void setInterstitialAdListener(cn.domob.android.ads.DomobInterstitialAdListener) -> setInterstitialAdListener
    boolean isInterstitialAdReady() -> isInterstitialAdReady
    void showInterstitialAd(android.content.Context) -> showInterstitialAd
    void setKeyword(java.lang.String) -> setKeyword
    void setUserGender(java.lang.String) -> setUserGender
    void setUserBirthdayStr(java.lang.String) -> setUserBirthdayStr
    void setUserPostcode(java.lang.String) -> setUserPostcode
    void domobAdLoad() -> domobAdLoad
    void domobAdImpression() -> domobAdImpression
    void domobAdDismiss() -> domobAdDismiss
cn.domob.android.ads.DomobInterstitialAd$BorderType -> cn.domob.android.ads.DomobInterstitialAd$BorderType:
    cn.domob.android.ads.DomobInterstitialAd$BorderType White -> White
    cn.domob.android.ads.DomobInterstitialAd$BorderType Black -> Black
    cn.domob.android.ads.DomobInterstitialAd$BorderType None -> None
    cn.domob.android.ads.DomobInterstitialAd$BorderType[] a -> a
    cn.domob.android.ads.DomobInterstitialAd$BorderType[] values() -> values
    cn.domob.android.ads.DomobInterstitialAd$BorderType valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.DomobInterstitialAdListener -> cn.domob.android.ads.DomobInterstitialAdListener:
    void onInterstitialAdReady() -> onInterstitialAdReady
    void onInterstitialAdFailed(cn.domob.android.ads.DomobAdManager$ErrorCode) -> onInterstitialAdFailed
    void onInterstitialAdPresent() -> onInterstitialAdPresent
    void onInterstitialAdDismiss() -> onInterstitialAdDismiss
    void onLandingPageOpen() -> onLandingPageOpen
    void onLandingPageClose() -> onLandingPageClose
    void onInterstitialAdLeaveApplication() -> onInterstitialAdLeaveApplication
    void onInterstitialAdClicked(cn.domob.android.ads.DomobInterstitialAd) -> onInterstitialAdClicked
cn.domob.android.ads.DomobRTSplashAd -> cn.domob.android.ads.DomobRTSplashAd:
    android.content.Context a -> a
    cn.domob.android.ads.y b -> b
    void setRTSplashAdListener(cn.domob.android.ads.DomobRTSplashAdListener) -> setRTSplashAdListener
    void setRTSplashTopMargin(int) -> setRTSplashTopMargin
    void splash(android.content.Context,android.view.View) -> splash
    void closeRTSplash() -> closeRTSplash
    void setKeyword(java.lang.String) -> setKeyword
    void setUserGender(java.lang.String) -> setUserGender
    void setUserBirthdayStr(java.lang.String) -> setUserBirthdayStr
    void setUserPostcode(java.lang.String) -> setUserPostcode
    void domobAdLoad() -> domobAdLoad
    void domobAdImpression() -> domobAdImpression
    void domobAdDismiss() -> domobAdDismiss
cn.domob.android.ads.DomobRTSplashAdListener -> cn.domob.android.ads.DomobRTSplashAdListener:
    void onRTSplashPresent() -> onRTSplashPresent
    void onRTSplashDismiss() -> onRTSplashDismiss
    void onRTSplashLoadFailed() -> onRTSplashLoadFailed
cn.domob.android.ads.DomobSplashAd -> cn.domob.android.ads.DomobSplashAd:
    cn.domob.android.i.f a -> a
    android.content.Context b -> b
    cn.domob.android.ads.D c -> c
    boolean d -> d
    boolean e -> e
    void setSplashAdListener(cn.domob.android.ads.DomobSplashAdListener) -> setSplashAdListener
    boolean isSplashAdReady() -> isSplashAdReady
    void setSplashTopMargin(int) -> setSplashTopMargin
    void splash(android.content.Context,android.view.View) -> splash
    void closeSplash() -> closeSplash
    void setKeyword(java.lang.String) -> setKeyword
    void setUserGender(java.lang.String) -> setUserGender
    void setUserBirthdayStr(java.lang.String) -> setUserBirthdayStr
    void setUserPostcode(java.lang.String) -> setUserPostcode
    void domobAdLoad() -> domobAdLoad
    void domobAdImpression() -> domobAdImpression
    void domobAdDismiss() -> domobAdDismiss
cn.domob.android.ads.DomobSplashAd$DomobSplashMode -> cn.domob.android.ads.DomobSplashAd$DomobSplashMode:
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode DomobSplashModeFullScreen -> DomobSplashModeFullScreen
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode DomobSplashModeSmallEmbed -> DomobSplashModeSmallEmbed
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode DomobSplashModeBigEmbed -> DomobSplashModeBigEmbed
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode[] a -> a
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode[] values() -> values
    cn.domob.android.ads.DomobSplashAd$DomobSplashMode valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.DomobSplashAdListener -> cn.domob.android.ads.DomobSplashAdListener:
    void onSplashPresent() -> onSplashPresent
    void onSplashDismiss() -> onSplashDismiss
    void onSplashLoadFailed() -> onSplashLoadFailed
cn.domob.android.ads.DomobUpdater -> cn.domob.android.ads.DomobUpdater:
    void checkUpdate(android.content.Context,java.lang.String) -> checkUpdate
cn.domob.android.ads.E -> cn.domob.android.ads.E:
    cn.domob.android.i.f j -> j
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void a() -> a
    void p() -> p
    void d() -> d
    void e() -> e
    void f() -> f
    void a(cn.domob.android.ads.a.e) -> a
    void n() -> n
    void b(java.lang.String) -> b
    void a(int,int) -> a
    void a(java.util.HashMap,java.lang.String,long) -> a
    cn.domob.android.i.f q() -> q
cn.domob.android.ads.E$1 -> cn.domob.android.ads.E$1:
    cn.domob.android.ads.E a -> a
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.F -> cn.domob.android.ads.F:
    cn.domob.android.i.f a -> a
    java.lang.String a(android.content.Context,cn.domob.android.ads.DomobSplashAd$DomobSplashMode) -> a
    void a(android.content.Context,cn.domob.android.ads.D,int) -> a
cn.domob.android.ads.F$1 -> cn.domob.android.ads.F$1:
    int[] a -> a
cn.domob.android.ads.G -> cn.domob.android.ads.G:
    cn.domob.android.i.f d -> d
    cn.domob.android.ads.G$a e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    cn.domob.android.f.g i -> i
    java.lang.String a(java.lang.String,java.lang.String[]) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    cn.domob.android.i.f c() -> c
    cn.domob.android.ads.G$a a(cn.domob.android.ads.G) -> a
    java.lang.String b(cn.domob.android.ads.G) -> b
    java.lang.String c(cn.domob.android.ads.G) -> c
    java.lang.String a(cn.domob.android.ads.G,byte[],java.lang.String) -> a
cn.domob.android.ads.G$1 -> cn.domob.android.ads.G$1:
    cn.domob.android.ads.G a -> a
    void a(cn.domob.android.f.h) -> a
cn.domob.android.ads.G$1$1 -> cn.domob.android.ads.G$1$1:
    byte[] a -> a
    java.lang.String b -> b
    cn.domob.android.ads.G$1 c -> c
    void run() -> run
cn.domob.android.ads.G$a -> cn.domob.android.ads.G$a:
    void a(cn.domob.android.ads.a.e) -> a
    void n() -> n
    void b(java.lang.String) -> b
cn.domob.android.ads.H -> cn.domob.android.ads.H:
    cn.domob.android.i.f x -> x
    android.content.Context y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    int D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    cn.domob.android.ads.f H -> H
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    void a() -> a
    android.app.Dialog a(android.content.Context,android.content.SharedPreferences) -> a
    android.widget.TextView a(android.content.Context) -> a
    android.widget.Button b(android.content.Context) -> b
    android.widget.Button c(android.content.Context) -> c
    boolean a(java.lang.String,android.content.SharedPreferences) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    void c(cn.domob.android.ads.p) -> c
    void d(cn.domob.android.ads.p) -> d
    void e(cn.domob.android.ads.p) -> e
    void f(cn.domob.android.ads.p) -> f
    void g(cn.domob.android.ads.p) -> g
    void h(cn.domob.android.ads.p) -> h
    void i(cn.domob.android.ads.p) -> i
    void j(cn.domob.android.ads.p) -> j
    cn.domob.android.ads.f a(cn.domob.android.ads.H) -> a
    java.lang.String b(cn.domob.android.ads.H) -> b
    int c(cn.domob.android.ads.H) -> c
    java.lang.String d(cn.domob.android.ads.H) -> d
    java.lang.String e(cn.domob.android.ads.H) -> e
    java.lang.String f(cn.domob.android.ads.H) -> f
    void a(cn.domob.android.ads.H,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String g(cn.domob.android.ads.H) -> g
cn.domob.android.ads.H$1 -> cn.domob.android.ads.H$1:
    android.app.Dialog a -> a
    java.lang.String b -> b
    cn.domob.android.ads.H c -> c
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.H$2 -> cn.domob.android.ads.H$2:
    android.app.Dialog a -> a
    cn.domob.android.ads.H b -> b
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.H$3 -> cn.domob.android.ads.H$3:
    android.app.Dialog a -> a
    android.content.SharedPreferences$Editor b -> b
    cn.domob.android.ads.H c -> c
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.H$4 -> cn.domob.android.ads.H$4:
    android.graphics.drawable.GradientDrawable a -> a
    android.graphics.drawable.GradientDrawable b -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.H$5 -> cn.domob.android.ads.H$5:
    android.graphics.drawable.GradientDrawable a -> a
    android.graphics.drawable.GradientDrawable b -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.H$a -> cn.domob.android.ads.H$a:
    void a(java.lang.String,int,java.lang.String) -> a
    void b(java.lang.String,int,java.lang.String) -> b
    void c(java.lang.String,int,java.lang.String) -> c
    void d(java.lang.String,int,java.lang.String) -> d
    void e(java.lang.String,int,java.lang.String) -> e
    void f(java.lang.String,int,java.lang.String) -> f
    void g(java.lang.String,int,java.lang.String) -> g
    void h(java.lang.String,int,java.lang.String) -> h
    void i(java.lang.String,int,java.lang.String) -> i
    void j(java.lang.String,int,java.lang.String) -> j
    void k(java.lang.String,int,java.lang.String) -> k
    void a(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
cn.domob.android.ads.I -> cn.domob.android.ads.I:
    cn.domob.android.i.f m -> m
    java.util.HashMap n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.util.HashMap s -> s
    void a() -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void j() -> j
    void k() -> k
    void w() -> w
    void b(java.lang.String) -> b
    void a(cn.domob.android.j.a) -> a
    void a(long) -> a
    void n() -> n
    void b(long) -> b
    void c(long) -> c
    void a(java.lang.String,long) -> a
    void a(boolean) -> a
    void o() -> o
    void p() -> p
    void q() -> q
    void c(java.lang.String) -> c
    void a(int,int) -> a
    void a(java.util.HashMap,java.lang.String,long) -> a
    int a(cn.domob.android.ads.I) -> a
    int b(cn.domob.android.ads.I) -> b
    java.util.HashMap c(cn.domob.android.ads.I) -> c
cn.domob.android.ads.I$1 -> cn.domob.android.ads.I$1:
    java.lang.String a -> a
    cn.domob.android.ads.i$b b -> b
    cn.domob.android.ads.I c -> c
    void run() -> run
cn.domob.android.ads.J -> cn.domob.android.ads.J:
    cn.domob.android.i.f a -> a
    java.util.HashMap b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.domob.android.j.a h -> h
    android.content.Context i -> i
    cn.domob.android.ads.i j -> j
    cn.domob.android.ads.f k -> k
    cn.domob.android.ads.a.c l -> l
    cn.domob.android.j.b m -> m
    boolean n -> n
    boolean o -> o
    android.os.Handler p -> p
    void a() -> a
    void c() -> c
    void b(java.lang.String) -> b
    void a(cn.domob.android.j.a) -> a
    void a(long) -> a
    void n() -> n
    void b(long) -> b
    void c(long) -> c
    void a(boolean) -> a
    void o() -> o
    void p() -> p
    void q() -> q
    void c(java.lang.String) -> c
    void b() -> b
    android.content.Context a(cn.domob.android.ads.J) -> a
    int b(cn.domob.android.ads.J) -> b
    int c(cn.domob.android.ads.J) -> c
    cn.domob.android.j.b d(cn.domob.android.ads.J) -> d
    java.util.HashMap e(cn.domob.android.ads.J) -> e
cn.domob.android.ads.J$1 -> cn.domob.android.ads.J$1:
    java.lang.String a -> a
    cn.domob.android.ads.J b -> b
    void run() -> run
cn.domob.android.ads.K -> cn.domob.android.ads.K:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.K b -> b
    cn.domob.android.ads.K a() -> a
    long[] a(java.util.HashMap) -> a
    void a(android.content.Context,long,cn.domob.android.ads.f,cn.domob.android.ads.i,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.domob.android.ads.f,cn.domob.android.ads.i,java.util.HashMap,java.lang.String,long,android.view.View) -> a
cn.domob.android.ads.L -> cn.domob.android.ads.L:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.O b -> b
    void a() -> a
    void a(cn.domob.android.ads.M) -> a
    boolean b() -> b
    void a(cn.domob.android.ads.B) -> a
    void b(cn.domob.android.ads.B) -> b
    cn.domob.android.ads.O$a a(android.content.Context,cn.domob.android.ads.B) -> a
    void a(android.content.Context,cn.domob.android.ads.O$a) -> a
    void b(android.content.Context,cn.domob.android.ads.O$a) -> b
    void c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
cn.domob.android.ads.M -> cn.domob.android.ads.M:
    void a() -> a
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
cn.domob.android.ads.N -> cn.domob.android.ads.N:
    int b -> b
    int c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
cn.domob.android.ads.O -> cn.domob.android.ads.O:
    cn.domob.android.i.f p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    android.os.Handler u -> u
    cn.domob.android.ads.M v -> v
    cn.domob.android.ads.v w -> w
    cn.domob.android.ads.O$a x -> x
    cn.domob.android.a.a.a y -> y
    cn.domob.android.j.c z -> z
    boolean A -> A
    int B -> B
    boolean C -> C
    boolean D -> D
    boolean E -> E
    boolean F -> F
    boolean G -> G
    cn.domob.android.ads.c.d H -> H
    cn.domob.android.ads.c.d I -> I
    cn.domob.android.ads.c.d J -> J
    boolean K -> K
    cn.domob.android.ads.c.d a(long) -> a
    cn.domob.android.ads.c.d s() -> s
    cn.domob.android.ads.c.d$b a(android.widget.ImageButton) -> a
    void a(cn.domob.android.ads.v) -> a
    void a(cn.domob.android.ads.M) -> a
    void a(int) -> a
    boolean l() -> l
    boolean m() -> m
    boolean t() -> t
    void n() -> n
    void showAd(cn.domob.android.ads.m,android.view.animation.AnimationSet[]) -> showAd
    void a(cn.domob.android.ads.B,cn.domob.android.ads.O$a) -> a
    void a(cn.domob.android.ads.O$a) -> a
    void a(cn.domob.android.a.a.b,cn.domob.android.ads.O$a) -> a
    void b(cn.domob.android.ads.O$a) -> b
    void c(cn.domob.android.ads.O$a) -> c
    void u() -> u
    void a(android.content.Context,cn.domob.android.ads.O$a,android.widget.RelativeLayout) -> a
    void d(cn.domob.android.ads.O$a) -> d
    void a(cn.domob.android.ads.O$a,int,int,int,int) -> a
    void e(cn.domob.android.ads.O$a) -> e
    java.util.HashMap o() -> o
    void b(cn.domob.android.ads.B,cn.domob.android.ads.O$a) -> b
    void a(android.view.View) -> a
    boolean p() -> p
    void close() -> close
    void q() -> q
    void a(boolean) -> a
    void a(cn.domob.android.ads.c.d) -> a
    void v() -> v
    void a(java.lang.String,long) -> a
    void onProcessActionType(java.lang.String) -> onProcessActionType
    void w() -> w
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    void a(cn.domob.android.ads.O,java.lang.String,long) -> a
    boolean a(cn.domob.android.ads.O,boolean) -> a
    void a(cn.domob.android.ads.O,cn.domob.android.ads.O$a) -> a
    void a(cn.domob.android.ads.O) -> a
    boolean b(cn.domob.android.ads.O) -> b
    cn.domob.android.i.f r() -> r
cn.domob.android.ads.O$1 -> cn.domob.android.ads.O$1:
    long a -> a
    cn.domob.android.ads.O b -> b
    void a() -> a
cn.domob.android.ads.O$2 -> cn.domob.android.ads.O$2:
    cn.domob.android.ads.O a -> a
    void a() -> a
cn.domob.android.ads.O$3 -> cn.domob.android.ads.O$3:
    android.widget.ImageButton a -> a
    cn.domob.android.ads.O b -> b
    void a() -> a
cn.domob.android.ads.O$4 -> cn.domob.android.ads.O$4:
    cn.domob.android.ads.O a -> a
    void run() -> run
cn.domob.android.ads.O$5 -> cn.domob.android.ads.O$5:
    cn.domob.android.ads.O a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.O$6 -> cn.domob.android.ads.O$6:
    cn.domob.android.ads.O$a a -> a
    cn.domob.android.ads.O b -> b
    void a(boolean) -> a
cn.domob.android.ads.O$7 -> cn.domob.android.ads.O$7:
    cn.domob.android.ads.O$a a -> a
    cn.domob.android.ads.O b -> b
    void a() -> a
    void b() -> b
cn.domob.android.ads.O$8 -> cn.domob.android.ads.O$8:
    cn.domob.android.ads.O a -> a
    void a() -> a
cn.domob.android.ads.O$8$1 -> cn.domob.android.ads.O$8$1:
    cn.domob.android.ads.O$8 a -> a
    void run() -> run
cn.domob.android.ads.O$a -> cn.domob.android.ads.O$a:
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int a -> a
    int b -> b
    int c -> c
    boolean i -> i
    android.content.Context j -> j
    android.view.ViewGroup k -> k
    android.widget.RelativeLayout l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    boolean F -> F
    boolean G -> G
    boolean H -> H
    boolean I -> I
    boolean a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    android.widget.RelativeLayout c() -> c
    void a(android.widget.RelativeLayout) -> a
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    int f() -> f
    void a(int) -> a
    boolean g() -> g
    int h() -> h
    void b(int) -> b
    android.content.Context i() -> i
    void a(android.content.Context) -> a
    int j() -> j
    void c(int) -> c
    int k() -> k
    void d(int) -> d
    int l() -> l
    void e(int) -> e
    int m() -> m
    void a(android.content.Context,int) -> a
    int n() -> n
    void b(android.content.Context,int) -> b
    int o() -> o
    void c(android.content.Context,int) -> c
    int p() -> p
    void d(android.content.Context,int) -> d
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    void b(java.lang.String) -> b
    java.lang.String q() -> q
    android.view.ViewGroup r() -> r
    void a(android.view.ViewGroup) -> a
    int s() -> s
    void f(int) -> f
    int t() -> t
    void g(int) -> g
    int u() -> u
    void h(int) -> h
    int v() -> v
    void i(int) -> i
    int w() -> w
    void j(int) -> j
    int x() -> x
    void k(int) -> k
    int y() -> y
    void l(int) -> l
    int z() -> z
    void m(int) -> m
    boolean A() -> A
    void b(boolean) -> b
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
cn.domob.android.ads.P -> cn.domob.android.ads.P:
    void onDetachedFromWindow() -> onDetachedFromWindow
cn.domob.android.ads.Q -> cn.domob.android.ads.Q:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    java.util.LinkedHashMap f -> f
    cn.domob.android.i.f g -> g
    java.util.LinkedHashMap a() -> a
    void b() -> b
cn.domob.android.ads.R -> cn.domob.android.ads.R:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    long v -> v
    long w -> w
    long x -> x
    android.content.Context y -> y
    cn.domob.android.ads.R z -> z
    boolean A -> A
    cn.domob.android.ads.f B -> B
    cn.domob.android.ads.R a() -> a
    void a(android.content.Context,cn.domob.android.ads.f) -> a
    void b() -> b
    boolean a(android.content.Context) -> a
    void a(android.content.Context,long) -> a
    void b(android.content.Context) -> b
    void a(org.json.JSONObject,org.json.JSONObject) -> a
    void b(org.json.JSONObject,org.json.JSONObject) -> b
    void c(org.json.JSONObject,org.json.JSONObject) -> c
    java.util.HashMap a(android.content.Context,java.lang.String) -> a
    void a(java.lang.StringBuilder,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.util.HashMap) -> a
    void a(cn.domob.android.ads.R) -> a
cn.domob.android.ads.R$1 -> cn.domob.android.ads.R$1:
    cn.domob.android.ads.R a -> a
    void run() -> run
cn.domob.android.ads.R$a -> cn.domob.android.ads.R$a:
    void g(java.lang.String) -> g
cn.domob.android.ads.S -> cn.domob.android.ads.S:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.domob.android.i.f g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    long d() -> d
    void a(long) -> a
    long e() -> e
    void b(long) -> b
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    boolean g() -> g
    boolean e(java.lang.String) -> e
cn.domob.android.ads.T -> cn.domob.android.ads.T:
    cn.domob.android.i.f a -> a
    android.view.animation.AnimationSet[] b -> b
    android.view.animation.AnimationSet[] c -> c
    android.view.animation.AnimationSet[] d -> d
    android.view.animation.AnimationSet[] e -> e
    android.view.animation.AnimationSet[] f -> f
    long g -> g
    android.view.animation.AnimationSet[] a(cn.domob.android.ads.T$a) -> a
    android.view.animation.AnimationSet[] a() -> a
    android.view.animation.AnimationSet[] b() -> b
    android.view.animation.AnimationSet[] c() -> c
    android.view.animation.AnimationSet[] d() -> d
    android.view.animation.AnimationSet[] e() -> e
cn.domob.android.ads.T$1 -> cn.domob.android.ads.T$1:
    int[] a -> a
cn.domob.android.ads.T$a -> cn.domob.android.ads.T$a:
    cn.domob.android.ads.T$a a -> a
    cn.domob.android.ads.T$a b -> b
    cn.domob.android.ads.T$a c -> c
    cn.domob.android.ads.T$a d -> d
    cn.domob.android.ads.T$a e -> e
    cn.domob.android.ads.T$a[] f -> f
    cn.domob.android.ads.T$a[] values() -> values
    cn.domob.android.ads.T$a valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.a -> cn.domob.android.ads.a:
    cn.domob.android.i.f d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    cn.domob.android.ads.a$a a -> a
    cn.domob.android.ads.a$b b -> b
    int j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    int o -> o
    int c -> c
    java.lang.String p -> p
    cn.domob.android.f.g q -> q
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(boolean) -> a
    void a(cn.domob.android.ads.a$a) -> a
    void a(cn.domob.android.ads.a$b) -> a
    void a(java.lang.String,java.lang.String) -> a
    void loadUrl(java.lang.String) -> loadUrl
    void loadData(java.lang.String,java.lang.String,java.lang.String) -> loadData
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void a() -> a
    java.lang.String a(java.lang.String,java.lang.String[]) -> a
    java.lang.String b(java.lang.String) -> b
    cn.domob.android.i.f b() -> b
    boolean a(cn.domob.android.ads.a) -> a
    void b(cn.domob.android.ads.a) -> b
    boolean a(cn.domob.android.ads.a,boolean) -> a
    void c(cn.domob.android.ads.a) -> c
    boolean b(cn.domob.android.ads.a,boolean) -> b
    int d(cn.domob.android.ads.a) -> d
    boolean e(cn.domob.android.ads.a) -> e
    void f(cn.domob.android.ads.a) -> f
    boolean g(cn.domob.android.ads.a) -> g
    cn.domob.android.f.g h(cn.domob.android.ads.a) -> h
    java.lang.String i(cn.domob.android.ads.a) -> i
cn.domob.android.ads.a$1 -> cn.domob.android.ads.a$1:
    cn.domob.android.ads.a a -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.domob.android.ads.a$2 -> cn.domob.android.ads.a$2:
    cn.domob.android.ads.a a -> a
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
cn.domob.android.ads.a$3 -> cn.domob.android.ads.a$3:
    java.lang.String a -> a
    cn.domob.android.ads.a b -> b
    void run() -> run
cn.domob.android.ads.a$4 -> cn.domob.android.ads.a$4:
    cn.domob.android.ads.a a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.a$4$1 -> cn.domob.android.ads.a$4$1:
    java.lang.String a -> a
    cn.domob.android.ads.a$4 b -> b
    void run() -> run
cn.domob.android.ads.a$a -> cn.domob.android.ads.a$a:
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.a$b -> cn.domob.android.ads.a$b:
    void a(cn.domob.android.ads.a) -> a
    void b(cn.domob.android.ads.a) -> b
    void c(cn.domob.android.ads.a) -> c
cn.domob.android.ads.a$c -> cn.domob.android.ads.a$c:
    int b -> b
    cn.domob.android.ads.a a -> a
    void run() -> run
cn.domob.android.ads.a$c$1 -> cn.domob.android.ads.a$c$1:
    cn.domob.android.ads.a$c a -> a
    void run() -> run
cn.domob.android.ads.a.a -> cn.domob.android.ads.a.a:
    cn.domob.android.i.f a -> a
    android.content.Context b -> b
    android.net.Uri c -> c
    cn.domob.android.ads.a.a$a d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void a() -> a
    android.content.Intent a(android.net.Uri) -> a
cn.domob.android.ads.a.a$a -> cn.domob.android.ads.a.a$a:
    void a_() -> a_
    void b_() -> b_
    void a_(java.lang.String) -> a_
cn.domob.android.ads.a.b -> cn.domob.android.ads.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    int l -> l
    int m -> m
    cn.domob.android.i.f n -> n
    android.app.Activity o -> o
    int p -> p
    int q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    cn.domob.android.ads.a.e t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    int w -> w
    int x -> x
    android.os.Handler y -> y
    android.net.Uri z -> z
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    cn.domob.android.ads.a.e a(android.app.Activity) -> a
    boolean c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    void a(android.net.Uri,int) -> a
    void a(int,int,android.content.Intent) -> a
    java.lang.String a(android.net.Uri) -> a
    android.widget.RelativeLayout a(cn.domob.android.ads.a.e) -> a
    cn.domob.android.i.f b() -> b
    void a(cn.domob.android.ads.a.b,android.net.Uri,int) -> a
    void a(cn.domob.android.ads.a.b,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Handler a(cn.domob.android.ads.a.b) -> a
    boolean b(cn.domob.android.ads.a.b) -> b
    boolean c(cn.domob.android.ads.a.b) -> c
    cn.domob.android.ads.a.e d(cn.domob.android.ads.a.b) -> d
    android.app.Activity e(cn.domob.android.ads.a.b) -> e
cn.domob.android.ads.a.b$1 -> cn.domob.android.ads.a.b$1:
    cn.domob.android.ads.a.b a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.a.b$2 -> cn.domob.android.ads.a.b$2:
    cn.domob.android.ads.a.b a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.a.b$3 -> cn.domob.android.ads.a.b$3:
    cn.domob.android.ads.a.b a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.b$a -> cn.domob.android.ads.a.b$a:
    cn.domob.android.ads.a.b a -> a
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.a.b$b -> cn.domob.android.ads.a.b$b:
    java.lang.String b -> b
    java.lang.String c -> c
    cn.domob.android.ads.a.b a -> a
    void run() -> run
cn.domob.android.ads.a.b$c -> cn.domob.android.ads.a.b$c:
    java.lang.String b -> b
    cn.domob.android.ads.a.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
    void a(java.lang.String,boolean) -> a
cn.domob.android.ads.a.c -> cn.domob.android.ads.a.c:
    cn.domob.android.i.f m -> m
    cn.domob.android.ads.a.e n -> n
    cn.domob.android.ads.x$a o -> o
    android.os.Handler g -> g
    boolean p -> p
    boolean q -> q
    boolean r -> r
    java.lang.String h -> h
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    cn.domob.android.f.g N -> N
    void a() -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void n() -> n
    void a(cn.domob.android.ads.a.e,cn.domob.android.ads.i$b$a,boolean) -> a
    void a(cn.domob.android.ads.i$b$a) -> a
    void o() -> o
    boolean a(android.webkit.WebView,java.lang.String,boolean) -> a
    boolean b(android.webkit.WebView,java.lang.String,boolean) -> b
    void p() -> p
    void a(android.net.Uri) -> a
    void r() -> r
    void s() -> s
    void t() -> t
    void u() -> u
    void a(java.lang.String,android.webkit.WebView) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String) -> b
    boolean q() -> q
    void w() -> w
    void a_() -> a_
    void b_() -> b_
    void a_(java.lang.String) -> a_
    void c(java.lang.String) -> c
    void c(cn.domob.android.ads.p) -> c
    void d(cn.domob.android.ads.p) -> d
    void e(cn.domob.android.ads.p) -> e
    void f(cn.domob.android.ads.p) -> f
    void g(cn.domob.android.ads.p) -> g
    void h(cn.domob.android.ads.p) -> h
    void i(cn.domob.android.ads.p) -> i
    void j(cn.domob.android.ads.p) -> j
    void a(cn.domob.android.ads.p) -> a
    void b(cn.domob.android.ads.p) -> b
    void a(java.lang.String,cn.domob.android.ads.p) -> a
    java.util.HashMap a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.net.Uri b(android.net.Uri) -> b
    java.lang.String a(android.net.Uri,java.lang.String) -> a
    void a(int,int) -> a
    void a(java.util.HashMap,java.lang.String,long) -> a
    android.content.Context a(cn.domob.android.ads.a.c) -> a
    cn.domob.android.ads.j b(cn.domob.android.ads.a.c) -> b
    cn.domob.android.ads.j c(cn.domob.android.ads.a.c) -> c
    android.view.View a(cn.domob.android.ads.a.c,android.view.View) -> a
    void a(cn.domob.android.ads.a.c,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> a
    cn.domob.android.i.f v() -> v
    cn.domob.android.ads.i d(cn.domob.android.ads.a.c) -> d
    cn.domob.android.ads.a.e a(cn.domob.android.ads.a.c,cn.domob.android.ads.a.e) -> a
    android.content.Context e(cn.domob.android.ads.a.c) -> e
    cn.domob.android.ads.a.e f(cn.domob.android.ads.a.c) -> f
    void a(cn.domob.android.ads.a.c,cn.domob.android.ads.a.e,cn.domob.android.ads.i$b$a,boolean) -> a
    void g(cn.domob.android.ads.a.c) -> g
    void b(cn.domob.android.ads.a.c,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> b
    void c(cn.domob.android.ads.a.c,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> c
    void h(cn.domob.android.ads.a.c) -> h
    void i(cn.domob.android.ads.a.c) -> i
    cn.domob.android.ads.i j(cn.domob.android.ads.a.c) -> j
    cn.domob.android.ads.i k(cn.domob.android.ads.a.c) -> k
    void a(cn.domob.android.ads.a.c,cn.domob.android.ads.i$b$a) -> a
    void d(cn.domob.android.ads.a.c,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> d
    void l(cn.domob.android.ads.a.c) -> l
    void m(cn.domob.android.ads.a.c) -> m
    void n(cn.domob.android.ads.a.c) -> n
    void o(cn.domob.android.ads.a.c) -> o
    android.content.Context p(cn.domob.android.ads.a.c) -> p
cn.domob.android.ads.a.c$1 -> cn.domob.android.ads.a.c$1:
    cn.domob.android.ads.i$b a -> a
    cn.domob.android.ads.a.c b -> b
    void run() -> run
cn.domob.android.ads.a.c$1$1 -> cn.domob.android.ads.a.c$1$1:
    cn.domob.android.ads.a.c$1 a -> a
    void c(cn.domob.android.ads.a) -> c
    void a(cn.domob.android.ads.a) -> a
    void b(cn.domob.android.ads.a) -> b
cn.domob.android.ads.a.c$1$2 -> cn.domob.android.ads.a.c$1$2:
    cn.domob.android.ads.a.c$1 a -> a
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.a.c$2 -> cn.domob.android.ads.a.c$2:
    cn.domob.android.ads.a.c a -> a
    void c(cn.domob.android.ads.a) -> c
    void a(cn.domob.android.ads.a) -> a
    void b(cn.domob.android.ads.a) -> b
cn.domob.android.ads.a.c$3 -> cn.domob.android.ads.a.c$3:
    cn.domob.android.ads.a.e a -> a
    cn.domob.android.ads.a.c b -> b
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.a.c$4 -> cn.domob.android.ads.a.c$4:
    cn.domob.android.ads.a.c a -> a
    void a() -> a
cn.domob.android.ads.a.c$5 -> cn.domob.android.ads.a.c$5:
    cn.domob.android.ads.a.c a -> a
    void run() -> run
cn.domob.android.ads.a.c$6 -> cn.domob.android.ads.a.c$6:
    cn.domob.android.ads.a.c a -> a
    void run() -> run
cn.domob.android.ads.a.c$7 -> cn.domob.android.ads.a.c$7:
    cn.domob.android.ads.a.c a -> a
    void run() -> run
cn.domob.android.ads.a.d -> cn.domob.android.ads.a.d:
    cn.domob.android.i.f a -> a
    android.webkit.WebView b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    android.app.Dialog f -> f
    cn.domob.android.ads.a.d$b g -> g
    android.os.Handler h -> h
    android.widget.RelativeLayout i -> i
    float j -> j
    android.view.View k -> k
    android.widget.ImageButton l -> l
    android.widget.ImageButton m -> m
    android.widget.ImageButton n -> n
    android.widget.ImageButton o -> o
    android.widget.ImageButton p -> p
    android.widget.ImageView q -> q
    android.view.animation.RotateAnimation r -> r
    android.view.animation.Animation s -> s
    android.view.animation.Animation t -> t
    boolean u -> u
    boolean v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    java.lang.String[] S -> S
    android.app.Dialog a() -> a
    android.view.View d() -> d
    void e() -> e
    boolean f() -> f
    boolean a(int,int) -> a
    android.webkit.WebView g() -> g
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.widget.LinearLayout a(java.lang.String,android.widget.ImageButton) -> a
    android.widget.LinearLayout h() -> h
    void i() -> i
    android.widget.LinearLayout j() -> j
    void k() -> k
    android.widget.LinearLayout l() -> l
    void m() -> m
    android.widget.LinearLayout n() -> n
    void o() -> o
    android.widget.LinearLayout p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void t() -> t
    android.webkit.WebView a(cn.domob.android.ads.a.d) -> a
    android.widget.RelativeLayout b(cn.domob.android.ads.a.d) -> b
    cn.domob.android.ads.a.d$b c(cn.domob.android.ads.a.d) -> c
    boolean d(cn.domob.android.ads.a.d) -> d
    cn.domob.android.i.f b() -> b
    java.lang.String[] c() -> c
    android.content.Context e(cn.domob.android.ads.a.d) -> e
    boolean a(cn.domob.android.ads.a.d,boolean) -> a
    void f(cn.domob.android.ads.a.d) -> f
    void g(cn.domob.android.ads.a.d) -> g
    java.lang.String h(cn.domob.android.ads.a.d) -> h
    void i(cn.domob.android.ads.a.d) -> i
    void j(cn.domob.android.ads.a.d) -> j
    boolean b(cn.domob.android.ads.a.d,boolean) -> b
    android.graphics.drawable.Drawable a(cn.domob.android.ads.a.d,android.content.Context,java.lang.String) -> a
    android.widget.ImageButton k(cn.domob.android.ads.a.d) -> k
    android.app.Dialog l(cn.domob.android.ads.a.d) -> l
    void m(cn.domob.android.ads.a.d) -> m
    android.widget.ImageButton n(cn.domob.android.ads.a.d) -> n
    void o(cn.domob.android.ads.a.d) -> o
    android.widget.ImageButton p(cn.domob.android.ads.a.d) -> p
    void q(cn.domob.android.ads.a.d) -> q
    java.lang.String r(cn.domob.android.ads.a.d) -> r
    android.widget.ImageButton s(cn.domob.android.ads.a.d) -> s
    void t(cn.domob.android.ads.a.d) -> t
    android.widget.ImageButton u(cn.domob.android.ads.a.d) -> u
cn.domob.android.ads.a.d$1 -> cn.domob.android.ads.a.d$1:
    cn.domob.android.ads.a.d a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
cn.domob.android.ads.a.d$10 -> cn.domob.android.ads.a.d$10:
    cn.domob.android.ads.a.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.a.d$11 -> cn.domob.android.ads.a.d$11:
    cn.domob.android.ads.a.d a -> a
    void run() -> run
cn.domob.android.ads.a.d$12 -> cn.domob.android.ads.a.d$12:
    cn.domob.android.ads.a.d a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.d$13 -> cn.domob.android.ads.a.d$13:
    cn.domob.android.ads.a.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.a.d$14 -> cn.domob.android.ads.a.d$14:
    cn.domob.android.ads.a.d a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.d$2 -> cn.domob.android.ads.a.d$2:
    cn.domob.android.ads.a.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.a.d$3 -> cn.domob.android.ads.a.d$3:
    cn.domob.android.ads.a.d a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.d$4 -> cn.domob.android.ads.a.d$4:
    cn.domob.android.ads.a.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.a.d$5 -> cn.domob.android.ads.a.d$5:
    cn.domob.android.ads.a.d a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.d$6 -> cn.domob.android.ads.a.d$6:
    cn.domob.android.ads.a.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.a.d$7 -> cn.domob.android.ads.a.d$7:
    cn.domob.android.ads.a.d a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
cn.domob.android.ads.a.d$7$1 -> cn.domob.android.ads.a.d$7$1:
    cn.domob.android.ads.a.d$7 a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
cn.domob.android.ads.a.d$7$2 -> cn.domob.android.ads.a.d$7$2:
    cn.domob.android.ads.a.d$7 a -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
cn.domob.android.ads.a.d$7$3 -> cn.domob.android.ads.a.d$7$3:
    android.app.Dialog a -> a
    cn.domob.android.ads.a.d$7 b -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
cn.domob.android.ads.a.d$8 -> cn.domob.android.ads.a.d$8:
    cn.domob.android.ads.a.d a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
cn.domob.android.ads.a.d$9 -> cn.domob.android.ads.a.d$9:
    cn.domob.android.ads.a.d a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.a.d$a -> cn.domob.android.ads.a.d$a:
    cn.domob.android.ads.a.d a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
cn.domob.android.ads.a.d$b -> cn.domob.android.ads.a.d$b:
    void r() -> r
    void s() -> s
    void t() -> t
    void u() -> u
    void a(java.lang.String,android.webkit.WebView) -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.a.e -> cn.domob.android.ads.a.e:
    cn.domob.android.i.f d -> d
    java.lang.String e -> e
    java.lang.String d() -> d
    java.lang.String a(java.lang.String,java.lang.String[]) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
cn.domob.android.ads.b -> cn.domob.android.ads.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String[] x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    int F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    boolean O -> O
    int P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String[] T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
cn.domob.android.ads.b.a -> cn.domob.android.ads.b.a:
    cn.domob.android.i.f g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    android.os.Handler k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    void a() -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void o() -> o
    boolean a(android.webkit.WebView,java.lang.String,boolean) -> a
    boolean b(android.webkit.WebView,java.lang.String,boolean) -> b
    void p() -> p
    void r() -> r
    void s() -> s
    void t() -> t
    void u() -> u
    void a(java.lang.String,android.webkit.WebView) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String) -> b
    boolean q() -> q
    void v() -> v
    void a(int,int) -> a
    void a(java.util.HashMap,java.lang.String,long) -> a
    android.content.Context a(cn.domob.android.ads.b.a) -> a
    cn.domob.android.ads.j b(cn.domob.android.ads.b.a) -> b
    cn.domob.android.ads.j c(cn.domob.android.ads.b.a) -> c
    android.view.View a(cn.domob.android.ads.b.a,android.view.View) -> a
    void a(cn.domob.android.ads.b.a,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> a
    cn.domob.android.i.f n() -> n
    void d(cn.domob.android.ads.b.a) -> d
    void b(cn.domob.android.ads.b.a,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> b
    boolean a(cn.domob.android.ads.b.a,android.webkit.WebView,java.lang.String,boolean) -> a
    int e(cn.domob.android.ads.b.a) -> e
    int f(cn.domob.android.ads.b.a) -> f
    void g(cn.domob.android.ads.b.a) -> g
    void h(cn.domob.android.ads.b.a) -> h
    int i(cn.domob.android.ads.b.a) -> i
    void j(cn.domob.android.ads.b.a) -> j
    void c(cn.domob.android.ads.b.a,cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> c
cn.domob.android.ads.b.a$1 -> cn.domob.android.ads.b.a$1:
    cn.domob.android.ads.i$b a -> a
    cn.domob.android.ads.b.a b -> b
    void run() -> run
cn.domob.android.ads.b.a$1$1 -> cn.domob.android.ads.b.a$1$1:
    cn.domob.android.ads.b.a$1 a -> a
    void c(cn.domob.android.ads.a) -> c
    void a(cn.domob.android.ads.a) -> a
    void b(cn.domob.android.ads.a) -> b
cn.domob.android.ads.b.a$1$2 -> cn.domob.android.ads.b.a$1$2:
    cn.domob.android.ads.b.a$1 a -> a
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.b.a$1$3 -> cn.domob.android.ads.b.a$1$3:
    cn.domob.android.ads.b.a$1 a -> a
    void a() -> a
    void b() -> b
cn.domob.android.ads.b.a$1$4 -> cn.domob.android.ads.b.a$1$4:
    cn.domob.android.ads.b.a$1 a -> a
    void a(cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.a$1$5 -> cn.domob.android.ads.b.a$1$5:
    cn.domob.android.ads.b.a$1 a -> a
    void a(cn.domob.android.ads.b.m,cn.domob.android.ads.b.m$l) -> a
cn.domob.android.ads.b.b -> cn.domob.android.ads.b.b:
    java.util.Map a -> a
    cn.domob.android.ads.b.m b -> b
    void a() -> a
    int a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    float c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
cn.domob.android.ads.b.c -> cn.domob.android.ads.b.c:
    void a() -> a
cn.domob.android.ads.b.d -> cn.domob.android.ads.b.d:
    void a() -> a
cn.domob.android.ads.b.e -> cn.domob.android.ads.b.e:
    cn.domob.android.i.f c -> c
    void a() -> a
cn.domob.android.ads.b.f -> cn.domob.android.ads.b.f:
    cn.domob.android.i.f a -> a
    java.util.Map b -> b
    cn.domob.android.ads.b.b a(java.lang.String,java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.f$1 -> cn.domob.android.ads.b.f$1:
    cn.domob.android.ads.b.b a(java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.f$2 -> cn.domob.android.ads.b.f$2:
    cn.domob.android.ads.b.b a(java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.f$3 -> cn.domob.android.ads.b.f$3:
    cn.domob.android.ads.b.b a(java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.f$4 -> cn.domob.android.ads.b.f$4:
    cn.domob.android.ads.b.b a(java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.f$a -> cn.domob.android.ads.b.f$a:
    cn.domob.android.ads.b.b a(java.util.Map,cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.g -> cn.domob.android.ads.b.g:
    void a() -> a
cn.domob.android.ads.b.h -> cn.domob.android.ads.b.h:
    cn.domob.android.i.f f -> f
    long g -> g
    int h -> h
    java.lang.String i -> i
    cn.domob.android.ads.b.m j -> j
    android.content.Context k -> k
    cn.domob.android.ads.b.m$l l -> l
    cn.domob.android.ads.b.m$b m -> m
    cn.domob.android.ads.b.m$d n -> n
    android.widget.FrameLayout o -> o
    boolean p -> p
    java.lang.Runnable q -> q
    android.os.Handler r -> r
    int s -> s
    android.content.BroadcastReceiver a -> a
    android.widget.ImageView t -> t
    boolean u -> u
    float b -> b
    int c -> c
    int d -> d
    int v -> v
    int w -> w
    android.widget.FrameLayout e -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void a() -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    void i() -> i
    void a(java.lang.String,int,int,boolean,boolean) -> a
    void j() -> j
    android.view.ViewGroup a(android.view.View,int,int) -> a
    void c(boolean) -> c
    void a(boolean) -> a
    void b(boolean) -> b
    boolean e() -> e
    boolean a(cn.domob.android.ads.b.h) -> a
    boolean a(cn.domob.android.ads.b.h,boolean) -> a
    cn.domob.android.ads.b.m b(cn.domob.android.ads.b.h) -> b
    android.os.Handler c(cn.domob.android.ads.b.h) -> c
cn.domob.android.ads.b.h$1 -> cn.domob.android.ads.b.h$1:
    cn.domob.android.ads.b.h a -> a
    void run() -> run
cn.domob.android.ads.b.h$2 -> cn.domob.android.ads.b.h$2:
    cn.domob.android.ads.b.h a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.domob.android.ads.b.h$3 -> cn.domob.android.ads.b.h$3:
    cn.domob.android.ads.b.h a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.b.h$4 -> cn.domob.android.ads.b.h$4:
    cn.domob.android.ads.b.h a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.b.i -> cn.domob.android.ads.b.i:
    cn.domob.android.ads.b.m$k a -> a
    cn.domob.android.ads.b.i a(cn.domob.android.ads.b.m$k) -> a
    java.lang.String a() -> a
cn.domob.android.ads.b.j -> cn.domob.android.ads.b.j:
    cn.domob.android.i.f a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String toString() -> toString
    java.lang.String a() -> a
cn.domob.android.ads.b.k -> cn.domob.android.ads.b.k:
    int a -> a
    int b -> b
    cn.domob.android.ads.b.k a(int,int) -> a
    java.lang.String a() -> a
cn.domob.android.ads.b.l -> cn.domob.android.ads.b.l:
    cn.domob.android.ads.b.m$l a -> a
    cn.domob.android.ads.b.l a(cn.domob.android.ads.b.m$l) -> a
    java.lang.String a() -> a
cn.domob.android.ads.b.m -> cn.domob.android.ads.b.m:
    cn.domob.android.i.f h -> h
    cn.domob.android.ads.b.h i -> i
    cn.domob.android.ads.b.m$k j -> j
    cn.domob.android.ads.b.m$a d -> d
    cn.domob.android.ads.b.m$c k -> k
    cn.domob.android.ads.a.d$b l -> l
    int e -> e
    int f -> f
    int g -> g
    void a(cn.domob.android.ads.b.m$b,cn.domob.android.ads.b.m$d) -> a
    java.lang.String a(java.lang.String,java.lang.String[]) -> a
    void destroy() -> destroy
    cn.domob.android.ads.b.h c() -> c
    void a(cn.domob.android.ads.b.m$g) -> a
    cn.domob.android.ads.b.m$g d() -> d
    void a(cn.domob.android.ads.b.m$f) -> a
    cn.domob.android.ads.b.m$f e() -> e
    void a(cn.domob.android.ads.b.m$j) -> a
    cn.domob.android.ads.b.m$j f() -> f
    void a(cn.domob.android.ads.b.m$h) -> a
    cn.domob.android.ads.b.m$h g() -> g
    void a(cn.domob.android.ads.b.m$e) -> a
    cn.domob.android.ads.b.m$e h() -> h
    void a(cn.domob.android.ads.b.m$i) -> a
    cn.domob.android.ads.b.m$i i() -> i
    void a(cn.domob.android.ads.b.m$a) -> a
    cn.domob.android.ads.b.m$a j() -> j
    void a(cn.domob.android.ads.a.d$b) -> a
    cn.domob.android.ads.a.d$b k() -> k
    void l() -> l
    void a(cn.domob.android.ads.b.j) -> a
    void a(java.util.ArrayList) -> a
    void b(java.lang.String,java.lang.String) -> b
    void m() -> m
    void b(java.lang.String) -> b
    boolean a(java.net.URI) -> a
cn.domob.android.ads.b.m$1 -> cn.domob.android.ads.b.m$1:
    cn.domob.android.ads.b.m a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.ads.b.m$a -> cn.domob.android.ads.b.m$a:
    void a() -> a
    void b() -> b
cn.domob.android.ads.b.m$b -> cn.domob.android.ads.b.m$b:
    cn.domob.android.ads.b.m$b a -> a
    cn.domob.android.ads.b.m$b b -> b
    cn.domob.android.ads.b.m$b[] c -> c
    cn.domob.android.ads.b.m$b[] values() -> values
    cn.domob.android.ads.b.m$b valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.b.m$c -> cn.domob.android.ads.b.m$c:
    cn.domob.android.ads.b.m$g a -> a
    cn.domob.android.ads.b.m$f b -> b
    cn.domob.android.ads.b.m$j c -> c
    cn.domob.android.ads.b.m$h d -> d
    cn.domob.android.ads.b.m$e e -> e
    cn.domob.android.ads.b.m$i f -> f
    cn.domob.android.ads.b.m$g a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$g) -> a
    cn.domob.android.ads.b.m$g a(cn.domob.android.ads.b.m$c) -> a
    cn.domob.android.ads.b.m$f a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$f) -> a
    cn.domob.android.ads.b.m$f b(cn.domob.android.ads.b.m$c) -> b
    cn.domob.android.ads.b.m$j a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$j) -> a
    cn.domob.android.ads.b.m$j c(cn.domob.android.ads.b.m$c) -> c
    cn.domob.android.ads.b.m$h a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$h) -> a
    cn.domob.android.ads.b.m$h d(cn.domob.android.ads.b.m$c) -> d
    cn.domob.android.ads.b.m$e a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$e) -> a
    cn.domob.android.ads.b.m$e e(cn.domob.android.ads.b.m$c) -> e
    cn.domob.android.ads.b.m$i a(cn.domob.android.ads.b.m$c,cn.domob.android.ads.b.m$i) -> a
    cn.domob.android.ads.b.m$i f(cn.domob.android.ads.b.m$c) -> f
cn.domob.android.ads.b.m$d -> cn.domob.android.ads.b.m$d:
    cn.domob.android.ads.b.m$d a -> a
    cn.domob.android.ads.b.m$d b -> b
    cn.domob.android.ads.b.m$d c -> c
    cn.domob.android.ads.b.m$d[] d -> d
    cn.domob.android.ads.b.m$d[] values() -> values
    cn.domob.android.ads.b.m$d valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.b.m$e -> cn.domob.android.ads.b.m$e:
    void a(cn.domob.android.ads.b.m,boolean) -> a
cn.domob.android.ads.b.m$f -> cn.domob.android.ads.b.m$f:
    void a(cn.domob.android.ads.b.m,cn.domob.android.ads.b.m$l) -> a
cn.domob.android.ads.b.m$g -> cn.domob.android.ads.b.m$g:
    void a(cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.m$h -> cn.domob.android.ads.b.m$h:
    void a(cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.m$i -> cn.domob.android.ads.b.m$i:
    void a(cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.m$j -> cn.domob.android.ads.b.m$j:
    void a(cn.domob.android.ads.b.m) -> a
cn.domob.android.ads.b.m$k -> cn.domob.android.ads.b.m$k:
    cn.domob.android.ads.b.m$k a -> a
    cn.domob.android.ads.b.m$k b -> b
    cn.domob.android.ads.b.m$k[] c -> c
    cn.domob.android.ads.b.m$k[] values() -> values
    cn.domob.android.ads.b.m$k valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.b.m$l -> cn.domob.android.ads.b.m$l:
    cn.domob.android.ads.b.m$l a -> a
    cn.domob.android.ads.b.m$l b -> b
    cn.domob.android.ads.b.m$l c -> c
    cn.domob.android.ads.b.m$l d -> d
    cn.domob.android.ads.b.m$l[] e -> e
    cn.domob.android.ads.b.m$l[] values() -> values
    cn.domob.android.ads.b.m$l valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.b.n -> cn.domob.android.ads.b.n:
    boolean a -> a
    cn.domob.android.ads.b.n a(boolean) -> a
    java.lang.String a() -> a
cn.domob.android.ads.c -> cn.domob.android.ads.c:
    cn.domob.android.i.f a -> a
    void a(android.content.Context) -> a
    cn.domob.android.ads.S b(android.content.Context) -> b
    boolean a(android.content.Context,cn.domob.android.ads.S) -> a
    void a(android.content.Context,java.lang.String) -> a
    int b(android.content.Context,java.lang.String) -> b
    java.lang.String c(android.content.Context,java.lang.String) -> c
    boolean d(android.content.Context,java.lang.String) -> d
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String e(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    void f(android.content.Context,java.lang.String) -> f
    void g(android.content.Context,java.lang.String) -> g
    void c(android.content.Context) -> c
    void a(java.lang.String) -> a
cn.domob.android.ads.c.a -> cn.domob.android.ads.c.a:
    android.content.Context k -> k
    java.lang.String l -> l
    android.content.SharedPreferences m -> m
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(java.util.HashMap) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
    int a(java.lang.String,int) -> a
    long a(java.lang.String,long) -> a
    float a(java.lang.String,float) -> a
cn.domob.android.ads.c.b -> cn.domob.android.ads.c.b:
    android.content.Context i -> i
    cn.domob.android.ads.c.b j -> j
    android.database.sqlite.SQLiteDatabase k -> k
    cn.domob.android.i.f l -> l
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    cn.domob.android.ads.c.b a(android.content.Context) -> a
    android.content.Context a() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    boolean a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[]) -> a
    void b() -> b
cn.domob.android.ads.c.b$a -> cn.domob.android.ads.c.b$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
cn.domob.android.ads.c.b$b -> cn.domob.android.ads.c.b$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.domob.android.ads.c.c -> cn.domob.android.ads.c.c:
    cn.domob.android.i.f a -> a
    float b -> b
    boolean a(android.graphics.Bitmap,long,java.lang.String) -> a
cn.domob.android.ads.c.d -> cn.domob.android.ads.c.d:
    android.os.Handler a -> a
    cn.domob.android.ads.c.d$a b -> b
    cn.domob.android.ads.c.d$c c -> c
    long d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    boolean h() -> h
    void a(cn.domob.android.ads.c.d$b) -> a
    boolean g() -> g
cn.domob.android.ads.c.d$a -> cn.domob.android.ads.c.d$a:
    boolean b -> b
    cn.domob.android.ads.c.d$b c -> c
    cn.domob.android.ads.c.d a -> a
    void a(cn.domob.android.ads.c.d$b) -> a
    boolean a() -> a
    void run() -> run
    boolean b() -> b
cn.domob.android.ads.c.d$b -> cn.domob.android.ads.c.d$b:
    void a() -> a
cn.domob.android.ads.c.d$c -> cn.domob.android.ads.c.d$c:
    cn.domob.android.ads.c.d$c a -> a
    cn.domob.android.ads.c.d$c b -> b
    cn.domob.android.ads.c.d$c c -> c
    cn.domob.android.ads.c.d$c[] d -> d
    cn.domob.android.ads.c.d$c[] values() -> values
    cn.domob.android.ads.c.d$c valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.c.e -> cn.domob.android.ads.c.e:
    cn.domob.android.i.f a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
cn.domob.android.ads.d -> cn.domob.android.ads.d:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.d b -> b
    cn.domob.android.ads.d$a c -> c
    java.util.Hashtable d -> d
    cn.domob.android.ads.d a() -> a
    void a(android.content.Context,cn.domob.android.ads.d$a) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(cn.domob.android.ads.p) -> a
    void a(java.lang.String) -> a
cn.domob.android.ads.d$a -> cn.domob.android.ads.d$a:
    void a(cn.domob.android.ads.p) -> a
    void b(cn.domob.android.ads.p) -> b
cn.domob.android.ads.e -> cn.domob.android.ads.e:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.m a(android.content.Context,cn.domob.android.ads.f,cn.domob.android.ads.i,int,int) -> a
cn.domob.android.ads.f -> cn.domob.android.ads.f:
    cn.domob.android.i.f J -> J
    android.content.Context a -> a
    android.content.Context b -> b
    java.lang.String K -> K
    java.lang.String c -> c
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    boolean S -> S
    boolean T -> T
    boolean U -> U
    boolean V -> V
    int W -> W
    android.os.Handler X -> X
    long Y -> Y
    long Z -> Z
    cn.domob.android.ads.k aa -> aa
    int ab -> ab
    cn.domob.android.ads.DomobAdView d -> d
    cn.domob.android.ads.i e -> e
    cn.domob.android.ads.f$b f -> f
    cn.domob.android.ads.m g -> g
    cn.domob.android.h.a h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    cn.domob.android.ads.f$a l -> l
    cn.domob.android.ads.f$c m -> m
    cn.domob.android.ads.f$d n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    void I() -> I
    void J() -> J
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    long g() -> g
    void a(boolean) -> a
    boolean h() -> h
    void b(boolean) -> b
    boolean i() -> i
    boolean j() -> j
    void k() -> k
    void l() -> l
    void a(java.lang.String) -> a
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    cn.domob.android.ads.f$a p() -> p
    void a(cn.domob.android.ads.f$a) -> a
    java.lang.String q() -> q
    android.widget.RelativeLayout r() -> r
    void b(java.lang.String) -> b
    java.lang.String s() -> s
    void c(java.lang.String) -> c
    java.lang.String t() -> t
    void d(java.lang.String) -> d
    java.lang.String u() -> u
    void e(java.lang.String) -> e
    java.lang.String v() -> v
    void f(java.lang.String) -> f
    java.lang.String w() -> w
    android.content.Context x() -> x
    void c(boolean) -> c
    int y() -> y
    void a(int) -> a
    cn.domob.android.ads.DomobAdListener z() -> z
    boolean A() -> A
    void d(boolean) -> d
    void a(long) -> a
    cn.domob.android.ads.i B() -> B
    void C() -> C
    void a(cn.domob.android.ads.f) -> a
    void a(cn.domob.android.ads.i) -> a
    void a(cn.domob.android.ads.i,java.util.HashMap,java.lang.String) -> a
    void a(cn.domob.android.ads.i,java.lang.String,java.lang.String,long) -> a
    void a(cn.domob.android.ads.i,java.util.HashMap,java.lang.String,java.lang.String,long,java.lang.String) -> a
    void a(cn.domob.android.ads.i,java.util.HashMap,java.lang.String,java.lang.String,long,java.lang.String,android.view.View) -> a
    void D() -> D
    void E() -> E
    void K() -> K
    void L() -> L
    void F() -> F
    void a(cn.domob.android.ads.i,int) -> a
    void b(cn.domob.android.ads.i,int) -> b
    boolean M() -> M
    void N() -> N
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode) -> a
    cn.domob.android.g.a.e O() -> O
    void a(java.lang.String,int,java.lang.String) -> a
    void b(java.lang.String,int,java.lang.String) -> b
    void c(java.lang.String,int,java.lang.String) -> c
    void d(java.lang.String,int,java.lang.String) -> d
    void e(java.lang.String,int,java.lang.String) -> e
    void f(java.lang.String,int,java.lang.String) -> f
    void g(java.lang.String,int,java.lang.String) -> g
    void h(java.lang.String,int,java.lang.String) -> h
    void i(java.lang.String,int,java.lang.String) -> i
    void j(java.lang.String,int,java.lang.String) -> j
    void k(java.lang.String,int,java.lang.String) -> k
    void a(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int,java.lang.String) -> a
    void k(java.lang.String) -> k
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void a(cn.domob.android.ads.p) -> a
    void b(cn.domob.android.ads.p) -> b
    void a(java.lang.String,cn.domob.android.ads.p) -> a
    void a(android.content.Context) -> a
    void G() -> G
    void a(java.lang.String,a.a.a.a.a.e) -> a
    void a(cn.domob.android.ads.i,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(cn.domob.android.ads.i,java.lang.String) -> a
    int H() -> H
    void b(int) -> b
    void j(java.lang.String) -> j
    boolean b(cn.domob.android.ads.f) -> b
cn.domob.android.ads.f$1 -> cn.domob.android.ads.f$1:
    cn.domob.android.ads.f a -> a
    void a(java.lang.String) -> a
    void a(cn.domob.android.g.a.a$a) -> a
cn.domob.android.ads.f$2 -> cn.domob.android.ads.f$2:
    cn.domob.android.ads.DomobAdManager$ErrorCode a -> a
    cn.domob.android.ads.f b -> b
    void run() -> run
cn.domob.android.ads.f$3 -> cn.domob.android.ads.f$3:
    cn.domob.android.ads.f a -> a
    void a(android.content.Context,java.lang.Object,java.lang.String,java.lang.String) -> a
    void a() -> a
cn.domob.android.ads.f$3$1 -> cn.domob.android.ads.f$3$1:
    cn.domob.android.ads.f$3 a -> a
    void a(android.content.Context,java.lang.Object,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.Object) -> a
    void b(android.content.Context,java.lang.Object) -> b
    void c(android.content.Context,java.lang.Object) -> c
    void d(android.content.Context,java.lang.Object) -> d
    void b(android.content.Context,java.lang.Object,java.lang.String,long) -> b
cn.domob.android.ads.f$4 -> cn.domob.android.ads.f$4:
    cn.domob.android.ads.f a -> a
    void a(a.a.a.a.a.e) -> a
    void b(a.a.a.a.a.e) -> b
    void c(a.a.a.a.a.e) -> c
    void d(a.a.a.a.a.e) -> d
    void e(a.a.a.a.a.e) -> e
    void f(a.a.a.a.a.e) -> f
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.f$a -> cn.domob.android.ads.f$a:
    cn.domob.android.ads.f$a a -> a
    cn.domob.android.ads.f$a b -> b
    cn.domob.android.ads.f$a[] c -> c
    cn.domob.android.ads.f$a[] values() -> values
    cn.domob.android.ads.f$a valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.f$b -> cn.domob.android.ads.f$b:
    cn.domob.android.ads.f a -> a
    void run() -> run
cn.domob.android.ads.f$c -> cn.domob.android.ads.f$c:
    cn.domob.android.ads.f$c a -> a
    cn.domob.android.ads.f$c b -> b
    cn.domob.android.ads.f$c c -> c
    cn.domob.android.ads.f$c[] d -> d
    cn.domob.android.ads.f$c[] values() -> values
    cn.domob.android.ads.f$c valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.f$d -> cn.domob.android.ads.f$d:
    cn.domob.android.ads.f$d a -> a
    cn.domob.android.ads.f$d b -> b
    cn.domob.android.ads.f$d c -> c
    cn.domob.android.ads.f$d[] d -> d
    cn.domob.android.ads.f$d[] values() -> values
    cn.domob.android.ads.f$d valueOf(java.lang.String) -> valueOf
cn.domob.android.ads.g -> cn.domob.android.ads.g:
    cn.domob.android.i.f b -> b
    cn.domob.android.ads.g c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    long h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    cn.domob.android.ads.D a -> a
    cn.domob.android.ads.g a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    void c(java.lang.String) -> c
    java.lang.String b(android.content.Context) -> b
    void a(boolean,long,int) -> a
    boolean c(android.content.Context) -> c
    long c() -> c
    void d(java.lang.String) -> d
    java.lang.String d() -> d
    boolean e() -> e
    void a(java.lang.String,java.lang.String) -> a
    boolean e(java.lang.String) -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
cn.domob.android.ads.h -> cn.domob.android.ads.h:
    cn.domob.android.i.f b -> b
    cn.domob.android.ads.f c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    int a -> a
    cn.domob.android.f.g ae -> ae
    void a() -> a
    cn.domob.android.f.f c() -> c
    cn.domob.android.i.f b() -> b
    android.content.Context a(cn.domob.android.ads.h) -> a
    cn.domob.android.ads.f b(cn.domob.android.ads.h) -> b
    cn.domob.android.f.g c(cn.domob.android.ads.h) -> c
cn.domob.android.ads.h$1 -> cn.domob.android.ads.h$1:
    cn.domob.android.ads.h a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.h$a -> cn.domob.android.ads.h$a:
    void a(cn.domob.android.ads.i,int) -> a
cn.domob.android.ads.i -> cn.domob.android.ads.i:
    cn.domob.android.i.f al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    cn.domob.android.ads.i$b ap -> ap
    cn.domob.android.ads.i$c aq -> aq
    cn.domob.android.ads.i$a ar -> ar
    android.content.Context as -> as
    org.json.JSONArray at -> at
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    cn.domob.android.ads.i a(java.lang.String) -> a
    cn.domob.android.ads.i a(android.content.Context,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    cn.domob.android.ads.i$b d() -> d
    cn.domob.android.ads.i$c e() -> e
    cn.domob.android.ads.i$a f() -> f
    org.json.JSONArray g() -> g
    cn.domob.android.i.f h() -> h
    android.content.Context a(cn.domob.android.ads.i) -> a
cn.domob.android.ads.i$a -> cn.domob.android.ads.i$a:
    boolean b -> b
    int c -> c
    boolean d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.domob.android.ads.i a -> a
    int a() -> a
    boolean b() -> b
    int c() -> c
    boolean d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
cn.domob.android.ads.i$b -> cn.domob.android.ads.i$b:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    cn.domob.android.ads.i$b$a n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int s -> s
    java.lang.String t -> t
    boolean u -> u
    int[] v -> v
    float w -> w
    float x -> x
    long y -> y
    boolean z -> z
    java.lang.String A -> A
    org.json.JSONArray B -> B
    org.json.JSONObject C -> C
    java.util.HashMap D -> D
    int E -> E
    cn.domob.android.ads.i a -> a
    int[] a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    int g() -> g
    int h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    cn.domob.android.ads.i$b$a m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    int r() -> r
    java.lang.String s() -> s
    boolean t() -> t
    int[] u() -> u
    float v() -> v
    boolean w() -> w
    float x() -> x
    boolean y() -> y
    long z() -> z
    boolean A() -> A
    java.lang.String B() -> B
    void a(int) -> a
    int C() -> C
    org.json.JSONArray D() -> D
    org.json.JSONObject E() -> E
    java.util.HashMap F() -> F
    java.util.HashMap a(org.json.JSONObject) -> a
cn.domob.android.ads.i$b$a -> cn.domob.android.ads.i$b$a:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    int m -> m
    cn.domob.android.ads.i$b a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    boolean g() -> g
    int h() -> h
    boolean i() -> i
    boolean j() -> j
    int k() -> k
    int l() -> l
cn.domob.android.ads.i$c -> cn.domob.android.ads.i$c:
    int b -> b
    java.lang.String c -> c
    cn.domob.android.ads.i a -> a
    int a() -> a
    java.lang.String b() -> b
cn.domob.android.ads.j -> cn.domob.android.ads.j:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
cn.domob.android.ads.k -> cn.domob.android.ads.k:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.f b -> b
    cn.domob.android.ads.l c -> c
    cn.domob.android.ads.e d -> d
    void a(android.content.Context,cn.domob.android.ads.i) -> a
    void a(cn.domob.android.ads.m) -> a
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> a
    void a() -> a
    android.content.Context b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
cn.domob.android.ads.k$1 -> cn.domob.android.ads.k$1:
    cn.domob.android.ads.m a -> a
    cn.domob.android.ads.k b -> b
    void run() -> run
cn.domob.android.ads.l -> cn.domob.android.ads.l:
    void onDomobAdReturned(cn.domob.android.ads.m) -> onDomobAdReturned
    void onDomobAdFailed(cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented() -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed() -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication() -> onDomobLeaveApplication
    void onDomobAdClicked() -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    void close() -> close
    void setCreativeRect(int,int) -> setCreativeRect
    void onProcessActionType(java.lang.String) -> onProcessActionType
cn.domob.android.ads.m -> cn.domob.android.ads.m:
    android.content.Context a -> a
    cn.domob.android.ads.j b -> b
    cn.domob.android.ads.i c -> c
    cn.domob.android.ads.f d -> d
    cn.domob.android.ads.m$a e -> e
    android.view.View f -> f
    void a(cn.domob.android.ads.m$a) -> a
    void a() -> a
    android.view.View b() -> b
    cn.domob.android.ads.i c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(int,int) -> a
    void a(java.util.HashMap,java.lang.String,long) -> a
    void g() -> g
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> a
    void h() -> h
    void a(java.lang.String) -> a
    android.content.Context i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    void m() -> m
cn.domob.android.ads.m$a -> cn.domob.android.ads.m$a:
    void a(cn.domob.android.ads.m) -> a
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode,java.lang.String) -> a
    void a() -> a
    void a(java.lang.String) -> a
    android.content.Context b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
cn.domob.android.ads.n -> cn.domob.android.ads.n:
    cn.domob.android.i.f c -> c
    boolean d -> d
    boolean a -> a
    cn.domob.android.ads.f e -> e
    android.content.Context f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int b -> b
    cn.domob.android.f.g n -> n
    void a() -> a
    cn.domob.android.f.f c() -> c
    cn.domob.android.i.f b() -> b
    cn.domob.android.ads.f a(cn.domob.android.ads.n) -> a
cn.domob.android.ads.n$1 -> cn.domob.android.ads.n$1:
    cn.domob.android.ads.n a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.n$a -> cn.domob.android.ads.n$a:
    void a(cn.domob.android.ads.i,int) -> a
cn.domob.android.ads.o -> cn.domob.android.ads.o:
    java.lang.String a -> a
    org.json.JSONArray b -> b
    cn.domob.android.i.f c -> c
    java.util.ArrayList a() -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
cn.domob.android.ads.p -> cn.domob.android.ads.p:
    cn.domob.android.i.f a -> a
    android.content.Context j -> j
    android.net.Uri k -> k
    cn.domob.android.ads.i l -> l
    java.lang.String m -> m
    boolean n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    int q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    cn.domob.android.ads.p$a t -> t
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    cn.domob.android.ads.i a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
    boolean f() -> f
    java.lang.String g() -> g
    android.net.Uri h() -> h
    void i() -> i
    void j() -> j
    java.lang.String a(android.net.Uri,java.lang.String) -> a
    void k() -> k
    void a(java.lang.String,java.lang.String,int,android.content.Context) -> a
    cn.domob.android.ads.p$a a(cn.domob.android.ads.p) -> a
    android.content.Context b(cn.domob.android.ads.p) -> b
cn.domob.android.ads.p$1 -> cn.domob.android.ads.p$1:
    android.content.Intent a -> a
    cn.domob.android.ads.p b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.p$2 -> cn.domob.android.ads.p$2:
    cn.domob.android.ads.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.ads.p$3 -> cn.domob.android.ads.p$3:
    cn.domob.android.ads.p a -> a
    void a() -> a
    void a(java.lang.String,long) -> a
    void a(int,java.lang.String) -> a
    void b() -> b
    void a(java.lang.String) -> a
    void b(java.lang.String,long) -> b
cn.domob.android.ads.p$4 -> cn.domob.android.ads.p$4:
    void a(java.lang.String,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void b(java.lang.String,long) -> b
cn.domob.android.ads.p$a -> cn.domob.android.ads.p$a:
    void c(cn.domob.android.ads.p) -> c
    void d(cn.domob.android.ads.p) -> d
    void e(cn.domob.android.ads.p) -> e
    void f(cn.domob.android.ads.p) -> f
    void g(cn.domob.android.ads.p) -> g
    void h(cn.domob.android.ads.p) -> h
    void i(cn.domob.android.ads.p) -> i
    void j(cn.domob.android.ads.p) -> j
cn.domob.android.ads.q -> cn.domob.android.ads.q:
    cn.domob.android.i.f b -> b
    cn.domob.android.ads.f c -> c
    android.content.Context d -> d
    java.lang.String a -> a
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    cn.domob.android.f.g u -> u
    void a() -> a
    cn.domob.android.f.f c() -> c
    cn.domob.android.i.f b() -> b
    android.content.Context a(cn.domob.android.ads.q) -> a
cn.domob.android.ads.q$1 -> cn.domob.android.ads.q$1:
    cn.domob.android.ads.q a -> a
    void a(java.lang.String,java.lang.String) -> a
cn.domob.android.ads.q$a -> cn.domob.android.ads.q$a:
    void a(cn.domob.android.ads.i,int) -> a
cn.domob.android.ads.r -> cn.domob.android.ads.r:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    cn.domob.android.i.f s -> s
    void a(java.lang.String,android.content.Context) -> a
    boolean b(java.lang.String,android.content.Context) -> b
    boolean a(android.content.SharedPreferences,java.lang.StringBuilder) -> a
cn.domob.android.ads.s -> cn.domob.android.ads.s:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    cn.domob.android.ads.s$b c -> c
    cn.domob.android.ads.s$a d -> d
    android.content.Context e -> e
    int f -> f
    int g -> g
    boolean h -> h
    int i -> i
    java.lang.String a(java.lang.String,cn.domob.android.ads.f) -> a
    java.lang.String a(java.lang.String,int,cn.domob.android.ads.f) -> a
cn.domob.android.ads.s$a -> cn.domob.android.ads.s$a:
    cn.domob.android.ads.s a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
cn.domob.android.ads.s$b -> cn.domob.android.ads.s$b:
    cn.domob.android.ads.s a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
cn.domob.android.ads.t -> cn.domob.android.ads.t:
    cn.domob.android.i.f r -> r
    boolean p -> p
    boolean q -> q
    cn.domob.android.ads.DomobInterstitialAd s -> s
    cn.domob.android.ads.DomobInterstitialAdListener t -> t
    cn.domob.android.ads.x$a u -> u
    cn.domob.android.ads.DomobInterstitialAd$BorderType v -> v
    android.graphics.drawable.Drawable w -> w
    int x -> x
    int y -> y
    java.lang.String z -> z
    void l() -> l
    boolean m() -> m
    void b(android.content.Context) -> b
    void n() -> n
    void o() -> o
    void p() -> p
    boolean t() -> t
    void a(cn.domob.android.ads.m) -> a
    void close() -> close
    void b(cn.domob.android.ads.m) -> b
    boolean q() -> q
    boolean r() -> r
    cn.domob.android.ads.DomobInterstitialAdListener s() -> s
    void a(cn.domob.android.ads.DomobInterstitialAdListener,cn.domob.android.ads.DomobInterstitialAd) -> a
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
cn.domob.android.ads.t$1 -> cn.domob.android.ads.t$1:
    cn.domob.android.ads.t a -> a
    void a() -> a
    void b() -> b
    void c() -> c
cn.domob.android.ads.u -> cn.domob.android.ads.u:
    cn.domob.android.i.f a -> a
    cn.domob.android.ads.O b -> b
    void a() -> a
    void a(cn.domob.android.ads.v) -> a
    boolean b() -> b
    void a(cn.domob.android.ads.B) -> a
    cn.domob.android.ads.O$a c(cn.domob.android.ads.B) -> c
    void b(cn.domob.android.ads.B) -> b
    void a(int) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
cn.domob.android.ads.v -> cn.domob.android.ads.v:
    void a() -> a
    void a(cn.domob.android.ads.DomobAdManager$ErrorCode) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
cn.domob.android.ads.w -> cn.domob.android.ads.w:
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
cn.domob.android.ads.x -> cn.domob.android.ads.x:
    cn.domob.android.i.f k -> k
    int a -> a
    int b -> b
    android.os.Handler l -> l
    android.app.Dialog m -> m
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String n -> n
    java.lang.String o -> o
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    void a() -> a
    boolean a(android.content.Context) -> a
    boolean a(int,int) -> a
    void a(android.view.View,cn.domob.android.ads.x$d) -> a
    cn.domob.android.i.f b() -> b
    void a(cn.domob.android.ads.x,android.view.View,cn.domob.android.ads.x$d) -> a
    android.app.Dialog a(cn.domob.android.ads.x) -> a
cn.domob.android.ads.x$1 -> cn.domob.android.ads.x$1:
    android.view.View a -> a
    cn.domob.android.ads.x$d b -> b
    cn.domob.android.ads.x c -> c
    void onDismiss(android.content.DialogInterface) -> onDismiss
cn.domob.android.ads.x$2 -> cn.domob.android.ads.x$2:
    cn.domob.android.ads.x a -> a
    void onClick(android.view.View) -> onClick
cn.domob.android.ads.x$3 -> cn.domob.android.ads.x$3:
    android.widget.ImageButton a -> a
    cn.domob.android.ads.x b -> b
    void run() -> run
cn.domob.android.ads.x$4 -> cn.domob.android.ads.x$4:
    cn.domob.android.ads.x$d a -> a
    cn.domob.android.ads.x b -> b
    void run() -> run
cn.domob.android.ads.x$5 -> cn.domob.android.ads.x$5:
    cn.domob.android.ads.x a -> a
    void run() -> run
cn.domob.android.ads.x$a -> cn.domob.android.ads.x$a:
    cn.domob.android.ads.x a -> a
    cn.domob.android.ads.x$d b -> b
    cn.domob.android.ads.x$a a(int,int) -> a
    cn.domob.android.ads.x$a a(boolean) -> a
    cn.domob.android.ads.x$a a(int[]) -> a
    cn.domob.android.ads.x$a a(boolean,float) -> a
    cn.domob.android.ads.x$a b(boolean,float) -> b
    cn.domob.android.ads.x$a b(boolean) -> b
    cn.domob.android.ads.x$a a(cn.domob.android.ads.x$c) -> a
    cn.domob.android.ads.x$a a(cn.domob.android.ads.x$b) -> a
    cn.domob.android.ads.x$a a(boolean,boolean,boolean,boolean) -> a
    cn.domob.android.ads.x$a c(boolean) -> c
    cn.domob.android.ads.x$a a(cn.domob.android.ads.DomobInterstitialAd$BorderType) -> a
    cn.domob.android.ads.x$a a(android.graphics.drawable.Drawable) -> a
    cn.domob.android.ads.x$a a(int) -> a
    cn.domob.android.ads.x$a b(int) -> b
    void a(android.view.View) -> a
    void a() -> a
cn.domob.android.ads.x$b -> cn.domob.android.ads.x$b:
    void a() -> a
    void b() -> b
    void c() -> c
cn.domob.android.ads.x$c -> cn.domob.android.ads.x$c:
    void a() -> a
cn.domob.android.ads.x$d -> cn.domob.android.ads.x$d:
    android.content.Context a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    cn.domob.android.ads.x$c h -> h
    cn.domob.android.ads.x$b i -> i
    boolean j -> j
    int[] k -> k
    boolean l -> l
    int m -> m
    boolean n -> n
    int o -> o
    boolean p -> p
    boolean q -> q
    cn.domob.android.ads.DomobInterstitialAd$BorderType r -> r
    android.graphics.drawable.Drawable s -> s
    int t -> t
    int u -> u
    int a(cn.domob.android.ads.x$d,int) -> a
    int b(cn.domob.android.ads.x$d,int) -> b
    boolean a(cn.domob.android.ads.x$d,boolean) -> a
    int[] a(cn.domob.android.ads.x$d,int[]) -> a
    boolean b(cn.domob.android.ads.x$d,boolean) -> b
    int c(cn.domob.android.ads.x$d,int) -> c
    boolean c(cn.domob.android.ads.x$d,boolean) -> c
    int d(cn.domob.android.ads.x$d,int) -> d
    boolean d(cn.domob.android.ads.x$d,boolean) -> d
    cn.domob.android.ads.x$c a(cn.domob.android.ads.x$d,cn.domob.android.ads.x$c) -> a
    cn.domob.android.ads.x$b a(cn.domob.android.ads.x$d,cn.domob.android.ads.x$b) -> a
    boolean e(cn.domob.android.ads.x$d,boolean) -> e
    boolean f(cn.domob.android.ads.x$d,boolean) -> f
    boolean g(cn.domob.android.ads.x$d,boolean) -> g
    boolean h(cn.domob.android.ads.x$d,boolean) -> h
    boolean i(cn.domob.android.ads.x$d,boolean) -> i
    cn.domob.android.ads.DomobInterstitialAd$BorderType a(cn.domob.android.ads.x$d,cn.domob.android.ads.DomobInterstitialAd$BorderType) -> a
    android.graphics.drawable.Drawable a(cn.domob.android.ads.x$d,android.graphics.drawable.Drawable) -> a
    int e(cn.domob.android.ads.x$d,int) -> e
    int f(cn.domob.android.ads.x$d,int) -> f
    android.content.Context a(cn.domob.android.ads.x$d) -> a
    int b(cn.domob.android.ads.x$d) -> b
    int c(cn.domob.android.ads.x$d) -> c
    boolean d(cn.domob.android.ads.x$d) -> d
    cn.domob.android.ads.x$c e(cn.domob.android.ads.x$d) -> e
    cn.domob.android.ads.x$b f(cn.domob.android.ads.x$d) -> f
    boolean g(cn.domob.android.ads.x$d) -> g
    android.graphics.drawable.Drawable h(cn.domob.android.ads.x$d) -> h
    int i(cn.domob.android.ads.x$d) -> i
    int j(cn.domob.android.ads.x$d) -> j
    cn.domob.android.ads.DomobInterstitialAd$BorderType k(cn.domob.android.ads.x$d) -> k
    boolean l(cn.domob.android.ads.x$d) -> l
    boolean m(cn.domob.android.ads.x$d) -> m
    boolean n(cn.domob.android.ads.x$d) -> n
    boolean o(cn.domob.android.ads.x$d) -> o
    boolean p(cn.domob.android.ads.x$d) -> p
    int[] q(cn.domob.android.ads.x$d) -> q
    int r(cn.domob.android.ads.x$d) -> r
    boolean s(cn.domob.android.ads.x$d) -> s
    boolean t(cn.domob.android.ads.x$d) -> t
    int u(cn.domob.android.ads.x$d) -> u
cn.domob.android.ads.y -> cn.domob.android.ads.y:
    cn.domob.android.ads.DomobRTSplashAdListener s -> s
    boolean t -> t
    boolean u -> u
    java.lang.String v -> v
    void a(cn.domob.android.ads.DomobRTSplashAdListener) -> a
    void a(android.content.Context,android.view.View) -> a
    void l() -> l
    void m() -> m
    void n() -> n
    void onSplashPresent() -> onSplashPresent
    void onSplashDismiss() -> onSplashDismiss
    void onSplashLoadFailed() -> onSplashLoadFailed
    boolean o() -> o
    void a(java.lang.String) -> a
    android.content.Context onDomobAdRequiresCurrentContext() -> onDomobAdRequiresCurrentContext
    void onDomobAdClicked(cn.domob.android.ads.DomobAdView) -> onDomobAdClicked
    void onDomobLeaveApplication(cn.domob.android.ads.DomobAdView) -> onDomobLeaveApplication
    void onDomobAdOverlayDismissed(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayDismissed
    void onDomobAdOverlayPresented(cn.domob.android.ads.DomobAdView) -> onDomobAdOverlayPresented
    void onDomobAdFailed(cn.domob.android.ads.DomobAdView,cn.domob.android.ads.DomobAdManager$ErrorCode) -> onDomobAdFailed
    void onDomobAdReturned(cn.domob.android.ads.DomobAdView) -> onDomobAdReturned
    void close() -> close
    void showAd(cn.domob.android.ads.m,android.view.animation.AnimationSet[]) -> showAd
    boolean a(cn.domob.android.ads.y) -> a
    boolean a(cn.domob.android.ads.y,boolean) -> a
    java.lang.String b(cn.domob.android.ads.y) -> b
cn.domob.android.ads.y$1 -> cn.domob.android.ads.y$1:
    cn.domob.android.ads.y a -> a
    void run() -> run
cn.domob.android.ads.z -> cn.domob.android.ads.z:
    cn.domob.android.i.f j -> j
    int k -> k
    void a() -> a
    void n() -> n
    void a(cn.domob.android.ads.a.e) -> a
    cn.domob.android.i.f o() -> o
    int a(cn.domob.android.ads.z) -> a
    int a(cn.domob.android.ads.z,int) -> a
cn.domob.android.ads.z$1 -> cn.domob.android.ads.z$1:
    cn.domob.android.ads.z a -> a
    void a(cn.domob.android.ads.a,java.lang.String) -> a
cn.domob.android.ads.z$2 -> cn.domob.android.ads.z$2:
    cn.domob.android.ads.z a -> a
    void run() -> run
cn.domob.android.b.a -> cn.domob.android.b.a:
    cn.domob.android.i.f P -> P
    java.util.ArrayList Q -> Q
    java.lang.String R -> R
    int S -> S
    int T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    boolean i(android.content.Context) -> i
    boolean I(android.content.Context) -> I
    java.lang.String J(android.content.Context) -> J
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    java.lang.String m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    boolean p(android.content.Context) -> p
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    float s(android.content.Context) -> s
    float t(android.content.Context) -> t
    int u(android.content.Context) -> u
    int v(android.content.Context) -> v
    int w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.lang.String y(android.content.Context) -> y
    int d() -> d
    int e() -> e
    int f() -> f
    long g() -> g
    boolean a(int,boolean) -> a
    java.lang.String z(android.content.Context) -> z
    java.lang.String A(android.content.Context) -> A
    java.lang.String B(android.content.Context) -> B
    java.lang.String C(android.content.Context) -> C
    java.lang.String[] D(android.content.Context) -> D
    java.lang.String h() -> h
    boolean E(android.content.Context) -> E
    boolean F(android.content.Context) -> F
    java.lang.String G(android.content.Context) -> G
    int H(android.content.Context) -> H
cn.domob.android.b.b -> cn.domob.android.b.b:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.Boolean n -> n
    float o -> o
    float p -> p
    int q -> q
    int r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    void D(android.content.Context) -> D
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    float o(android.content.Context) -> o
    float p(android.content.Context) -> p
    int q(android.content.Context) -> q
    int r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    android.database.Cursor t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int c() -> c
    int d() -> d
    int e() -> e
    long f() -> f
    boolean a(int,boolean) -> a
    java.lang.String v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    java.lang.String x(android.content.Context) -> x
    java.lang.String y(android.content.Context) -> y
    java.lang.String[] z(android.content.Context) -> z
    java.lang.String g() -> g
    java.lang.Boolean A(android.content.Context) -> A
    java.lang.String B(android.content.Context) -> B
    int C(android.content.Context) -> C
    cn.domob.android.i.f h() -> h
cn.domob.android.b.b$1 -> cn.domob.android.b.b$1:
    int a(android.net.wifi.ScanResult,android.net.wifi.ScanResult) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.domob.android.b.b$a -> cn.domob.android.b.b$a:
    cn.domob.android.b.b$a a -> a
    android.location.Location b -> b
    int c -> c
    boolean d -> d
    long e -> e
    int f -> f
    int g -> g
    int h -> h
    cn.domob.android.b.b$a b() -> b
    android.location.Location a(android.content.Context) -> a
    void a(android.location.LocationManager,android.content.Context) -> a
    void a(android.location.LocationManager,android.location.LocationListener,int,java.lang.String) -> a
    boolean a(android.location.Location,android.location.Location) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int c() -> c
    int d() -> d
    int e() -> e
    long f() -> f
    java.lang.String a(android.location.Location) -> a
    cn.domob.android.b.b$a a() -> a
    android.location.Location a(cn.domob.android.b.b$a,android.content.Context) -> a
    java.lang.String a(cn.domob.android.b.b$a,android.location.Location) -> a
    int a(cn.domob.android.b.b$a) -> a
    int b(cn.domob.android.b.b$a) -> b
    int c(cn.domob.android.b.b$a) -> c
    long d(cn.domob.android.b.b$a) -> d
cn.domob.android.b.b$a$1 -> cn.domob.android.b.b$a$1:
    android.location.LocationManager a -> a
    android.location.LocationListener b -> b
    java.lang.String c -> c
    cn.domob.android.b.b$a d -> d
    void run() -> run
cn.domob.android.b.b$a$a -> cn.domob.android.b.b$a$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    cn.domob.android.b.b$a e -> e
cn.domob.android.b.b$a$b -> cn.domob.android.b.b$a$b:
    android.location.LocationManager a -> a
    cn.domob.android.b.b$a b -> b
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
cn.domob.android.b.b$a$c -> cn.domob.android.b.b$a$c:
    int a -> a
    int b -> b
    int c -> c
    cn.domob.android.b.b$a d -> d
cn.domob.android.c.a -> cn.domob.android.c.a:
    cn.domob.android.i.f r -> r
    android.content.Context s -> s
    android.content.Context t -> t
    android.app.Notification u -> u
    android.app.NotificationManager v -> v
    int w -> w
    int x -> x
    cn.domob.android.c.b y -> y
    java.lang.String z -> z
    int A -> A
    int B -> B
    java.util.Hashtable a -> a
    java.util.Hashtable C -> C
    java.util.Hashtable b -> b
    java.util.Vector D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    int k -> k
    int l -> l
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    boolean M -> M
    boolean N -> N
    boolean O -> O
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    long P -> P
    int Q -> Q
    java.util.concurrent.ExecutorService R -> R
    int S -> S
    android.app.PendingIntent T -> T
    android.os.Handler U -> U
    cn.domob.android.c.f V -> V
    void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context,cn.domob.android.c.b,java.lang.String,boolean,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,android.content.Context,cn.domob.android.c.b,java.lang.String,int) -> a
    void a(java.lang.String,android.content.Context,cn.domob.android.c.b,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context,cn.domob.android.c.b,java.lang.String,boolean) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context,cn.domob.android.c.b) -> a
    void a(cn.domob.android.c.b) -> a
    cn.domob.android.c.b a() -> a
    void e() -> e
    void f() -> f
    android.content.Intent a(java.lang.String) -> a
    android.content.Intent g() -> g
    void h() -> h
    void a(java.lang.String,long) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    void a(boolean) -> a
    void a(int) -> a
    java.lang.String c(java.lang.String) -> c
    void d(java.lang.String) -> d
    android.content.Intent e(java.lang.String) -> e
    void i() -> i
    int a(cn.domob.android.c.a) -> a
    int a(cn.domob.android.c.a,int) -> a
    int b(cn.domob.android.c.a,int) -> b
    boolean b(cn.domob.android.c.a) -> b
    android.content.Context b() -> b
    java.lang.String c(cn.domob.android.c.a) -> c
    android.app.PendingIntent d(cn.domob.android.c.a) -> d
    android.app.Notification e(cn.domob.android.c.a) -> e
    int f(cn.domob.android.c.a) -> f
    android.app.NotificationManager g(cn.domob.android.c.a) -> g
    int h(cn.domob.android.c.a) -> h
    cn.domob.android.i.f c() -> c
    java.lang.String i(cn.domob.android.c.a) -> i
    java.lang.String a(cn.domob.android.c.a,java.lang.String) -> a
    int j(cn.domob.android.c.a) -> j
    int c(cn.domob.android.c.a,int) -> c
    java.lang.String k(cn.domob.android.c.a) -> k
    cn.domob.android.c.b l(cn.domob.android.c.a) -> l
    long m(cn.domob.android.c.a) -> m
    boolean n(cn.domob.android.c.a) -> n
    android.content.Intent b(java.lang.String) -> b
    android.app.PendingIntent a(cn.domob.android.c.a,android.app.PendingIntent) -> a
    java.lang.String o(cn.domob.android.c.a) -> o
    android.content.Context d() -> d
    void a(cn.domob.android.c.a,java.lang.String,long) -> a
    void b(cn.domob.android.c.a,java.lang.String) -> b
    long a(cn.domob.android.c.a,long) -> a
    android.os.Handler p(cn.domob.android.c.a) -> p
cn.domob.android.c.a$1 -> cn.domob.android.c.a$1:
    cn.domob.android.c.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.domob.android.c.a$1$1 -> cn.domob.android.c.a$1$1:
    cn.domob.android.c.a$1 a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.c.a$2 -> cn.domob.android.c.a$2:
    cn.domob.android.c.a a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(long,long,long) -> a
    void a() -> a
    void d(java.lang.String) -> d
    void b() -> b
    void a(long) -> a
cn.domob.android.c.a$3 -> cn.domob.android.c.a$3:
    cn.domob.android.c.a a -> a
    void a(int) -> a
    void a(java.lang.String) -> a
cn.domob.android.c.b -> cn.domob.android.c.b:
    void a(java.lang.String,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void b(java.lang.String,long) -> b
cn.domob.android.c.c -> cn.domob.android.c.c:
    void a(int) -> a
    void a(java.lang.String) -> a
cn.domob.android.c.d -> cn.domob.android.c.d:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a(android.content.Context) -> a
    android.database.Cursor c(android.content.Context) -> c
    java.net.Proxy b(android.content.Context) -> b
cn.domob.android.c.e -> cn.domob.android.c.e:
    cn.domob.android.i.f a -> a
    android.content.Context b -> b
    android.content.Context c -> c
    java.lang.Object d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.domob.android.c.e$a g -> g
    void a() -> a
    void b() -> b
    java.lang.String a(cn.domob.android.c.e) -> a
    android.content.Context b(cn.domob.android.c.e) -> b
    cn.domob.android.c.e$a c(cn.domob.android.c.e) -> c
    android.content.Context d(cn.domob.android.c.e) -> d
    java.lang.Object e(cn.domob.android.c.e) -> e
    java.lang.String f(cn.domob.android.c.e) -> f
cn.domob.android.c.e$1 -> cn.domob.android.c.e$1:
    cn.domob.android.c.e a -> a
    void run() -> run
cn.domob.android.c.e$1$1 -> cn.domob.android.c.e$1$1:
    cn.domob.android.c.e$1 a -> a
    void a(java.lang.String,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void b(java.lang.String,long) -> b
cn.domob.android.c.e$a -> cn.domob.android.c.e$a:
    void a(android.content.Context,java.lang.Object,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.Object) -> a
    void b(android.content.Context,java.lang.Object) -> b
    void c(android.content.Context,java.lang.Object) -> c
    void d(android.content.Context,java.lang.Object) -> d
    void b(android.content.Context,java.lang.Object,java.lang.String,long) -> b
cn.domob.android.c.f -> cn.domob.android.c.f:
    cn.domob.android.i.f d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    cn.domob.android.c.c j -> j
    boolean k -> k
    long l -> l
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.domob.android.c.f$a m -> m
    android.content.Context n -> n
    void run() -> run
    boolean a() -> a
    void b() -> b
cn.domob.android.c.f$a -> cn.domob.android.c.f$a:
    boolean a -> a
    cn.domob.android.c.f b -> b
cn.domob.android.c.g -> cn.domob.android.c.g:
    cn.domob.android.i.f a -> a
    int b -> b
    java.net.URL c -> c
    java.io.File d -> d
    long e -> e
    long f -> f
    long g -> g
    boolean h -> h
    long i -> i
    cn.domob.android.c.f$a j -> j
    cn.domob.android.c.c k -> k
    int l -> l
    int m -> m
    int n -> n
    android.content.Context o -> o
    void run() -> run
    boolean a() -> a
    long b() -> b
cn.domob.android.c.h -> cn.domob.android.c.h:
    cn.domob.android.i.f g -> g
    cn.domob.android.c.i h -> h
    android.content.Context i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    long l -> l
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    boolean p -> p
    java.lang.String d -> d
    java.lang.String q -> q
    boolean r -> r
    int e -> e
    int f -> f
    long s -> s
    long a(java.lang.String) -> a
    void b() -> b
    void run() -> run
    boolean c() -> c
    boolean d() -> d
    java.lang.String a() -> a
    boolean b(java.lang.String) -> b
    boolean e() -> e
    boolean c(java.lang.String) -> c
cn.domob.android.c.i -> cn.domob.android.c.i:
    void a(long,long,long) -> a
    void a(java.lang.String) -> a
    void c(java.lang.String) -> c
    void b(java.lang.String) -> b
    void a() -> a
    void d(java.lang.String) -> d
    void b() -> b
    void a(long) -> a
cn.domob.android.d.a -> cn.domob.android.d.a:
    long serialVersionUID -> serialVersionUID
cn.domob.android.e.a -> cn.domob.android.e.a:
    int a -> a
    boolean b -> b
    java.lang.String[] a(android.content.Context) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
    void b(android.content.Context) -> b
    void a(int) -> a
    void b(android.content.Context,org.json.JSONArray) -> b
    void c(android.content.Context,org.json.JSONArray) -> c
    void c(android.content.Context) -> c
cn.domob.android.e.b -> cn.domob.android.e.b:
    cn.domob.android.i.f a -> a
    int b -> b
    java.lang.String c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    cn.domob.android.e.b e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    cn.domob.android.e.b a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean e() -> e
    void a() -> a
    int a(java.lang.String,java.lang.String[]) -> a
    boolean a(cn.domob.android.e.b$a) -> a
    java.lang.String b() -> b
    boolean a(java.lang.String,int,int,long) -> a
    boolean a(java.lang.String,int,int) -> a
    void a(org.json.JSONArray) -> a
    void b(org.json.JSONArray) -> b
    java.lang.String c(org.json.JSONArray) -> c
    boolean a(java.lang.String) -> a
    void c() -> c
    android.database.Cursor a(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    void d() -> d
cn.domob.android.e.b$a -> cn.domob.android.e.b$a:
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    long h -> h
    cn.domob.android.e.b a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
    int d() -> d
    void c(int) -> c
    int e() -> e
    void d(int) -> d
    long f() -> f
    void a(long) -> a
    long g() -> g
    void b(long) -> b
    java.lang.String toString() -> toString
cn.domob.android.e.b$b -> cn.domob.android.e.b$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
cn.domob.android.e.c -> cn.domob.android.e.c:
    cn.domob.android.i.f a -> a
    int b -> b
    cn.domob.android.e.c c -> c
    cn.domob.android.e.c a() -> a
    void a(int) -> a
    boolean b() -> b
    java.lang.String[] a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
cn.domob.android.f.a -> cn.domob.android.f.a:
    android.content.Context k -> k
    java.lang.String l -> l
    android.content.SharedPreferences m -> m
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(java.util.HashMap) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
    int a(java.lang.String,int) -> a
    long a(java.lang.String,long) -> a
    float a(java.lang.String,float) -> a
cn.domob.android.f.b -> cn.domob.android.f.b:
    cn.domob.android.i.f c -> c
    boolean d -> d
    java.util.HashMap e -> e
    int f -> f
    boolean g -> g
    java.lang.String h -> h
    cn.domob.android.f.a i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    java.lang.String a -> a
    java.net.HttpURLConnection n -> n
    android.content.Context o -> o
    java.net.URL b -> b
    java.lang.String p -> p
    java.lang.String q -> q
    java.util.HashMap r -> r
    java.net.Proxy s -> s
    java.lang.String t -> t
    int u -> u
    cn.domob.android.f.b$b v -> v
    cn.domob.android.f.b$a w -> w
    java.lang.String x -> x
    int y -> y
    java.lang.String z -> z
    byte[] A -> A
    int B -> B
    java.lang.String C -> C
    void a(cn.domob.android.f.b$a) -> a
    void q() -> q
    void a(java.lang.String,int) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b() -> b
    void c() -> c
    byte[] d() -> d
    java.lang.String e() -> e
    int f() -> f
    java.lang.String g() -> g
    void f(java.lang.String) -> f
    java.lang.String g(java.lang.String) -> g
    java.lang.String h() -> h
    void r() -> r
    java.lang.String h(java.lang.String) -> h
    java.lang.String i(java.lang.String) -> i
    boolean j(java.lang.String) -> j
    boolean a(android.content.Context) -> a
    boolean i() -> i
    void a(boolean) -> a
    void a(cn.domob.android.f.b$b) -> a
    cn.domob.android.f.a s() -> s
    void t() -> t
    java.lang.String j() -> j
    void b(java.lang.String) -> b
    android.content.Context k() -> k
    void b(android.content.Context) -> b
    java.lang.String l() -> l
    void c(java.lang.String) -> c
    java.lang.String m() -> m
    void d(java.lang.String) -> d
    java.util.HashMap n() -> n
    void a(java.util.HashMap) -> a
    java.lang.String o() -> o
    void e(java.lang.String) -> e
    int p() -> p
    void a(int) -> a
cn.domob.android.f.b$a -> cn.domob.android.f.b$a:
    void a(cn.domob.android.f.b) -> a
cn.domob.android.f.b$b -> cn.domob.android.f.b$b:
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
cn.domob.android.f.c -> cn.domob.android.f.c:
    cn.domob.android.f.c a -> a
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    cn.domob.android.f.c a() -> a
    void a(java.util.concurrent.ThreadPoolExecutor) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context,boolean) -> a
    cn.domob.android.f.h a(cn.domob.android.f.e) -> a
    void a(android.content.Context,java.lang.String,cn.domob.android.f.g) -> a
    void a(android.content.Context,java.lang.String,cn.domob.android.f.g,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,cn.domob.android.f.f,cn.domob.android.f.g) -> a
    cn.domob.android.f.h a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,cn.domob.android.f.f,cn.domob.android.f.g) -> b
    void c(android.content.Context,java.lang.String,cn.domob.android.f.f,cn.domob.android.f.g) -> c
    cn.domob.android.f.h b(cn.domob.android.f.e) -> b
    java.lang.String a(java.lang.String,cn.domob.android.f.f) -> a
cn.domob.android.f.d -> cn.domob.android.f.d:
    java.lang.String b -> b
    java.lang.String c -> c
    cn.domob.android.f.b d -> d
    cn.domob.android.f.g e -> e
    java.lang.String a -> a
    cn.domob.android.f.f f -> f
    boolean g -> g
    java.lang.String[] h -> h
    void a(java.lang.String) -> a
    void run() -> run
    cn.domob.android.f.h a() -> a
    void e() -> e
    java.lang.String b(java.lang.String) -> b
    java.lang.String b() -> b
    java.lang.String[] c() -> c
    java.lang.String d() -> d
cn.domob.android.f.d$1 -> cn.domob.android.f.d$1:
    cn.domob.android.f.d a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
cn.domob.android.f.e -> cn.domob.android.f.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    cn.domob.android.f.f l -> l
    cn.domob.android.f.g m -> m
    android.content.Context a() -> a
    cn.domob.android.f.e a(android.content.Context) -> a
    java.lang.String b() -> b
    cn.domob.android.f.e a(java.lang.String) -> a
    cn.domob.android.f.f c() -> c
    cn.domob.android.f.e a(cn.domob.android.f.f) -> a
    cn.domob.android.f.g d() -> d
    cn.domob.android.f.e a(cn.domob.android.f.g) -> a
    boolean e() -> e
    cn.domob.android.f.e a(boolean) -> a
    java.lang.String f() -> f
    cn.domob.android.f.e b(java.lang.String) -> b
    java.lang.String g() -> g
    cn.domob.android.f.e c(java.lang.String) -> c
    boolean h() -> h
    cn.domob.android.f.e b(boolean) -> b
    java.lang.String i() -> i
    cn.domob.android.f.e d(java.lang.String) -> d
    int j() -> j
    void a(int) -> a
cn.domob.android.f.f -> cn.domob.android.f.f:
    java.lang.String b -> b
    java.util.concurrent.ConcurrentHashMap a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
    void c() -> c
    java.util.List a() -> a
    java.lang.String b() -> b
cn.domob.android.f.g -> cn.domob.android.f.g:
    cn.domob.android.f.h a -> a
    void b(cn.domob.android.f.h) -> b
    void a(cn.domob.android.f.h) -> a
    void a(java.lang.String,java.lang.String) -> a
    cn.domob.android.f.h a() -> a
cn.domob.android.f.h -> cn.domob.android.f.h:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    byte[] a() -> a
    void a(byte[]) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void a(int) -> a
    java.lang.String e() -> e
    void c(java.lang.String) -> c
cn.domob.android.g.a.a -> cn.domob.android.g.a.a:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    cn.domob.android.g.a.c k -> k
    void a(java.lang.String[],android.content.Context,cn.domob.android.g.a.a$b) -> a
    void a(int) -> a
    void a(long) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(cn.domob.android.g.a.e) -> a
cn.domob.android.g.a.a$a -> cn.domob.android.g.a.a$a:
    cn.domob.android.g.a.a$a a -> a
    cn.domob.android.g.a.a$a b -> b
    cn.domob.android.g.a.a$a[] c -> c
    cn.domob.android.g.a.a$a[] values() -> values
    cn.domob.android.g.a.a$a valueOf(java.lang.String) -> valueOf
cn.domob.android.g.a.a$b -> cn.domob.android.g.a.a$b:
    void a(java.lang.String) -> a
    void a(cn.domob.android.g.a.a$a) -> a
cn.domob.android.g.a.b -> cn.domob.android.g.a.b:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    long e -> e
    boolean f -> f
    java.lang.String g -> g
    boolean h -> h
    cn.domob.android.g.a.a$a i -> i
    cn.domob.android.g.a.c j -> j
    cn.domob.android.f.e k -> k
    int l -> l
    void run() -> run
    void b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    cn.domob.android.f.e g() -> g
    java.util.Map a(cn.domob.android.g.a.c) -> a
    int h() -> h
    void i() -> i
    java.lang.String b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void j() -> j
    int k() -> k
cn.domob.android.g.a.c -> cn.domob.android.g.a.c:
    cn.domob.android.i.f a -> a
    long b -> b
    int c -> c
    android.content.Context d -> d
    java.lang.String[] e -> e
    int f -> f
    long g -> g
    boolean h -> h
    boolean i -> i
    java.util.Map j -> j
    cn.domob.android.g.a.a$b k -> k
    cn.domob.android.g.a.a$b a() -> a
    void a(cn.domob.android.g.a.a$b) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.lang.String[] c() -> c
    void a(java.lang.String[]) -> a
    int d() -> d
    void a(int) -> a
    long e() -> e
    void a(long) -> a
    java.util.Map f() -> f
    void a(java.util.Map) -> a
    android.content.Context g() -> g
    void a(android.content.Context) -> a
    boolean h() -> h
    void b(boolean) -> b
cn.domob.android.g.a.d -> cn.domob.android.g.a.d:
    cn.domob.android.i.f a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.Map a(android.content.Context,boolean) -> a
cn.domob.android.g.a.e -> cn.domob.android.g.a.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
cn.domob.android.h.a -> cn.domob.android.h.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    void a(java.lang.String,cn.domob.android.ads.i) -> a
cn.domob.android.i.a -> cn.domob.android.i.a:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void f(android.content.Context) -> f
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String[],boolean) -> a
    boolean e(android.content.Context) -> e
cn.domob.android.i.b -> cn.domob.android.i.b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    boolean g -> g
    java.lang.String a(byte[],int) -> a
    byte[] b(byte[],int) -> b
    byte[] a(byte[],int,int,int) -> a
cn.domob.android.i.b$a -> cn.domob.android.i.b$a:
    byte[] a -> a
    int b -> b
    boolean a(byte[],int,int,boolean) -> a
    int a(int) -> a
cn.domob.android.i.b$b -> cn.domob.android.i.b$b:
    int c -> c
    byte[] i -> i
    byte[] j -> j
    byte[] k -> k
    int d -> d
    int l -> l
    boolean e -> e
    boolean f -> f
    boolean g -> g
    byte[] m -> m
    boolean h -> h
    int a(int) -> a
    boolean a(byte[],int,int,boolean) -> a
cn.domob.android.i.c -> cn.domob.android.i.c:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.Boolean n -> n
    float o -> o
    float p -> p
    int q -> q
    int r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    void G(android.content.Context) -> G
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    float o(android.content.Context) -> o
    float p(android.content.Context) -> p
    int q(android.content.Context) -> q
    int r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    android.database.Cursor t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int c() -> c
    int d() -> d
    int e() -> e
    long f() -> f
    boolean a(int,boolean) -> a
    java.lang.String v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    java.lang.String x(android.content.Context) -> x
    java.lang.String y(android.content.Context) -> y
    java.lang.String[] z(android.content.Context) -> z
    java.lang.String g() -> g
    java.lang.Boolean A(android.content.Context) -> A
    java.lang.String B(android.content.Context) -> B
    int C(android.content.Context) -> C
    boolean h() -> h
    boolean D(android.content.Context) -> D
    android.content.Intent a(android.content.Context,android.net.Uri) -> a
    boolean E(android.content.Context) -> E
    java.lang.String F(android.content.Context) -> F
    cn.domob.android.i.f i() -> i
cn.domob.android.i.c$1 -> cn.domob.android.i.c$1:
    int a(android.net.wifi.ScanResult,android.net.wifi.ScanResult) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.domob.android.i.c$a -> cn.domob.android.i.c$a:
    cn.domob.android.i.c$a a -> a
    android.location.Location b -> b
    int c -> c
    boolean d -> d
    long e -> e
    int f -> f
    int g -> g
    int h -> h
    cn.domob.android.i.c$a b() -> b
    android.location.Location a(android.content.Context) -> a
    void a(android.location.LocationManager,android.content.Context) -> a
    void a(android.location.LocationManager,android.location.LocationListener,int,java.lang.String) -> a
    boolean a(android.location.Location,android.location.Location) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int c() -> c
    int d() -> d
    int e() -> e
    long f() -> f
    java.lang.String a(android.location.Location) -> a
    cn.domob.android.i.c$a a() -> a
    android.location.Location a(cn.domob.android.i.c$a,android.content.Context) -> a
    java.lang.String a(cn.domob.android.i.c$a,android.location.Location) -> a
    int a(cn.domob.android.i.c$a) -> a
    int b(cn.domob.android.i.c$a) -> b
    int c(cn.domob.android.i.c$a) -> c
    long d(cn.domob.android.i.c$a) -> d
cn.domob.android.i.c$a$1 -> cn.domob.android.i.c$a$1:
    android.location.LocationManager a -> a
    android.location.LocationListener b -> b
    java.lang.String c -> c
    cn.domob.android.i.c$a d -> d
    void run() -> run
cn.domob.android.i.c$a$a -> cn.domob.android.i.c$a$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    cn.domob.android.i.c$a e -> e
cn.domob.android.i.c$a$b -> cn.domob.android.i.c$a$b:
    android.location.LocationManager a -> a
    cn.domob.android.i.c$a b -> b
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
cn.domob.android.i.c$a$c -> cn.domob.android.i.c$a$c:
    int a -> a
    int b -> b
    int c -> c
    cn.domob.android.i.c$a d -> d
cn.domob.android.i.d -> cn.domob.android.i.d:
    cn.domob.android.i.f a -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[],java.lang.String) -> a
    android.graphics.drawable.Drawable b(android.content.Context,java.lang.String) -> b
cn.domob.android.i.e -> cn.domob.android.i.e:
    cn.domob.android.i.f a -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int c() -> c
    long d() -> d
    java.lang.String[] b(android.content.Context) -> b
    cn.domob.android.i.f e() -> e
cn.domob.android.i.e$a -> cn.domob.android.i.e$a:
    cn.domob.android.i.e$a a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    long f -> f
    int g -> g
    int h -> h
    int i -> i
    android.location.Location j -> j
    int k -> k
    cn.domob.android.i.e$a b() -> b
    android.location.Location a(android.content.Context) -> a
    void a(android.location.LocationManager,android.content.Context) -> a
    boolean c() -> c
    void a(android.content.Context,android.location.LocationManager,java.lang.String) -> a
    void a(android.location.LocationManager,cn.domob.android.i.e$a$b,int,java.lang.String) -> a
    void a(cn.domob.android.i.e$a$b) -> a
    boolean a(android.location.Location,android.location.Location) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int d() -> d
    int e() -> e
    int f() -> f
    long g() -> g
    java.lang.String a(android.location.Location) -> a
    cn.domob.android.i.e$a a() -> a
    android.location.Location a(cn.domob.android.i.e$a,android.content.Context) -> a
    java.lang.String a(cn.domob.android.i.e$a,android.location.Location) -> a
    int a(cn.domob.android.i.e$a) -> a
    int b(cn.domob.android.i.e$a) -> b
    int c(cn.domob.android.i.e$a) -> c
    long d(cn.domob.android.i.e$a) -> d
    void a(cn.domob.android.i.e$a,cn.domob.android.i.e$a$b) -> a
cn.domob.android.i.e$a$1 -> cn.domob.android.i.e$a$1:
    java.lang.String a -> a
    cn.domob.android.i.e$a$b b -> b
    android.location.LocationManager c -> c
    cn.domob.android.i.e$a d -> d
    void run() -> run
cn.domob.android.i.e$a$a -> cn.domob.android.i.e$a$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    cn.domob.android.i.e$a e -> e
cn.domob.android.i.e$a$b -> cn.domob.android.i.e$a$b:
    android.location.LocationManager a -> a
    boolean c -> c
    cn.domob.android.i.e$a b -> b
    boolean a() -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
cn.domob.android.i.e$a$c -> cn.domob.android.i.e$a$c:
    int a -> a
    int b -> b
    int c -> c
    cn.domob.android.i.e$a d -> d
cn.domob.android.i.f -> cn.domob.android.i.f:
    java.lang.String b -> b
    java.lang.String a -> a
    boolean c -> c
    int d -> d
    long e -> e
    long f -> f
    void b(java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
    void a(java.lang.Object,java.lang.String) -> a
    void b(java.lang.Object,java.lang.String) -> b
    void c(java.lang.Object,java.lang.String) -> c
    void d(java.lang.Object,java.lang.String) -> d
    void e(java.lang.Object,java.lang.String) -> e
    void f(java.lang.Object,java.lang.String) -> f
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(boolean) -> a
    java.lang.String b() -> b
cn.domob.android.i.g -> cn.domob.android.i.g:
    cn.domob.android.i.f a -> a
    int a(android.content.Context,int) -> a
    int b(android.content.Context,int) -> b
    void a(android.view.View) -> a
    boolean a(android.content.Context,android.view.ViewGroup) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
cn.domob.android.i.g$1 -> cn.domob.android.i.g$1:
    android.content.Context a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.domob.android.i.h -> cn.domob.android.i.h:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    java.lang.String a(java.util.HashMap) -> a
    java.util.HashMap a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    boolean b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(int) -> a
    int a(int,int) -> a
cn.domob.android.i.i -> cn.domob.android.i.i:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    cn.domob.android.i.i$a a(java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] a(int) -> a
    byte a(int,byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
cn.domob.android.i.i$a -> cn.domob.android.i.i$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
cn.domob.android.j.a -> cn.domob.android.j.a:
    cn.domob.android.i.f b -> b
    int a -> a
    android.content.Context c -> c
    cn.domob.android.j.b d -> d
    cn.domob.android.j.d e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    android.widget.RelativeLayout$LayoutParams i -> i
    android.widget.RelativeLayout$LayoutParams j -> j
    android.widget.RelativeLayout k -> k
    android.widget.VideoView l -> l
    android.app.Dialog m -> m
    cn.domob.android.j.c n -> n
    cn.domob.android.j.a$a o -> o
    cn.domob.android.j.a$c p -> p
    cn.domob.android.j.a$b q -> q
    long[] r -> r
    cn.domob.android.j.e s -> s
    boolean t -> t
    boolean u -> u
    boolean v -> v
    boolean w -> w
    android.os.Handler x -> x
    java.util.Timer y -> y
    java.util.Timer z -> z
    boolean A -> A
    boolean B -> B
    boolean C -> C
    boolean D -> D
    boolean E -> E
    boolean F -> F
    int G -> G
    int H -> H
    int I -> I
    boolean J -> J
    boolean K -> K
    java.lang.Runnable L -> L
    void n() -> n
    void o() -> o
    void p() -> p
    void q() -> q
    void r() -> r
    boolean s() -> s
    void a(long) -> a
    void t() -> t
    void b(long) -> b
    void c(long) -> c
    void a(long[],cn.domob.android.j.a$c) -> a
    void a(cn.domob.android.j.a$b) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void u() -> u
    void v() -> v
    void w() -> w
    boolean x() -> x
    void y() -> y
    void b(int,int) -> b
    void a(int,int) -> a
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    void f() -> f
    void D() -> D
    void E() -> E
    boolean F() -> F
    boolean G() -> G
    boolean H() -> H
    boolean I() -> I
    void J() -> J
    void K() -> K
    void L() -> L
    void M() -> M
    int N() -> N
    boolean O() -> O
    void a(android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void g() -> g
    void a(boolean) -> a
    void P() -> P
    void Q() -> Q
    void b(java.lang.String) -> b
    void h() -> h
    void i() -> i
    void a(cn.domob.android.j.b$a$a$a) -> a
    void j() -> j
    void k() -> k
    void a(cn.domob.android.j.e) -> a
    void b(cn.domob.android.j.e) -> b
    void c(cn.domob.android.j.e) -> c
    void a(java.lang.String) -> a
    cn.domob.android.j.b l() -> l
    void a() -> a
    void b() -> b
    void a(cn.domob.android.j.a) -> a
    cn.domob.android.i.f m() -> m
    boolean a(cn.domob.android.j.a,boolean) -> a
    void b(cn.domob.android.j.a) -> b
    android.widget.VideoView c(cn.domob.android.j.a) -> c
    void d(cn.domob.android.j.a) -> d
    boolean e(cn.domob.android.j.a) -> e
    int f(cn.domob.android.j.a) -> f
    int g(cn.domob.android.j.a) -> g
    int a(cn.domob.android.j.a,int) -> a
    boolean h(cn.domob.android.j.a) -> h
    void i(cn.domob.android.j.a) -> i
    cn.domob.android.j.d j(cn.domob.android.j.a) -> j
    boolean b(cn.domob.android.j.a,boolean) -> b
    boolean k(cn.domob.android.j.a) -> k
    void l(cn.domob.android.j.a) -> l
    cn.domob.android.j.b m(cn.domob.android.j.a) -> m
    boolean n(cn.domob.android.j.a) -> n
    boolean o(cn.domob.android.j.a) -> o
    java.lang.Runnable p(cn.domob.android.j.a) -> p
    android.os.Handler q(cn.domob.android.j.a) -> q
    boolean r(cn.domob.android.j.a) -> r
    int s(cn.domob.android.j.a) -> s
    java.util.Timer t(cn.domob.android.j.a) -> t
    java.util.Timer a(cn.domob.android.j.a,java.util.Timer) -> a
    cn.domob.android.j.a$c u(cn.domob.android.j.a) -> u
    int v(cn.domob.android.j.a) -> v
    boolean w(cn.domob.android.j.a) -> w
    void a(cn.domob.android.j.a,long) -> a
    boolean c(cn.domob.android.j.a,boolean) -> c
    void b(cn.domob.android.j.a,long) -> b
    java.util.Timer x(cn.domob.android.j.a) -> x
    cn.domob.android.j.a$b y(cn.domob.android.j.a) -> y
    android.app.Dialog z(cn.domob.android.j.a) -> z
    android.widget.RelativeLayout A(cn.domob.android.j.a) -> A
    void a(cn.domob.android.j.a,android.view.View) -> a
    android.app.Dialog a(cn.domob.android.j.a,android.app.Dialog) -> a
    int B(cn.domob.android.j.a) -> B
    int C(cn.domob.android.j.a) -> C
    void a(cn.domob.android.j.a,int,int) -> a
    android.widget.RelativeLayout$LayoutParams D(cn.domob.android.j.a) -> D
    android.widget.RelativeLayout$LayoutParams E(cn.domob.android.j.a) -> E
    cn.domob.android.j.e F(cn.domob.android.j.a) -> F
    void b(cn.domob.android.j.a,android.view.View) -> b
    void G(cn.domob.android.j.a) -> G
    void H(cn.domob.android.j.a) -> H
    void I(cn.domob.android.j.a) -> I
cn.domob.android.j.a$1 -> cn.domob.android.j.a$1:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$10 -> cn.domob.android.j.a$10:
    cn.domob.android.j.a a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.j.a$11 -> cn.domob.android.j.a$11:
    cn.domob.android.j.a a -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
cn.domob.android.j.a$12 -> cn.domob.android.j.a$12:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$13 -> cn.domob.android.j.a$13:
    java.util.ArrayList a -> a
    cn.domob.android.j.a b -> b
    void run() -> run
cn.domob.android.j.a$14 -> cn.domob.android.j.a$14:
    cn.domob.android.j.a a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
cn.domob.android.j.a$2 -> cn.domob.android.j.a$2:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$3 -> cn.domob.android.j.a$3:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$4 -> cn.domob.android.j.a$4:
    android.view.View a -> a
    cn.domob.android.j.a b -> b
    void run() -> run
cn.domob.android.j.a$5 -> cn.domob.android.j.a$5:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$6 -> cn.domob.android.j.a$6:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$7 -> cn.domob.android.j.a$7:
    cn.domob.android.j.a a -> a
    void run() -> run
cn.domob.android.j.a$8 -> cn.domob.android.j.a$8:
    cn.domob.android.j.a a -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
cn.domob.android.j.a$9 -> cn.domob.android.j.a$9:
    cn.domob.android.j.a a -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
cn.domob.android.j.a$a -> cn.domob.android.j.a$a:
    void a(boolean) -> a
    void b(java.lang.String) -> b
    void a(cn.domob.android.j.a) -> a
    void o() -> o
    void p() -> p
    void q() -> q
    void c(java.lang.String) -> c
cn.domob.android.j.a$b -> cn.domob.android.j.a$b:
    void b() -> b
cn.domob.android.j.a$c -> cn.domob.android.j.a$c:
    void a(long) -> a
    void n() -> n
    void b(long) -> b
    void c(long) -> c
cn.domob.android.j.b -> cn.domob.android.j.b:
    cn.domob.android.i.f k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    boolean M -> M
    boolean N -> N
    boolean O -> O
    boolean P -> P
    long Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int[] U -> U
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean V -> V
    long W -> W
    boolean X -> X
    int Y -> Y
    java.lang.String Z -> Z
    cn.domob.android.j.b$a aa -> aa
    boolean a() -> a
    long b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    cn.domob.android.j.b$a e() -> e
    int f() -> f
    cn.domob.android.j.b$a$a g() -> g
    int[] h() -> h
    cn.domob.android.i.f i() -> i
cn.domob.android.j.b$a -> cn.domob.android.j.b$a:
    boolean b -> b
    int[] c -> c
    boolean d -> d
    int[] e -> e
    java.lang.String f -> f
    boolean g -> g
    int[] h -> h
    boolean i -> i
    int[] j -> j
    cn.domob.android.j.b$a$a k -> k
    cn.domob.android.j.b a -> a
    boolean a() -> a
    int[] b() -> b
    boolean c() -> c
    int[] d() -> d
    java.lang.String e() -> e
    boolean f() -> f
    int[] g() -> g
    boolean h() -> h
    int[] i() -> i
    cn.domob.android.j.b$a$a j() -> j
    int[] a(org.json.JSONObject) -> a
cn.domob.android.j.b$a$a -> cn.domob.android.j.b$a$a:
    int b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    int h -> h
    java.util.ArrayList i -> i
    cn.domob.android.j.b$a a -> a
    int a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    int e() -> e
    int f() -> f
    boolean g() -> g
    java.util.ArrayList h() -> h
cn.domob.android.j.b$a$a$a -> cn.domob.android.j.b$a$a$a:
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    cn.domob.android.j.b$a$a a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    java.lang.String[] e() -> e
    java.lang.String[] f() -> f
    java.lang.String[] a(org.json.JSONArray) -> a
cn.domob.android.j.c -> cn.domob.android.j.c:
    cn.domob.android.i.f a -> a
    android.content.Context b -> b
    android.content.IntentFilter c -> c
    cn.domob.android.j.c$a d -> d
    void a(cn.domob.android.j.c$a) -> a
    void a() -> a
    void b() -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.domob.android.j.c$a -> cn.domob.android.j.c$a:
    void a() -> a
    void b() -> b
cn.domob.android.j.d -> cn.domob.android.j.d:
    cn.domob.android.i.f a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    java.util.concurrent.ExecutorService u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    int J -> J
    int K -> K
    int L -> L
    android.content.Context M -> M
    cn.domob.android.j.b N -> N
    android.os.Handler O -> O
    java.util.HashMap P -> P
    android.widget.ImageButton Q -> Q
    java.lang.String R -> R
    cn.domob.android.j.d$b S -> S
    int T -> T
    android.widget.RelativeLayout U -> U
    android.widget.RelativeLayout V -> V
    android.widget.TextView W -> W
    int X -> X
    int Y -> Y
    boolean Z -> Z
    boolean aa -> aa
    android.widget.ImageButton a(boolean) -> a
    void a(int) -> a
    android.widget.TextView b(int) -> b
    android.widget.TextView a() -> a
    android.widget.ImageView b() -> b
    android.widget.ImageButton i() -> i
    void b(boolean) -> b
    void c(boolean) -> c
    android.widget.ImageButton j() -> j
    void c() -> c
    void d() -> d
    android.widget.RelativeLayout e() -> e
    android.widget.RelativeLayout c(int) -> c
    android.widget.RelativeLayout d(int) -> d
    void f() -> f
    android.widget.RelativeLayout a(boolean,boolean) -> a
    cn.domob.android.j.d$a a(cn.domob.android.j.b$a$a$a,int,int) -> a
    cn.domob.android.j.b$a$a$a[] a(java.util.ArrayList) -> a
    void a(cn.domob.android.j.d$a,boolean,boolean) -> a
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    boolean k() -> k
    void l() -> l
    int m() -> m
    void e(int) -> e
    void n() -> n
    void a(android.widget.RelativeLayout,android.view.View) -> a
    void a(android.widget.ImageButton,android.graphics.drawable.Drawable) -> a
    void a(android.widget.ImageButton,java.lang.String) -> a
    void b(android.widget.ImageButton,java.lang.String) -> b
    java.util.ArrayList o() -> o
    void g() -> g
    byte[] a(java.io.InputStream) -> a
    byte[] a(java.lang.String) -> a
    android.graphics.drawable.BitmapDrawable a(byte[]) -> a
    int f(int) -> f
    android.widget.RelativeLayout$LayoutParams a(android.content.Context,int,int) -> a
    android.widget.RelativeLayout$LayoutParams b(android.content.Context,int,int) -> b
    void a(cn.domob.android.j.d,android.widget.ImageButton,java.lang.String) -> a
    cn.domob.android.j.d$b a(cn.domob.android.j.d) -> a
    android.widget.TextView b(cn.domob.android.j.d) -> b
    boolean c(cn.domob.android.j.d) -> c
    void d(cn.domob.android.j.d) -> d
    boolean e(cn.domob.android.j.d) -> e
    java.lang.String f(cn.domob.android.j.d) -> f
    android.widget.ImageButton g(cn.domob.android.j.d) -> g
    android.widget.RelativeLayout h(cn.domob.android.j.d) -> h
    android.widget.RelativeLayout i(cn.domob.android.j.d) -> i
    android.widget.RelativeLayout a(cn.domob.android.j.d,boolean,boolean) -> a
    void a(cn.domob.android.j.d,android.widget.RelativeLayout,android.view.View) -> a
    void a(cn.domob.android.j.d,cn.domob.android.j.d$a,boolean,boolean) -> a
    byte[] a(cn.domob.android.j.d,java.lang.String) -> a
    android.graphics.drawable.BitmapDrawable a(cn.domob.android.j.d,byte[]) -> a
    java.util.HashMap j(cn.domob.android.j.d) -> j
    cn.domob.android.i.f h() -> h
    int k(cn.domob.android.j.d) -> k
    int a(cn.domob.android.j.d,int) -> a
    int l(cn.domob.android.j.d) -> l
cn.domob.android.j.d$1 -> cn.domob.android.j.d$1:
    android.widget.ImageButton a -> a
    cn.domob.android.j.d b -> b
    void onClick(android.view.View) -> onClick
cn.domob.android.j.d$10 -> cn.domob.android.j.d$10:
    cn.domob.android.j.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.j.d$11 -> cn.domob.android.j.d$11:
    cn.domob.android.j.d a -> a
    void run() -> run
cn.domob.android.j.d$12 -> cn.domob.android.j.d$12:
    cn.domob.android.j.d a -> a
    void run() -> run
cn.domob.android.j.d$2 -> cn.domob.android.j.d$2:
    cn.domob.android.j.d$a a -> a
    cn.domob.android.j.d b -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.j.d$3 -> cn.domob.android.j.d$3:
    android.widget.ImageButton a -> a
    android.graphics.drawable.Drawable b -> b
    cn.domob.android.j.d c -> c
    void run() -> run
cn.domob.android.j.d$4 -> cn.domob.android.j.d$4:
    java.lang.String a -> a
    int b -> b
    cn.domob.android.j.d c -> c
    void run() -> run
cn.domob.android.j.d$5 -> cn.domob.android.j.d$5:
    android.widget.ImageButton a -> a
    cn.domob.android.j.d b -> b
    void run() -> run
cn.domob.android.j.d$6 -> cn.domob.android.j.d$6:
    cn.domob.android.j.d a -> a
    void run() -> run
cn.domob.android.j.d$7 -> cn.domob.android.j.d$7:
    android.text.SpannableStringBuilder a -> a
    cn.domob.android.j.d b -> b
    void run() -> run
cn.domob.android.j.d$8 -> cn.domob.android.j.d$8:
    android.widget.ImageButton a -> a
    cn.domob.android.j.d b -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.j.d$9 -> cn.domob.android.j.d$9:
    cn.domob.android.j.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.domob.android.j.d$a -> cn.domob.android.j.d$a:
    cn.domob.android.j.b$a$a$a a -> a
    cn.domob.android.j.d b -> b
    cn.domob.android.j.b$a$a$a a() -> a
    cn.domob.android.j.b$a$a$a a(cn.domob.android.j.d$a) -> a
cn.domob.android.j.d$b -> cn.domob.android.j.d$b:
    void h() -> h
    void i() -> i
    void a(cn.domob.android.j.b$a$a$a) -> a
    void j() -> j
    void k() -> k
cn.domob.android.j.e -> cn.domob.android.j.e:
    cn.domob.android.i.f c -> c
    cn.domob.android.j.e$a a -> a
    cn.domob.android.j.e$b b -> b
    int d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    int i -> i
    void b() -> b
    void loadUrl(java.lang.String) -> loadUrl
    void c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(boolean) -> a
    void a(cn.domob.android.j.e$a) -> a
    void a(cn.domob.android.j.e$b) -> a
    cn.domob.android.i.f a() -> a
    boolean a(cn.domob.android.j.e) -> a
    void b(cn.domob.android.j.e) -> b
    boolean a(cn.domob.android.j.e,boolean) -> a
    void c(cn.domob.android.j.e) -> c
    boolean b(cn.domob.android.j.e,boolean) -> b
    int d(cn.domob.android.j.e) -> d
    boolean e(cn.domob.android.j.e) -> e
    void f(cn.domob.android.j.e) -> f
    boolean g(cn.domob.android.j.e) -> g
cn.domob.android.j.e$1 -> cn.domob.android.j.e$1:
    cn.domob.android.j.e a -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.domob.android.j.e$2 -> cn.domob.android.j.e$2:
    cn.domob.android.j.e a -> a
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
cn.domob.android.j.e$3 -> cn.domob.android.j.e$3:
    java.lang.String a -> a
    cn.domob.android.j.e b -> b
    void run() -> run
cn.domob.android.j.e$a -> cn.domob.android.j.e$a:
    void a(java.lang.String) -> a
cn.domob.android.j.e$b -> cn.domob.android.j.e$b:
    void a(cn.domob.android.j.e) -> a
    void b(cn.domob.android.j.e) -> b
    void c(cn.domob.android.j.e) -> c
cn.domob.android.j.e$c -> cn.domob.android.j.e$c:
    int b -> b
    cn.domob.android.j.e a -> a
    void run() -> run
cn.domob.android.j.e$c$1 -> cn.domob.android.j.e$c$1:
    cn.domob.android.j.e$c a -> a
    void run() -> run
com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> LOG_NONE
    int LOG_DEBUG -> LOG_DEBUG
    int LOG_INFO -> LOG_INFO
    int LOG_ERROR -> LOG_ERROR
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> Android
    com.badlogic.gdx.Application$ApplicationType Desktop -> Desktop
    com.badlogic.gdx.Application$ApplicationType Applet -> Applet
    com.badlogic.gdx.Application$ApplicationType WebGL -> WebGL
    com.badlogic.gdx.Application$ApplicationType iOS -> iOS
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> $VALUES
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> Classpath
    com.badlogic.gdx.Files$FileType Internal -> Internal
    com.badlogic.gdx.Files$FileType External -> External
    com.badlogic.gdx.Files$FileType Absolute -> Absolute
    com.badlogic.gdx.Files$FileType Local -> Local
    com.badlogic.gdx.Files$FileType[] $VALUES -> $VALUES
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> screen
    void dispose() -> dispose
    void pause() -> pause
    void resume() -> resume
    void render() -> render
    void resize(int,int) -> resize
    void setScreen(com.badlogic.gdx.Screen) -> setScreen
    com.badlogic.gdx.Screen getScreen() -> getScreen
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.Graphics graphics -> graphics
    com.badlogic.gdx.Audio audio -> audio
    com.badlogic.gdx.Input input -> input
    com.badlogic.gdx.Files files -> files
    com.badlogic.gdx.Net net -> net
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int samples -> samples
    boolean coverageSampling -> coverageSampling
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> AndroidGL
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> LWJGL
    com.badlogic.gdx.Graphics$GraphicsType Angle -> Angle
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> WebGL
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> iOSGL
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> $VALUES
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.HttpParametersUtils -> com.badlogic.gdx.HttpParametersUtils:
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String nameValueSeparator -> nameValueSeparator
    java.lang.String parameterSeparator -> parameterSeparator
    java.lang.String convertHttpParameters(java.util.Map) -> convertHttpParameters
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int MIDDLE -> MIDDLE
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> ANY_KEY
    int NUM_0 -> NUM_0
    int NUM_1 -> NUM_1
    int NUM_2 -> NUM_2
    int NUM_3 -> NUM_3
    int NUM_4 -> NUM_4
    int NUM_5 -> NUM_5
    int NUM_6 -> NUM_6
    int NUM_7 -> NUM_7
    int NUM_8 -> NUM_8
    int NUM_9 -> NUM_9
    int A -> A
    int ALT_LEFT -> ALT_LEFT
    int ALT_RIGHT -> ALT_RIGHT
    int APOSTROPHE -> APOSTROPHE
    int AT -> AT
    int B -> B
    int BACK -> BACK
    int BACKSLASH -> BACKSLASH
    int C -> C
    int CALL -> CALL
    int CAMERA -> CAMERA
    int CLEAR -> CLEAR
    int COMMA -> COMMA
    int D -> D
    int DEL -> DEL
    int BACKSPACE -> BACKSPACE
    int FORWARD_DEL -> FORWARD_DEL
    int DPAD_CENTER -> DPAD_CENTER
    int DPAD_DOWN -> DPAD_DOWN
    int DPAD_LEFT -> DPAD_LEFT
    int DPAD_RIGHT -> DPAD_RIGHT
    int DPAD_UP -> DPAD_UP
    int CENTER -> CENTER
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int E -> E
    int ENDCALL -> ENDCALL
    int ENTER -> ENTER
    int ENVELOPE -> ENVELOPE
    int EQUALS -> EQUALS
    int EXPLORER -> EXPLORER
    int F -> F
    int FOCUS -> FOCUS
    int G -> G
    int GRAVE -> GRAVE
    int H -> H
    int HEADSETHOOK -> HEADSETHOOK
    int HOME -> HOME
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int LEFT_BRACKET -> LEFT_BRACKET
    int M -> M
    int MEDIA_FAST_FORWARD -> MEDIA_FAST_FORWARD
    int MEDIA_NEXT -> MEDIA_NEXT
    int MEDIA_PLAY_PAUSE -> MEDIA_PLAY_PAUSE
    int MEDIA_PREVIOUS -> MEDIA_PREVIOUS
    int MEDIA_REWIND -> MEDIA_REWIND
    int MEDIA_STOP -> MEDIA_STOP
    int MENU -> MENU
    int MINUS -> MINUS
    int MUTE -> MUTE
    int N -> N
    int NOTIFICATION -> NOTIFICATION
    int NUM -> NUM
    int O -> O
    int P -> P
    int PERIOD -> PERIOD
    int PLUS -> PLUS
    int POUND -> POUND
    int POWER -> POWER
    int Q -> Q
    int R -> R
    int RIGHT_BRACKET -> RIGHT_BRACKET
    int S -> S
    int SEARCH -> SEARCH
    int SEMICOLON -> SEMICOLON
    int SHIFT_LEFT -> SHIFT_LEFT
    int SHIFT_RIGHT -> SHIFT_RIGHT
    int SLASH -> SLASH
    int SOFT_LEFT -> SOFT_LEFT
    int SOFT_RIGHT -> SOFT_RIGHT
    int SPACE -> SPACE
    int STAR -> STAR
    int SYM -> SYM
    int T -> T
    int TAB -> TAB
    int U -> U
    int UNKNOWN -> UNKNOWN
    int V -> V
    int VOLUME_DOWN -> VOLUME_DOWN
    int VOLUME_UP -> VOLUME_UP
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int META_ALT_LEFT_ON -> META_ALT_LEFT_ON
    int META_ALT_ON -> META_ALT_ON
    int META_ALT_RIGHT_ON -> META_ALT_RIGHT_ON
    int META_SHIFT_LEFT_ON -> META_SHIFT_LEFT_ON
    int META_SHIFT_ON -> META_SHIFT_ON
    int META_SHIFT_RIGHT_ON -> META_SHIFT_RIGHT_ON
    int META_SYM_ON -> META_SYM_ON
    int CONTROL_LEFT -> CONTROL_LEFT
    int CONTROL_RIGHT -> CONTROL_RIGHT
    int ESCAPE -> ESCAPE
    int END -> END
    int INSERT -> INSERT
    int PAGE_UP -> PAGE_UP
    int PAGE_DOWN -> PAGE_DOWN
    int PICTSYMBOLS -> PICTSYMBOLS
    int SWITCH_CHARSET -> SWITCH_CHARSET
    int BUTTON_CIRCLE -> BUTTON_CIRCLE
    int BUTTON_A -> BUTTON_A
    int BUTTON_B -> BUTTON_B
    int BUTTON_C -> BUTTON_C
    int BUTTON_X -> BUTTON_X
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_Z -> BUTTON_Z
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_THUMBL -> BUTTON_THUMBL
    int BUTTON_THUMBR -> BUTTON_THUMBR
    int BUTTON_START -> BUTTON_START
    int BUTTON_SELECT -> BUTTON_SELECT
    int BUTTON_MODE -> BUTTON_MODE
    int COLON -> COLON
    int F1 -> F1
    int F2 -> F2
    int F3 -> F3
    int F4 -> F4
    int F5 -> F5
    int F6 -> F6
    int F7 -> F7
    int F8 -> F8
    int F9 -> F9
    int F10 -> F10
    int F11 -> F11
    int F12 -> F12
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> Landscape
    com.badlogic.gdx.Input$Orientation Portrait -> Portrait
    com.badlogic.gdx.Input$Orientation[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> HardwareKeyboard
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> OnscreenKeyboard
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> MultitouchScreen
    com.badlogic.gdx.Input$Peripheral Accelerometer -> Accelerometer
    com.badlogic.gdx.Input$Peripheral Compass -> Compass
    com.badlogic.gdx.Input$Peripheral Vibrator -> Vibrator
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> input
    void canceled() -> canceled
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> processors
    void addProcessor(int,com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(int) -> removeProcessor
    void addProcessor(com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(com.badlogic.gdx.InputProcessor) -> removeProcessor
    int size() -> size
    void clear() -> clear
    void setProcessors(com.badlogic.gdx.utils.Array) -> setProcessors
    com.badlogic.gdx.utils.Array getProcessors() -> getProcessors
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.LifecycleListener:
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Net -> com.badlogic.gdx.Net:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.Net$HttpMethods:
    java.lang.String GET -> GET
    java.lang.String POST -> POST
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.Net$HttpRequest:
    java.lang.String httpMethod -> httpMethod
    java.lang.String url -> url
    java.util.Map headers -> headers
    int timeOut -> timeOut
    java.lang.String content -> content
    java.io.InputStream contentStream -> contentStream
    long contentLength -> contentLength
    void setUrl(java.lang.String) -> setUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setContent(java.lang.String) -> setContent
    void setContent(java.io.InputStream,long) -> setContent
    void setTimeOut(int) -> setTimeOut
    int getTimeOut() -> getTimeOut
    java.lang.String getMethod() -> getMethod
    java.lang.String getUrl() -> getUrl
    java.lang.String getContent() -> getContent
    java.io.InputStream getContentStream() -> getContentStream
    long getContentLength() -> getContentLength
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.Net$HttpResponse:
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.Net$HttpStatus getStatus() -> getStatus
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.Net$HttpResponseListener:
    void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse) -> handleHttpResponse
    void failed(java.lang.Throwable) -> failed
com.badlogic.gdx.Net$HttpStatus -> com.badlogic.gdx.Net$HttpStatus:
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.Net$Protocol:
    com.badlogic.gdx.Net$Protocol TCP -> TCP
    com.badlogic.gdx.Net$Protocol[] $VALUES -> $VALUES
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.StreamUtils -> com.badlogic.gdx.StreamUtils:
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void copyStream(java.io.InputStream,java.io.OutputStream,int) -> copyStream
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> VERSION
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> fileName
    java.lang.Class type -> type
    com.badlogic.gdx.assets.AssetLoaderParameters params -> params
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error(java.lang.String,java.lang.Class,java.lang.Throwable) -> error
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> manager
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> assetDesc
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> loader
    java.util.concurrent.ExecutorService threadPool -> threadPool
    long startTime -> startTime
    boolean asyncDone -> asyncDone
    boolean dependenciesLoaded -> dependenciesLoaded
    com.badlogic.gdx.utils.Array dependencies -> dependencies
    java.util.concurrent.Future depsFuture -> depsFuture
    java.util.concurrent.Future loadFuture -> loadFuture
    java.lang.Object asset -> asset
    int ticks -> ticks
    boolean cancel -> cancel
    java.lang.Void call() -> call
    boolean update() -> update
    void handleSyncLoader() -> handleSyncLoader
    void handleAsyncLoader() -> handleAsyncLoader
    java.lang.Object getAsset() -> getAsset
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> assets
    com.badlogic.gdx.utils.ObjectMap assetTypes -> assetTypes
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> assetDependencies
    com.badlogic.gdx.utils.ObjectMap loaders -> loaders
    com.badlogic.gdx.utils.Array loadQueue -> loadQueue
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Stack tasks -> tasks
    com.badlogic.gdx.assets.AssetErrorListener listener -> listener
    int loaded -> loaded
    int toLoad -> toLoad
    com.badlogic.gdx.utils.Logger log -> log
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    void unload(java.lang.String) -> unload
    boolean containsAsset(java.lang.Object) -> containsAsset
    java.lang.String getAssetFileName(java.lang.Object) -> getAssetFileName
    boolean isLoaded(java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.String,java.lang.Class) -> isLoaded
    void load(java.lang.String,java.lang.Class) -> load
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    void load(com.badlogic.gdx.assets.AssetDescriptor) -> load
    void disposeDependencies(java.lang.String) -> disposeDependencies
    boolean update() -> update
    boolean update(int) -> update
    void finishLoading() -> finishLoading
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> injectDependency
    void nextTask() -> nextTask
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> addTask
    boolean updateTask() -> updateTask
    void incrementRefCountedDependencies(java.lang.String) -> incrementRefCountedDependencies
    void handleTaskError(java.lang.Throwable) -> handleTaskError
    void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    int getLoadedAssets() -> getLoadedAssets
    int getQueuedAssets() -> getQueuedAssets
    float getProgress() -> getProgress
    void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> setErrorListener
    void dispose() -> dispose
    void clear() -> clear
    com.badlogic.gdx.utils.Logger getLogger() -> getLogger
    int getReferenceCount(java.lang.String) -> getReferenceCount
    void setReferenceCount(java.lang.String,int) -> setReferenceCount
    java.lang.String getDiagnostics() -> getDiagnostics
    com.badlogic.gdx.utils.Array getAssetNames() -> getAssetNames
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> getDependencies
    java.lang.Class getAssetType(java.lang.String) -> getAssetType
com.badlogic.gdx.assets.AssetManager$1 -> com.badlogic.gdx.assets.AssetManager$1:
    com.badlogic.gdx.assets.AssetManager this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> object
    int refCount -> refCount
    void incRefCount() -> incRefCount
    void decRefCount() -> decRefCount
    int getRefCount() -> getRefCount
    void setRefCount(int) -> setRefCount
    java.lang.Object getObject(java.lang.Class) -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> resolver
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> flip
    com.badlogic.gdx.graphics.Texture$TextureFilter minFitler -> minFitler
    com.badlogic.gdx.graphics.Texture$TextureFilter maxFilter -> maxFilter
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> bitmapFontData
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    com.badlogic.gdx.audio.Music load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadAsync
    com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String textureAtlasPath -> textureAtlasPath
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    com.badlogic.gdx.audio.Sound load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> data
    com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> flip
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.graphics.TextureData data -> data
    com.badlogic.gdx.graphics.Texture texture -> texture
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadAsync
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.TextureData textureData -> textureData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.TileAtlasLoader -> com.badlogic.gdx.assets.loaders.TileAtlasLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter -> com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    java.lang.String tileMapFile -> tileMapFile
    java.lang.String inputDirectory -> inputDirectory
com.badlogic.gdx.assets.loaders.TileMapRendererLoader -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> getDependencies
    com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> load
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    java.lang.String imageDirectory -> imageDirectory
    int tilesPerBlockX -> tilesPerBlockX
    int tilesPerBlockY -> tilesPerBlockY
    float unitsPerTileX -> unitsPerTileX
    float unitsPerTileY -> unitsPerTileY
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> baseResolver
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> descriptors
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> resolve
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> choose
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> portraitWidth
    int portraitHeight -> portraitHeight
    java.lang.String suffix -> suffix
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getPosition() -> getPosition
    void dispose() -> dispose
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void dispose() -> dispose
    void stop(long) -> stop
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String contents -> contents
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLineWidth(float) -> glLineWidth
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glFogfv(int,float[],int) -> glFogfv
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGLU -> com.badlogic.gdx.backends.android.AndroidGLU:
    void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidDaydream app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    boolean isContinuousRendering() -> isContinuousRendering
    boolean isFullscreen() -> isFullscreen
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void clearManagedCaches() -> clearManagedCaches
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW getView() -> getView
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    float getDensity() -> getDensity
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setContinuousRendering(boolean) -> setContinuousRendering
    void requestRendering() -> requestRendering
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    android.service.wallpaper.WallpaperService service -> service
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.service.wallpaper.WallpaperService getService() -> getService
    android.service.wallpaper.WallpaperService$Engine getEngine() -> getEngine
    com.badlogic.gdx.ApplicationListener getListener() -> getListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int runningEngines -> runningEngines
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    com.badlogic.gdx.ApplicationListener createListener(boolean) -> createListener
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration createConfig() -> createConfig
    void offsetChange(com.badlogic.gdx.ApplicationListener,float,float,float,float,int,int) -> offsetChange
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    com.badlogic.gdx.ApplicationListener listener -> listener
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    float val$xOffset -> val$xOffset
    float val$yOffset -> val$yOffset
    float val$xOffsetStep -> val$xOffsetStep
    float val$yOffsetStep -> val$yOffsetStep
    int val$xPixelOffset -> val$xPixelOffset
    int val$yPixelOffset -> val$yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    void stop() -> stop
    float getPosition() -> getPosition
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidServerSocket -> com.badlogic.gdx.backends.android.AndroidServerSocket:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSocket -> com.badlogic.gdx.backends.android.AndroidSocket:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    int eglGetError() -> eglGetError
    boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    boolean eglWaitGL() -> eglWaitGL
    boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,java.lang.Object) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void returns(boolean) -> returns
    void returns(java.lang.Object) -> returns
    java.lang.String toString(java.lang.Object) -> toString
    void arg(java.lang.String,int[]) -> arg
    void arg(java.lang.String,java.lang.Object[]) -> arg
    java.lang.String toString(int,int[],int) -> toString
    java.lang.String toString(int,java.lang.Object[],int) -> toString
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    java.lang.String TAG -> TAG
    boolean LOG_VIEW -> LOG_VIEW
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    android.view.SurfaceHolder getHolder() -> getHolder
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDestroy() -> onDestroy
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mEglOwner -> mEglOwner
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    void checkThread() -> checkThread
    void checkError() -> checkError
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    java.lang.String getErrorString(int) -> getErrorString
    int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,boolean) -> arg
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,float) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void arg(java.lang.String,int,int[],int) -> arg
    void arg(java.lang.String,int,short[],int) -> arg
    void arg(java.lang.String,int,float[],int) -> arg
    void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    java.lang.String toString(int,int,int[],int) -> toString
    java.lang.String toString(int,short[],int) -> toString
    java.lang.String toString(int,float[],int) -> toString
    java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String getClearBufferMask(int) -> getClearBufferMask
    java.lang.String getFactor(int) -> getFactor
    java.lang.String getShadeModel(int) -> getShadeModel
    java.lang.String getTextureTarget(int) -> getTextureTarget
    java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    java.lang.String getMatrixMode(int) -> getMatrixMode
    java.lang.String getClientState(int) -> getClientState
    java.lang.String getCap(int) -> getCap
    java.lang.String getTexturePName(int) -> getTexturePName
    java.lang.String getTextureParamName(float) -> getTextureParamName
    java.lang.String getFogPName(int) -> getFogPName
    int getFogParamCount(int) -> getFogParamCount
    java.lang.String getBeginMode(int) -> getBeginMode
    java.lang.String getIndexType(int) -> getIndexType
    java.lang.String getIntegerStateName(int) -> getIntegerStateName
    int getIntegerStateSize(int) -> getIntegerStateSize
    int getIntegerStateFormat(int) -> getIntegerStateFormat
    java.lang.String getHintTarget(int) -> getHintTarget
    java.lang.String getHintMode(int) -> getHintMode
    java.lang.String getFaceName(int) -> getFaceName
    java.lang.String getMaterialPName(int) -> getMaterialPName
    int getMaterialParamCount(int) -> getMaterialParamCount
    java.lang.String getLightName(int) -> getLightName
    java.lang.String getLightPName(int) -> getLightPName
    int getLightParamCount(int) -> getLightParamCount
    java.lang.String getLightModelPName(int) -> getLightModelPName
    int getLightModelParamCount(int) -> getLightModelParamCount
    java.lang.String getPointerTypeName(int) -> getPointerTypeName
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    void doElement(java.lang.StringBuilder,int,int) -> doElement
    void bindArrays() -> bindArrays
    void unbindArrays() -> unbindArrays
    void startLogIndices() -> startLogIndices
    void endLogIndices() -> endLogIndices
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    int sizeof(int) -> sizeof
    int getStride() -> getStride
    void bindByteBuffer() -> bindByteBuffer
    void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void run() -> run
    void guardedRun() -> guardedRun
    boolean needToWait() -> needToWait
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
    java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    void glTexGenf(int,int,float) -> glTexGenf
    void glTexGenfv(int,int,float[],int) -> glTexGenfv
    void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    void glTexGeni(int,int,int) -> glTexGeni
    void glTexGeniv(int,int,int[],int) -> glTexGeniv
    void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    void glTexGenx(int,int,int) -> glTexGenx
    void glTexGenxv(int,int,int[],int) -> glTexGenxv
    void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.files.FileHandle$1:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    boolean isDirectory() -> isDirectory
    long length() -> length
    boolean exists() -> exists
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    java.io.OutputStream write(boolean) -> write
    com.badlogic.gdx.files.FileHandle[] list() -> list
    void mkdirs() -> mkdirs
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 up -> up
    com.badlogic.gdx.math.Matrix4 projection -> projection
    com.badlogic.gdx.math.Matrix4 view -> view
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 invProjectionView -> invProjectionView
    float near -> near
    float far -> far
    float viewportWidth -> viewportWidth
    float viewportHeight -> viewportHeight
    com.badlogic.gdx.math.Frustum frustum -> frustum
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.collision.Ray ray -> ray
    void update() -> update
    void update(boolean) -> update
    void apply(com.badlogic.gdx.graphics.GL10) -> apply
    void lookAt(float,float,float) -> lookAt
    void normalizeUp() -> normalizeUp
    void rotate(float,float,float,float) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> rotateAround
    void translate(float,float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> unproject
    void unproject(com.badlogic.gdx.math.Vector3) -> unproject
    void project(com.badlogic.gdx.math.Vector3) -> project
    void project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float) -> getPickRay
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> CLEAR
    com.badlogic.gdx.graphics.Color WHITE -> WHITE
    com.badlogic.gdx.graphics.Color BLACK -> BLACK
    com.badlogic.gdx.graphics.Color RED -> RED
    com.badlogic.gdx.graphics.Color GREEN -> GREEN
    com.badlogic.gdx.graphics.Color BLUE -> BLUE
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> LIGHT_GRAY
    com.badlogic.gdx.graphics.Color GRAY -> GRAY
    com.badlogic.gdx.graphics.Color DARK_GRAY -> DARK_GRAY
    com.badlogic.gdx.graphics.Color PINK -> PINK
    com.badlogic.gdx.graphics.Color ORANGE -> ORANGE
    com.badlogic.gdx.graphics.Color YELLOW -> YELLOW
    com.badlogic.gdx.graphics.Color MAGENTA -> MAGENTA
    com.badlogic.gdx.graphics.Color CYAN -> CYAN
    com.badlogic.gdx.graphics.Color tmp -> tmp
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> mul
    com.badlogic.gdx.graphics.Color mul(float) -> mul
    com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> sub
    void clamp() -> clamp
    void set(float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> toFloatBits
    int toIntBits() -> toIntBits
    java.lang.String toString() -> toString
    com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> valueOf
    float toFloatBits(int,int,int,int) -> toFloatBits
    float toFloatBits(float,float,float,float) -> toFloatBits
    int toIntBits(int,int,int,int) -> toIntBits
    int alpha(float) -> alpha
    int luminanceAlpha(float,float) -> luminanceAlpha
    int rgb565(float,float,float) -> rgb565
    int rgba4444(float,float,float,float) -> rgba4444
    int rgb888(float,float,float) -> rgb888
    int rgba8888(float,float,float,float) -> rgba8888
    int rgb565(com.badlogic.gdx.graphics.Color) -> rgb565
    int rgba4444(com.badlogic.gdx.graphics.Color) -> rgba4444
    int rgb888(com.badlogic.gdx.graphics.Color) -> rgb888
    int rgba8888(com.badlogic.gdx.graphics.Color) -> rgba8888
    void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb565ToColor
    void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba4444ToColor
    void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb888ToColor
    void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba8888ToColor
    com.badlogic.gdx.graphics.Color tmp() -> tmp
    com.badlogic.gdx.graphics.Color cpy() -> cpy
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> startTime
    void log() -> log
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.GL10:
    int GL_OES_VERSION_1_0 -> GL_OES_VERSION_1_0
    int GL_OES_read_format -> GL_OES_read_format
    int GL_OES_compressed_paletted_texture -> GL_OES_compressed_paletted_texture
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_FOG -> GL_FOG
    int GL_LIGHTING -> GL_LIGHTING
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_ALPHA_TEST -> GL_ALPHA_TEST
    int GL_BLEND -> GL_BLEND
    int GL_COLOR_LOGIC_OP -> GL_COLOR_LOGIC_OP
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_POINT_SMOOTH -> GL_POINT_SMOOTH
    int GL_LINE_SMOOTH -> GL_LINE_SMOOTH
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_COLOR_MATERIAL -> GL_COLOR_MATERIAL
    int GL_NORMALIZE -> GL_NORMALIZE
    int GL_RESCALE_NORMAL -> GL_RESCALE_NORMAL
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_VERTEX_ARRAY -> GL_VERTEX_ARRAY
    int GL_NORMAL_ARRAY -> GL_NORMAL_ARRAY
    int GL_COLOR_ARRAY -> GL_COLOR_ARRAY
    int GL_TEXTURE_COORD_ARRAY -> GL_TEXTURE_COORD_ARRAY
    int GL_MULTISAMPLE -> GL_MULTISAMPLE
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_ALPHA_TO_ONE -> GL_SAMPLE_ALPHA_TO_ONE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_STACK_OVERFLOW -> GL_STACK_OVERFLOW
    int GL_STACK_UNDERFLOW -> GL_STACK_UNDERFLOW
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_EXP -> GL_EXP
    int GL_EXP2 -> GL_EXP2
    int GL_FOG_DENSITY -> GL_FOG_DENSITY
    int GL_FOG_START -> GL_FOG_START
    int GL_FOG_END -> GL_FOG_END
    int GL_FOG_MODE -> GL_FOG_MODE
    int GL_FOG_COLOR -> GL_FOG_COLOR
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_SMOOTH_POINT_SIZE_RANGE -> GL_SMOOTH_POINT_SIZE_RANGE
    int GL_SMOOTH_LINE_WIDTH_RANGE -> GL_SMOOTH_LINE_WIDTH_RANGE
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES -> GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES -> GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    int GL_MAX_LIGHTS -> GL_MAX_LIGHTS
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_MODELVIEW_STACK_DEPTH -> GL_MAX_MODELVIEW_STACK_DEPTH
    int GL_MAX_PROJECTION_STACK_DEPTH -> GL_MAX_PROJECTION_STACK_DEPTH
    int GL_MAX_TEXTURE_STACK_DEPTH -> GL_MAX_TEXTURE_STACK_DEPTH
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_PERSPECTIVE_CORRECTION_HINT -> GL_PERSPECTIVE_CORRECTION_HINT
    int GL_POINT_SMOOTH_HINT -> GL_POINT_SMOOTH_HINT
    int GL_LINE_SMOOTH_HINT -> GL_LINE_SMOOTH_HINT
    int GL_POLYGON_SMOOTH_HINT -> GL_POLYGON_SMOOTH_HINT
    int GL_FOG_HINT -> GL_FOG_HINT
    int GL_LIGHT_MODEL_AMBIENT -> GL_LIGHT_MODEL_AMBIENT
    int GL_LIGHT_MODEL_TWO_SIDE -> GL_LIGHT_MODEL_TWO_SIDE
    int GL_AMBIENT -> GL_AMBIENT
    int GL_DIFFUSE -> GL_DIFFUSE
    int GL_SPECULAR -> GL_SPECULAR
    int GL_POSITION -> GL_POSITION
    int GL_SPOT_DIRECTION -> GL_SPOT_DIRECTION
    int GL_SPOT_EXPONENT -> GL_SPOT_EXPONENT
    int GL_SPOT_CUTOFF -> GL_SPOT_CUTOFF
    int GL_CONSTANT_ATTENUATION -> GL_CONSTANT_ATTENUATION
    int GL_LINEAR_ATTENUATION -> GL_LINEAR_ATTENUATION
    int GL_QUADRATIC_ATTENUATION -> GL_QUADRATIC_ATTENUATION
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_FLOAT -> GL_FLOAT
    int GL_CLEAR -> GL_CLEAR
    int GL_AND -> GL_AND
    int GL_AND_REVERSE -> GL_AND_REVERSE
    int GL_COPY -> GL_COPY
    int GL_AND_INVERTED -> GL_AND_INVERTED
    int GL_NOOP -> GL_NOOP
    int GL_XOR -> GL_XOR
    int GL_OR -> GL_OR
    int GL_NOR -> GL_NOR
    int GL_EQUIV -> GL_EQUIV
    int GL_INVERT -> GL_INVERT
    int GL_OR_REVERSE -> GL_OR_REVERSE
    int GL_COPY_INVERTED -> GL_COPY_INVERTED
    int GL_OR_INVERTED -> GL_OR_INVERTED
    int GL_NAND -> GL_NAND
    int GL_SET -> GL_SET
    int GL_EMISSION -> GL_EMISSION
    int GL_SHININESS -> GL_SHININESS
    int GL_AMBIENT_AND_DIFFUSE -> GL_AMBIENT_AND_DIFFUSE
    int GL_MODELVIEW -> GL_MODELVIEW
    int GL_PROJECTION -> GL_PROJECTION
    int GL_TEXTURE -> GL_TEXTURE
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FLAT -> GL_FLAT
    int GL_SMOOTH -> GL_SMOOTH
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_MODULATE -> GL_MODULATE
    int GL_DECAL -> GL_DECAL
    int GL_ADD -> GL_ADD
    int GL_TEXTURE_ENV_MODE -> GL_TEXTURE_ENV_MODE
    int GL_TEXTURE_ENV_COLOR -> GL_TEXTURE_ENV_COLOR
    int GL_TEXTURE_ENV -> GL_TEXTURE_ENV
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_PALETTE4_RGB8_OES -> GL_PALETTE4_RGB8_OES
    int GL_PALETTE4_RGBA8_OES -> GL_PALETTE4_RGBA8_OES
    int GL_PALETTE4_R5_G6_B5_OES -> GL_PALETTE4_R5_G6_B5_OES
    int GL_PALETTE4_RGBA4_OES -> GL_PALETTE4_RGBA4_OES
    int GL_PALETTE4_RGB5_A1_OES -> GL_PALETTE4_RGB5_A1_OES
    int GL_PALETTE8_RGB8_OES -> GL_PALETTE8_RGB8_OES
    int GL_PALETTE8_RGBA8_OES -> GL_PALETTE8_RGBA8_OES
    int GL_PALETTE8_R5_G6_B5_OES -> GL_PALETTE8_R5_G6_B5_OES
    int GL_PALETTE8_RGBA4_OES -> GL_PALETTE8_RGBA4_OES
    int GL_PALETTE8_RGB5_A1_OES -> GL_PALETTE8_RGB5_A1_OES
    int GL_LIGHT0 -> GL_LIGHT0
    int GL_LIGHT1 -> GL_LIGHT1
    int GL_LIGHT2 -> GL_LIGHT2
    int GL_LIGHT3 -> GL_LIGHT3
    int GL_LIGHT4 -> GL_LIGHT4
    int GL_LIGHT5 -> GL_LIGHT5
    int GL_LIGHT6 -> GL_LIGHT6
    int GL_LIGHT7 -> GL_LIGHT7
    int GL_POINT -> GL_POINT
    int GL_LINE -> GL_LINE
    int GL_FILL -> GL_FILL
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPointSize(float) -> glPointSize
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glShadeModel(int) -> glShadeModel
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.GL11:
    int GL_OES_VERSION_1_0 -> GL_OES_VERSION_1_0
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_POLYGON_SMOOTH_HINT -> GL_POLYGON_SMOOTH_HINT
    int GL_VERSION_ES_CM_1_0 -> GL_VERSION_ES_CM_1_0
    int GL_VERSION_ES_CL_1_0 -> GL_VERSION_ES_CL_1_0
    int GL_VERSION_ES_CM_1_1 -> GL_VERSION_ES_CM_1_1
    int GL_VERSION_ES_CL_1_1 -> GL_VERSION_ES_CL_1_1
    int GL_CLIP_PLANE0 -> GL_CLIP_PLANE0
    int GL_CLIP_PLANE1 -> GL_CLIP_PLANE1
    int GL_CLIP_PLANE2 -> GL_CLIP_PLANE2
    int GL_CLIP_PLANE3 -> GL_CLIP_PLANE3
    int GL_CLIP_PLANE4 -> GL_CLIP_PLANE4
    int GL_CLIP_PLANE5 -> GL_CLIP_PLANE5
    int GL_CURRENT_COLOR -> GL_CURRENT_COLOR
    int GL_CURRENT_NORMAL -> GL_CURRENT_NORMAL
    int GL_CURRENT_TEXTURE_COORDS -> GL_CURRENT_TEXTURE_COORDS
    int GL_POINT_SIZE -> GL_POINT_SIZE
    int GL_POINT_SIZE_MIN -> GL_POINT_SIZE_MIN
    int GL_POINT_SIZE_MAX -> GL_POINT_SIZE_MAX
    int GL_POINT_FADE_THRESHOLD_SIZE -> GL_POINT_FADE_THRESHOLD_SIZE
    int GL_POINT_DISTANCE_ATTENUATION -> GL_POINT_DISTANCE_ATTENUATION
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_SHADE_MODEL -> GL_SHADE_MODEL
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_MATRIX_MODE -> GL_MATRIX_MODE
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_MODELVIEW_STACK_DEPTH -> GL_MODELVIEW_STACK_DEPTH
    int GL_PROJECTION_STACK_DEPTH -> GL_PROJECTION_STACK_DEPTH
    int GL_TEXTURE_STACK_DEPTH -> GL_TEXTURE_STACK_DEPTH
    int GL_MODELVIEW_MATRIX -> GL_MODELVIEW_MATRIX
    int GL_PROJECTION_MATRIX -> GL_PROJECTION_MATRIX
    int GL_TEXTURE_MATRIX -> GL_TEXTURE_MATRIX
    int GL_ALPHA_TEST_FUNC -> GL_ALPHA_TEST_FUNC
    int GL_ALPHA_TEST_REF -> GL_ALPHA_TEST_REF
    int GL_BLEND_DST -> GL_BLEND_DST
    int GL_BLEND_SRC -> GL_BLEND_SRC
    int GL_LOGIC_OP_MODE -> GL_LOGIC_OP_MODE
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_MAX_CLIP_PLANES -> GL_MAX_CLIP_PLANES
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_VERTEX_ARRAY_SIZE -> GL_VERTEX_ARRAY_SIZE
    int GL_VERTEX_ARRAY_TYPE -> GL_VERTEX_ARRAY_TYPE
    int GL_VERTEX_ARRAY_STRIDE -> GL_VERTEX_ARRAY_STRIDE
    int GL_NORMAL_ARRAY_TYPE -> GL_NORMAL_ARRAY_TYPE
    int GL_NORMAL_ARRAY_STRIDE -> GL_NORMAL_ARRAY_STRIDE
    int GL_COLOR_ARRAY_SIZE -> GL_COLOR_ARRAY_SIZE
    int GL_COLOR_ARRAY_TYPE -> GL_COLOR_ARRAY_TYPE
    int GL_COLOR_ARRAY_STRIDE -> GL_COLOR_ARRAY_STRIDE
    int GL_TEXTURE_COORD_ARRAY_SIZE -> GL_TEXTURE_COORD_ARRAY_SIZE
    int GL_TEXTURE_COORD_ARRAY_TYPE -> GL_TEXTURE_COORD_ARRAY_TYPE
    int GL_TEXTURE_COORD_ARRAY_STRIDE -> GL_TEXTURE_COORD_ARRAY_STRIDE
    int GL_VERTEX_ARRAY_POINTER -> GL_VERTEX_ARRAY_POINTER
    int GL_NORMAL_ARRAY_POINTER -> GL_NORMAL_ARRAY_POINTER
    int GL_COLOR_ARRAY_POINTER -> GL_COLOR_ARRAY_POINTER
    int GL_TEXTURE_COORD_ARRAY_POINTER -> GL_TEXTURE_COORD_ARRAY_POINTER
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_CLIENT_ACTIVE_TEXTURE -> GL_CLIENT_ACTIVE_TEXTURE
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_VERTEX_ARRAY_BUFFER_BINDING -> GL_VERTEX_ARRAY_BUFFER_BINDING
    int GL_NORMAL_ARRAY_BUFFER_BINDING -> GL_NORMAL_ARRAY_BUFFER_BINDING
    int GL_COLOR_ARRAY_BUFFER_BINDING -> GL_COLOR_ARRAY_BUFFER_BINDING
    int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING -> GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_SUBTRACT -> GL_SUBTRACT
    int GL_COMBINE -> GL_COMBINE
    int GL_COMBINE_RGB -> GL_COMBINE_RGB
    int GL_COMBINE_ALPHA -> GL_COMBINE_ALPHA
    int GL_RGB_SCALE -> GL_RGB_SCALE
    int GL_ADD_SIGNED -> GL_ADD_SIGNED
    int GL_INTERPOLATE -> GL_INTERPOLATE
    int GL_CONSTANT -> GL_CONSTANT
    int GL_PRIMARY_COLOR -> GL_PRIMARY_COLOR
    int GL_PREVIOUS -> GL_PREVIOUS
    int GL_OPERAND0_RGB -> GL_OPERAND0_RGB
    int GL_OPERAND1_RGB -> GL_OPERAND1_RGB
    int GL_OPERAND2_RGB -> GL_OPERAND2_RGB
    int GL_OPERAND0_ALPHA -> GL_OPERAND0_ALPHA
    int GL_OPERAND1_ALPHA -> GL_OPERAND1_ALPHA
    int GL_OPERAND2_ALPHA -> GL_OPERAND2_ALPHA
    int GL_ALPHA_SCALE -> GL_ALPHA_SCALE
    int GL_SRC0_RGB -> GL_SRC0_RGB
    int GL_SRC1_RGB -> GL_SRC1_RGB
    int GL_SRC2_RGB -> GL_SRC2_RGB
    int GL_SRC0_ALPHA -> GL_SRC0_ALPHA
    int GL_SRC1_ALPHA -> GL_SRC1_ALPHA
    int GL_SRC2_ALPHA -> GL_SRC2_ALPHA
    int GL_DOT3_RGB -> GL_DOT3_RGB
    int GL_DOT3_RGBA -> GL_DOT3_RGBA
    int GL_POINT_SIZE_ARRAY_OES -> GL_POINT_SIZE_ARRAY_OES
    int GL_POINT_SIZE_ARRAY_TYPE_OES -> GL_POINT_SIZE_ARRAY_TYPE_OES
    int GL_POINT_SIZE_ARRAY_STRIDE_OES -> GL_POINT_SIZE_ARRAY_STRIDE_OES
    int GL_POINT_SIZE_ARRAY_POINTER_OES -> GL_POINT_SIZE_ARRAY_POINTER_OES
    int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES -> GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    int GL_POINT_SPRITE_OES -> GL_POINT_SPRITE_OES
    int GL_COORD_REPLACE_OES -> GL_COORD_REPLACE_OES
    int GL_OES_point_size_array -> GL_OES_point_size_array
    int GL_OES_point_sprite -> GL_OES_point_sprite
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> GL_ES_VERSION_2_0
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FUNC_ADD -> GL_FUNC_ADD
    int GL_BLEND_EQUATION -> GL_BLEND_EQUATION
    int GL_BLEND_EQUATION_RGB -> GL_BLEND_EQUATION_RGB
    int GL_BLEND_EQUATION_ALPHA -> GL_BLEND_EQUATION_ALPHA
    int GL_FUNC_SUBTRACT -> GL_FUNC_SUBTRACT
    int GL_FUNC_REVERSE_SUBTRACT -> GL_FUNC_REVERSE_SUBTRACT
    int GL_BLEND_DST_RGB -> GL_BLEND_DST_RGB
    int GL_BLEND_SRC_RGB -> GL_BLEND_SRC_RGB
    int GL_BLEND_DST_ALPHA -> GL_BLEND_DST_ALPHA
    int GL_BLEND_SRC_ALPHA -> GL_BLEND_SRC_ALPHA
    int GL_CONSTANT_COLOR -> GL_CONSTANT_COLOR
    int GL_ONE_MINUS_CONSTANT_COLOR -> GL_ONE_MINUS_CONSTANT_COLOR
    int GL_CONSTANT_ALPHA -> GL_CONSTANT_ALPHA
    int GL_ONE_MINUS_CONSTANT_ALPHA -> GL_ONE_MINUS_CONSTANT_ALPHA
    int GL_BLEND_COLOR -> GL_BLEND_COLOR
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_STREAM_DRAW -> GL_STREAM_DRAW
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_CURRENT_VERTEX_ATTRIB -> GL_CURRENT_VERTEX_ATTRIB
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_BLEND -> GL_BLEND
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_STENCIL_BACK_FUNC -> GL_STENCIL_BACK_FUNC
    int GL_STENCIL_BACK_FAIL -> GL_STENCIL_BACK_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> GL_STENCIL_BACK_PASS_DEPTH_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> GL_STENCIL_BACK_PASS_DEPTH_PASS
    int GL_STENCIL_BACK_REF -> GL_STENCIL_BACK_REF
    int GL_STENCIL_BACK_VALUE_MASK -> GL_STENCIL_BACK_VALUE_MASK
    int GL_STENCIL_BACK_WRITEMASK -> GL_STENCIL_BACK_WRITEMASK
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_INT -> GL_INT
    int GL_UNSIGNED_INT -> GL_UNSIGNED_INT
    int GL_FLOAT -> GL_FLOAT
    int GL_FIXED -> GL_FIXED
    int GL_DEPTH_COMPONENT -> GL_DEPTH_COMPONENT
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FRAGMENT_SHADER -> GL_FRAGMENT_SHADER
    int GL_VERTEX_SHADER -> GL_VERTEX_SHADER
    int GL_MAX_VERTEX_ATTRIBS -> GL_MAX_VERTEX_ATTRIBS
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> GL_MAX_VERTEX_UNIFORM_VECTORS
    int GL_MAX_VARYING_VECTORS -> GL_MAX_VARYING_VECTORS
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    int GL_MAX_TEXTURE_IMAGE_UNITS -> GL_MAX_TEXTURE_IMAGE_UNITS
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> GL_MAX_FRAGMENT_UNIFORM_VECTORS
    int GL_SHADER_TYPE -> GL_SHADER_TYPE
    int GL_DELETE_STATUS -> GL_DELETE_STATUS
    int GL_LINK_STATUS -> GL_LINK_STATUS
    int GL_VALIDATE_STATUS -> GL_VALIDATE_STATUS
    int GL_ATTACHED_SHADERS -> GL_ATTACHED_SHADERS
    int GL_ACTIVE_UNIFORMS -> GL_ACTIVE_UNIFORMS
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> GL_ACTIVE_UNIFORM_MAX_LENGTH
    int GL_ACTIVE_ATTRIBUTES -> GL_ACTIVE_ATTRIBUTES
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    int GL_SHADING_LANGUAGE_VERSION -> GL_SHADING_LANGUAGE_VERSION
    int GL_CURRENT_PROGRAM -> GL_CURRENT_PROGRAM
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_INVERT -> GL_INVERT
    int GL_INCR_WRAP -> GL_INCR_WRAP
    int GL_DECR_WRAP -> GL_DECR_WRAP
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE -> GL_TEXTURE
    int GL_TEXTURE_CUBE_MAP -> GL_TEXTURE_CUBE_MAP
    int GL_TEXTURE_BINDING_CUBE_MAP -> GL_TEXTURE_BINDING_CUBE_MAP
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> GL_TEXTURE_CUBE_MAP_POSITIVE_X
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> GL_MAX_CUBE_MAP_TEXTURE_SIZE
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_MIRRORED_REPEAT -> GL_MIRRORED_REPEAT
    int GL_FLOAT_VEC2 -> GL_FLOAT_VEC2
    int GL_FLOAT_VEC3 -> GL_FLOAT_VEC3
    int GL_FLOAT_VEC4 -> GL_FLOAT_VEC4
    int GL_INT_VEC2 -> GL_INT_VEC2
    int GL_INT_VEC3 -> GL_INT_VEC3
    int GL_INT_VEC4 -> GL_INT_VEC4
    int GL_BOOL -> GL_BOOL
    int GL_BOOL_VEC2 -> GL_BOOL_VEC2
    int GL_BOOL_VEC3 -> GL_BOOL_VEC3
    int GL_BOOL_VEC4 -> GL_BOOL_VEC4
    int GL_FLOAT_MAT2 -> GL_FLOAT_MAT2
    int GL_FLOAT_MAT3 -> GL_FLOAT_MAT3
    int GL_FLOAT_MAT4 -> GL_FLOAT_MAT4
    int GL_SAMPLER_2D -> GL_SAMPLER_2D
    int GL_SAMPLER_CUBE -> GL_SAMPLER_CUBE
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> GL_VERTEX_ATTRIB_ARRAY_ENABLED
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> GL_VERTEX_ATTRIB_ARRAY_SIZE
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> GL_VERTEX_ATTRIB_ARRAY_STRIDE
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> GL_VERTEX_ATTRIB_ARRAY_TYPE
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> GL_VERTEX_ATTRIB_ARRAY_POINTER
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> GL_IMPLEMENTATION_COLOR_READ_TYPE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> GL_IMPLEMENTATION_COLOR_READ_FORMAT
    int GL_COMPILE_STATUS -> GL_COMPILE_STATUS
    int GL_INFO_LOG_LENGTH -> GL_INFO_LOG_LENGTH
    int GL_SHADER_SOURCE_LENGTH -> GL_SHADER_SOURCE_LENGTH
    int GL_SHADER_COMPILER -> GL_SHADER_COMPILER
    int GL_SHADER_BINARY_FORMATS -> GL_SHADER_BINARY_FORMATS
    int GL_NUM_SHADER_BINARY_FORMATS -> GL_NUM_SHADER_BINARY_FORMATS
    int GL_LOW_FLOAT -> GL_LOW_FLOAT
    int GL_MEDIUM_FLOAT -> GL_MEDIUM_FLOAT
    int GL_HIGH_FLOAT -> GL_HIGH_FLOAT
    int GL_LOW_INT -> GL_LOW_INT
    int GL_MEDIUM_INT -> GL_MEDIUM_INT
    int GL_HIGH_INT -> GL_HIGH_INT
    int GL_FRAMEBUFFER -> GL_FRAMEBUFFER
    int GL_RENDERBUFFER -> GL_RENDERBUFFER
    int GL_RGBA4 -> GL_RGBA4
    int GL_RGB5_A1 -> GL_RGB5_A1
    int GL_RGB565 -> GL_RGB565
    int GL_DEPTH_COMPONENT16 -> GL_DEPTH_COMPONENT16
    int GL_STENCIL_INDEX -> GL_STENCIL_INDEX
    int GL_STENCIL_INDEX8 -> GL_STENCIL_INDEX8
    int GL_RENDERBUFFER_WIDTH -> GL_RENDERBUFFER_WIDTH
    int GL_RENDERBUFFER_HEIGHT -> GL_RENDERBUFFER_HEIGHT
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> GL_RENDERBUFFER_INTERNAL_FORMAT
    int GL_RENDERBUFFER_RED_SIZE -> GL_RENDERBUFFER_RED_SIZE
    int GL_RENDERBUFFER_GREEN_SIZE -> GL_RENDERBUFFER_GREEN_SIZE
    int GL_RENDERBUFFER_BLUE_SIZE -> GL_RENDERBUFFER_BLUE_SIZE
    int GL_RENDERBUFFER_ALPHA_SIZE -> GL_RENDERBUFFER_ALPHA_SIZE
    int GL_RENDERBUFFER_DEPTH_SIZE -> GL_RENDERBUFFER_DEPTH_SIZE
    int GL_RENDERBUFFER_STENCIL_SIZE -> GL_RENDERBUFFER_STENCIL_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    int GL_COLOR_ATTACHMENT0 -> GL_COLOR_ATTACHMENT0
    int GL_DEPTH_ATTACHMENT -> GL_DEPTH_ATTACHMENT
    int GL_STENCIL_ATTACHMENT -> GL_STENCIL_ATTACHMENT
    int GL_NONE -> GL_NONE
    int GL_FRAMEBUFFER_COMPLETE -> GL_FRAMEBUFFER_COMPLETE
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    int GL_FRAMEBUFFER_UNSUPPORTED -> GL_FRAMEBUFFER_UNSUPPORTED
    int GL_FRAMEBUFFER_BINDING -> GL_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_BINDING -> GL_RENDERBUFFER_BINDING
    int GL_MAX_RENDERBUFFER_SIZE -> GL_MAX_RENDERBUFFER_SIZE
    int GL_INVALID_FRAMEBUFFER_OPERATION -> GL_INVALID_FRAMEBUFFER_OPERATION
    int GL_VERTEX_PROGRAM_POINT_SIZE -> GL_VERTEX_PROGRAM_POINT_SIZE
    int GL_COVERAGE_BUFFER_BIT_NV -> GL_COVERAGE_BUFFER_BIT_NV
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.GLCommon:
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> GL_TEXTURE_MAX_ANISOTROPY_EXT
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.GLU -> com.badlogic.gdx.graphics.GLU:
    void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> meshes
    boolean forceVBO -> forceVBO
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> vertices
    com.badlogic.gdx.graphics.glutils.IndexData indices -> indices
    boolean autoBind -> autoBind
    boolean isVertexArray -> isVertexArray
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[]) -> create
    void setVertices(float[]) -> setVertices
    void setVertices(float[],int,int) -> setVertices
    void getVertices(float[]) -> getVertices
    void getVertices(int,float[]) -> getVertices
    void getVertices(int,int,float[]) -> getVertices
    void getVertices(int,int,float[],int) -> getVertices
    void setIndices(short[]) -> setIndices
    void setIndices(short[],int,int) -> setIndices
    void getIndices(short[]) -> getIndices
    void getIndices(short[],int) -> getIndices
    int getNumIndices() -> getNumIndices
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    int getMaxIndices() -> getMaxIndices
    int getVertexSize() -> getVertexSize
    void setAutoBind(boolean) -> setAutoBind
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void render(int) -> render
    void render(int,int,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> render
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> getVertexAttribute
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> getVertexAttributes
    java.nio.FloatBuffer getVerticesBuffer() -> getVerticesBuffer
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> calculateBoundingBox
    void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    java.nio.ShortBuffer getIndicesBuffer() -> getIndicesBuffer
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> addManagedMesh
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> invalidateAllMeshes
    void clearAllMeshes(com.badlogic.gdx.Application) -> clearAllMeshes
    java.lang.String getManagedStatus() -> getManagedStatus
    void scale(float,float,float) -> scale
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,int,int) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> transform
    com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[]) -> copy
    com.badlogic.gdx.graphics.Mesh copy(boolean) -> copy
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> VertexArray
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> VertexBufferObject
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> VertexBufferObjectSubData
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> zoom
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void findDirectionForIsoView(float,float,int) -> findDirectionForIsoView
    float calculateAngle(float) -> calculateAngle
    com.badlogic.gdx.math.Vector3 calculateDirection(float) -> calculateDirection
    void update() -> update
    void update(boolean) -> update
    void setToOrtho(boolean) -> setToOrtho
    void setToOrtho(boolean,float,float) -> setToOrtho
    void rotate(float) -> rotate
    void translate(float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector2) -> translate
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> fieldOfView
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> blending
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> pixmap
    int color -> color
    boolean disposed -> disposed
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> setBlending
    void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> setFilter
    void setColor(int) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void fill() -> fill
    void drawLine(int,int,int,int) -> drawLine
    void drawRectangle(int,int,int,int) -> drawRectangle
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    void fillRectangle(int,int,int,int) -> fillRectangle
    void drawCircle(int,int,int) -> drawCircle
    void fillCircle(int,int,int) -> fillCircle
    int getPixel(int,int) -> getPixel
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void dispose() -> dispose
    void drawPixel(int,int) -> drawPixel
    void drawPixel(int,int,int) -> drawPixel
    int getGLFormat() -> getGLFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLType() -> getGLType
    java.nio.ByteBuffer getPixels() -> getPixels
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> getBlending
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> None
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> SourceOver
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> NearestNeighbour
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> BiLinear
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> Alpha
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> Intensity
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> LuminanceAlpha
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> RGB565
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> RGBA4444
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> RGB888
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> RGBA8888
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> toGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> fromGdx2DPixmapFormat
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writeCIM
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> readCIM
    void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writePNG
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] writeBuffer -> writeBuffer
    byte[] readBuffer -> readBuffer
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> read
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    int[] crcTable -> crcTable
    int ZLIB_BLOCK_SIZE -> ZLIB_BLOCK_SIZE
    byte[] write(com.badlogic.gdx.graphics.Pixmap) -> write
    byte[] createHeaderChunk(int,int) -> createHeaderChunk
    byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> createDataChunk
    byte[] createTrailerChunk() -> createTrailerChunk
    byte[] toChunk(java.lang.String,byte[]) -> toChunk
    void createCRCTable() -> createCRCTable
    int updateCRC(int,byte[]) -> updateCRC
    byte[] toZLIB(byte[]) -> toZLIB
    void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> writeUncompressedDeflateBlock
    int calcADLER32(byte[]) -> calcADLER32
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    boolean enforcePotImages -> enforcePotImages
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedTextures -> managedTextures
    java.nio.IntBuffer buffer -> buffer
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    int glHandle -> glHandle
    com.badlogic.gdx.graphics.TextureData data -> data
    void create(com.badlogic.gdx.graphics.TextureData) -> create
    int createGLHandle() -> createGLHandle
    void load(com.badlogic.gdx.graphics.TextureData) -> load
    void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> uploadImageData
    void reload() -> reload
    void bind() -> bind
    void bind(int) -> bind
    void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> getMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> getMagFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> getUWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> getVWrap
    com.badlogic.gdx.graphics.TextureData getTextureData() -> getTextureData
    boolean isManaged() -> isManaged
    int getTextureObjectHandle() -> getTextureObjectHandle
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> setWrap
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setFilter
    void dispose() -> dispose
    void setEnforcePotImages(boolean) -> setEnforcePotImages
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> addManagedTexture
    void clearAllTextures(com.badlogic.gdx.Application) -> clearAllTextures
    void invalidateAllTextures(com.badlogic.gdx.Application) -> invalidateAllTextures
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedTextures() -> getNumManagedTextures
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> Nearest
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> Linear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> MipMap
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> MipMapNearestNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> MipMapLinearNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> MipMapNearestLinear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> MipMapLinearLinear
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap() -> isMipMap
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> MirroredRepeat
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> ClampToEdge
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> Repeat
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCompressedData() -> consumeCompressedData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> Pixmap
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> Compressed
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> Float
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureDict -> com.badlogic.gdx.graphics.TextureDict:
    com.badlogic.gdx.utils.ObjectMap sDictionary -> sDictionary
    com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String) -> loadTexture
    com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> loadTexture
    void removeTexture(java.lang.String) -> removeTexture
    void unloadAll() -> unloadAll
com.badlogic.gdx.graphics.TextureRef -> com.badlogic.gdx.graphics.TextureRef:
    java.lang.String Name -> Name
    int mRefCount -> mRefCount
    com.badlogic.gdx.graphics.Texture mTexture -> mTexture
    void addRef() -> addRef
    int unload() -> unload
    void dispose() -> dispose
    void bind() -> bind
    com.badlogic.gdx.graphics.Texture get() -> get
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> usage
    int numComponents -> numComponents
    int offset -> offset
    java.lang.String alias -> alias
    com.badlogic.gdx.graphics.VertexAttribute Position() -> Position
    com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> TexCoords
    com.badlogic.gdx.graphics.VertexAttribute Normal() -> Normal
    com.badlogic.gdx.graphics.VertexAttribute Color() -> Color
    com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> ColorUnpacked
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    int vertexSize -> vertexSize
    int getOffset(int) -> getOffset
    com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> findByUsage
    int calculateOffsets() -> calculateOffsets
    void checkValidity() -> checkValidity
    int size() -> size
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> get
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> Position
    int Color -> Color
    int ColorPacked -> ColorPacked
    int Normal -> Normal
    int TextureCoordinates -> TextureCoordinates
    int Generic -> Generic
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    int NORMAL -> NORMAL
    int REVERSED -> REVERSED
    int LOOP -> LOOP
    int LOOP_REVERSED -> LOOP_REVERSED
    int LOOP_PINGPONG -> LOOP_PINGPONG
    int LOOP_RANDOM -> LOOP_RANDOM
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> keyFrames
    float frameDuration -> frameDuration
    float animationDuration -> animationDuration
    int playMode -> playMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> getKeyFrame
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> getKeyFrame
    int getKeyFrameIndex(float) -> getKeyFrameIndex
    void setPlayMode(int) -> setPlayMode
    boolean isAnimationFinished(float) -> isAnimationFinished
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> LOG2_PAGE_SIZE
    int PAGE_SIZE -> PAGE_SIZE
    int PAGES -> PAGES
    char[] xChars -> xChars
    char[] capChars -> capChars
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    boolean flipped -> flipped
    boolean integer -> integer
    boolean ownsTexture -> ownsTexture
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> load
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> getWrappedBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getWrappedBounds
    void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> computeGlyphAdvancesAndPositions
    int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> computeVisibleGlyphs
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void scale(float) -> scale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    float getLineHeight() -> getLineHeight
    float getSpaceWidth() -> getSpaceWidth
    float getXHeight() -> getXHeight
    float getCapHeight() -> getCapHeight
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    boolean isFlipped() -> isFlipped
    void dispose() -> dispose
    void setFixedWidthGlyphs(java.lang.CharSequence) -> setFixedWidthGlyphs
    boolean containsCharacter(char) -> containsCharacter
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> getData
    boolean ownsTexture() -> ownsTexture
    void setOwnsTexture(boolean) -> setOwnsTexture
    int indexOf(java.lang.CharSequence,char,int) -> indexOf
    boolean isWhitespace(char) -> isWhitespace
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> imagePath
    com.badlogic.gdx.files.FileHandle fontFile -> fontFile
    boolean flipped -> flipped
    float lineHeight -> lineHeight
    float capHeight -> capHeight
    float ascent -> ascent
    float descent -> descent
    float down -> down
    float scaleX -> scaleX
    float scaleY -> scaleY
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> glyphs
    float spaceWidth -> spaceWidth
    float xHeight -> xHeight
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> setGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> getFirstGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> getGlyph
    java.lang.String getImagePath() -> getImagePath
    com.badlogic.gdx.files.FileHandle getFontFile() -> getFontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int srcX -> srcX
    int srcY -> srcY
    int width -> width
    int height -> height
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int xoffset -> xoffset
    int yoffset -> yoffset
    int xadvance -> xadvance
    byte[][] kerning -> kerning
    int getKerning(char) -> getKerning
    void setKerning(int,int) -> setKerning
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> LEFT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> CENTER
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> RIGHT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> width
    float height -> height
    void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> set
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    float[] vertices -> vertices
    int idx -> idx
    float x -> x
    float y -> y
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    boolean integer -> integer
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color,int,int) -> setColor
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void clear() -> clear
    void require(int) -> require
    float addToCache(java.lang.CharSequence,float,float,int,int) -> addToCache
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> addGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> getBounds
    float getX() -> getX
    float getY() -> getY
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> getFont
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    float[] getVertices() -> getVertices
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> GDX2D_FORMAT_ALPHA
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> GDX2D_FORMAT_LUMINANCE_ALPHA
    int GDX2D_FORMAT_RGB888 -> GDX2D_FORMAT_RGB888
    int GDX2D_FORMAT_RGBA8888 -> GDX2D_FORMAT_RGBA8888
    int GDX2D_FORMAT_RGB565 -> GDX2D_FORMAT_RGB565
    int GDX2D_FORMAT_RGBA4444 -> GDX2D_FORMAT_RGBA4444
    int GDX2D_SCALE_NEAREST -> GDX2D_SCALE_NEAREST
    int GDX2D_SCALE_LINEAR -> GDX2D_SCALE_LINEAR
    int GDX2D_BLEND_NONE -> GDX2D_BLEND_NONE
    int GDX2D_BLEND_SRC_OVER -> GDX2D_BLEND_SRC_OVER
    long basePtr -> basePtr
    int width -> width
    int height -> height
    int format -> format
    java.nio.ByteBuffer pixelPtr -> pixelPtr
    long[] nativeData -> nativeData
    void dispose() -> dispose
    void clear(int) -> clear
    void setPixel(int,int,int) -> setPixel
    int getPixel(int,int) -> getPixel
    void drawLine(int,int,int,int,int) -> drawLine
    void drawRect(int,int,int,int,int) -> drawRect
    void drawCircle(int,int,int,int) -> drawCircle
    void fillRect(int,int,int,int,int) -> fillRect
    void fillCircle(int,int,int,int) -> fillCircle
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> newPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> newPixmap
    java.nio.ByteBuffer getPixels() -> getPixels
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getFormat() -> getFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    java.lang.String getFormatString() -> getFormatString
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> TOP_LEFT
    int TOP_CENTER -> TOP_CENTER
    int TOP_RIGHT -> TOP_RIGHT
    int MIDDLE_LEFT -> MIDDLE_LEFT
    int MIDDLE_CENTER -> MIDDLE_CENTER
    int MIDDLE_RIGHT -> MIDDLE_RIGHT
    int BOTTOM_LEFT -> BOTTOM_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.Texture texture -> texture
    int bottomLeft -> bottomLeft
    int bottomCenter -> bottomCenter
    int bottomRight -> bottomRight
    int middleLeft -> middleLeft
    int middleCenter -> middleCenter
    int middleRight -> middleRight
    int topLeft -> topLeft
    int topCenter -> topCenter
    int topRight -> topRight
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float middleWidth -> middleWidth
    float middleHeight -> middleHeight
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Color color -> color
    int padLeft -> padLeft
    int padRight -> padRight
    int padTop -> padTop
    int padBottom -> padBottom
    void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> load
    int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float) -> add
    void set(int,float,float,float,float,float) -> set
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMiddleWidth() -> getMiddleWidth
    void setMiddleWidth(float) -> setMiddleWidth
    float getMiddleHeight() -> getMiddleHeight
    void setMiddleHeight(float) -> setMiddleHeight
    float getTotalWidth() -> getTotalWidth
    float getTotalHeight() -> getTotalHeight
    void setPadding(int,int,int,int) -> setPadding
    float getPadLeft() -> getPadLeft
    void setPadLeft(int) -> setPadLeft
    float getPadRight() -> getPadRight
    void setPadRight(int) -> setPadRight
    float getPadTop() -> getPadTop
    void setPadTop(int) -> setPadTop
    float getPadBottom() -> getPadBottom
    void setPadBottom(int) -> setPadBottom
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> emitters
    void start() -> start
    void reset() -> reset
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void allowCompletion() -> allowCompletion
    boolean isComplete() -> isComplete
    void setDuration(int) -> setDuration
    void setPosition(float,float) -> setPosition
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.utils.Array getEmitters() -> getEmitters
    com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> findEmitter
    void save(java.io.File) -> save
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> load
    void loadEmitters(com.badlogic.gdx.files.FileHandle) -> loadEmitters
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> loadEmitterImages
    com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> loadTexture
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> effect
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> newObject
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> obtain
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> this$0
    void reset() -> reset
    void free() -> free
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> UPDATE_SCALE
    int UPDATE_ANGLE -> UPDATE_ANGLE
    int UPDATE_ROTATION -> UPDATE_ROTATION
    int UPDATE_VELOCITY -> UPDATE_VELOCITY
    int UPDATE_WIND -> UPDATE_WIND
    int UPDATE_GRAVITY -> UPDATE_GRAVITY
    int UPDATE_TINT -> UPDATE_TINT
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> emissionValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> scaleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> rotationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> velocityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> angleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> windValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> gravityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> transparencyValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> tintValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> spawnShapeValue
    float accumulator -> accumulator
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> particles
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float x -> x
    float y -> y
    java.lang.String name -> name
    java.lang.String imagePath -> imagePath
    int activeCount -> activeCount
    boolean[] active -> active
    boolean firstUpdate -> firstUpdate
    boolean flipX -> flipX
    boolean flipY -> flipY
    int updateFlags -> updateFlags
    boolean allowCompletion -> allowCompletion
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float duration -> duration
    float durationTimer -> durationTimer
    float delay -> delay
    float delayTimer -> delayTimer
    boolean attached -> attached
    boolean continuous -> continuous
    boolean aligned -> aligned
    boolean behind -> behind
    boolean additive -> additive
    void initialize() -> initialize
    void setMaxParticleCount(int) -> setMaxParticleCount
    void addParticle() -> addParticle
    void addParticles(int) -> addParticles
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void start() -> start
    void reset() -> reset
    void restart() -> restart
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
    void activateParticle(int) -> activateParticle
    boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> updateParticle
    void setPosition(float,float) -> setPosition
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    void allowCompletion() -> allowCompletion
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> getScale
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> getRotation
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> getTint
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> getVelocity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> getWind
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> getGravity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> getAngle
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> getTransparency
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> getLifeOffset
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> getXOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> getYOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> getSpawnShape
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    boolean isAligned() -> isAligned
    void setAligned(boolean) -> setAligned
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    boolean isBehind() -> isBehind
    void setBehind(boolean) -> setBehind
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    float getX() -> getX
    float getY() -> getY
    int getActiveCount() -> getActiveCount
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    java.lang.String readString(java.io.BufferedReader,java.lang.String) -> readString
    boolean readBoolean(java.io.BufferedReader,java.lang.String) -> readBoolean
    int readInt(java.io.BufferedReader,java.lang.String) -> readInt
    float readFloat(java.io.BufferedReader,java.lang.String) -> readFloat
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> life
    int currentLife -> currentLife
    float scale -> scale
    float scaleDiff -> scaleDiff
    float rotation -> rotation
    float rotationDiff -> rotationDiff
    float velocity -> velocity
    float velocityDiff -> velocityDiff
    float angle -> angle
    float angleDiff -> angleDiff
    float angleCos -> angleCos
    float angleSin -> angleSin
    float transparency -> transparency
    float transparencyDiff -> transparencyDiff
    float wind -> wind
    float windDiff -> windDiff
    float gravity -> gravity
    float gravityDiff -> gravityDiff
    float[] tint -> tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> active
    boolean alwaysActive -> alwaysActive
    void setAlwaysActive(boolean) -> setAlwaysActive
    boolean isAlwaysActive() -> isAlwaysActive
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> both
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> top
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> bottom
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> point
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> line
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> square
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> ellipse
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> shape
    boolean edges -> edges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> side
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> getShape
    void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> setShape
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> setSide
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D:
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.math.Vector2 startPoint -> startPoint
    com.badlogic.gdx.math.Vector2 endPoint -> endPoint
    boolean particleCollided -> particleCollided
    float normalAngle -> normalAngle
    float EPSILON -> EPSILON
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack -> rayCallBack
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> this$0
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> this$0
    void translate(float,float) -> translate
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> pageWidth
    int pageHeight -> pageHeight
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> pageFormat
    int padding -> padding
    boolean duplicateBorder -> duplicateBorder
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> currPage
    boolean disposed -> disposed
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> pack
    void newPage() -> newPage
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> insert
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> getRect
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> getPage
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> generateTextureAtlas
    void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> updateTextureAtlas
    int getPageWidth() -> getPageWidth
    int getPageHeight() -> getPageHeight
    int getPadding() -> getPadding
    boolean duplicateBoarder() -> duplicateBoarder
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData -> com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> leftChild
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> rightChild
    com.badlogic.gdx.math.Rectangle rect -> rect
    java.lang.String leaveName -> leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> root
    com.badlogic.gdx.utils.OrderedMap rects -> rects
    com.badlogic.gdx.graphics.Pixmap image -> image
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.utils.Array addedRects -> addedRects
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    com.badlogic.gdx.graphics.Pixmap getPixmap() -> getPixmap
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.PolygonRegion:
    float[] texCoords -> texCoords
    float[] localVertices -> localVertices
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    void loadPolygonDefinition(com.badlogic.gdx.files.FileHandle) -> loadPolygonDefinition
    float[] calculateAtlasTexCoords(float[]) -> calculateAtlasTexCoords
    float[] getLocalVertices() -> getLocalVertices
    float[] getTextureCoords() -> getTextureCoords
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> region
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    float originX -> originX
    float originY -> originY
    float[] vertices -> vertices
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    com.badlogic.gdx.graphics.Color color -> color
    void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> setRegion
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.Mesh[] buffers -> buffers
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    int idx -> idx
    int currBufferIdx -> currBufferIdx
    float[] vertices -> vertices
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean drawing -> drawing
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxVerticesInBatch -> maxVerticesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float[],int,int) -> draw
    void flush() -> flush
    void renderMesh() -> renderMesh
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SPRITE_SIZE -> SPRITE_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Color color -> color
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    void set(com.badlogic.gdx.graphics.g2d.Sprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void rotate90(boolean) -> rotate90
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(float,float,float,float) -> setRegion
    void setU(float) -> setU
    void setV(float) -> setV
    void setU2(float) -> setU2
    void setV2(float) -> setV2
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.Mesh[] buffers -> buffers
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    int idx -> idx
    int currBufferIdx -> currBufferIdx
    float[] vertices -> vertices
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean drawing -> drawing
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxSpritesInBatch -> maxSpritesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    int X1 -> X1
    int Y1 -> Y1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void renderMesh() -> renderMesh
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> tempVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    java.util.ArrayList caches -> caches
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> currentCache
    java.util.ArrayList textures -> textures
    java.util.ArrayList counts -> counts
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void beginCache() -> beginCache
    void beginCache(int) -> beginCache
    int endCache() -> endCache
    void clear() -> clear
    void add(com.badlogic.gdx.graphics.Texture,float[],int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.Sprite) -> add
    void begin() -> begin
    void end() -> end
    void draw(int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> id
    int offset -> offset
    int maxCount -> maxCount
    int textureCount -> textureCount
    com.badlogic.gdx.graphics.Texture[] textures -> textures
    int[] counts -> counts
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> tuple
    java.util.HashSet textures -> textures
    com.badlogic.gdx.utils.Array regions -> regions
    java.util.Comparator indexComparator -> indexComparator
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> load
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> addRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> addRegion
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> findRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> findRegion
    com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> findRegions
    com.badlogic.gdx.utils.Array createSprites() -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> createSprite
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> createSprite
    com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> newSprite
    com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> createPatch
    java.util.Set getTextures() -> getTextures
    void dispose() -> dispose
    java.lang.String readValue(java.io.BufferedReader) -> readValue
    int readTuple(java.io.BufferedReader) -> readTuple
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int packedWidth -> packedWidth
    int packedHeight -> packedHeight
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int[] splits -> splits
    int[] pads -> pads
    void flip(boolean,boolean) -> flip
    float getRotatedPackedWidth() -> getRotatedPackedWidth
    float getRotatedPackedHeight() -> getRotatedPackedHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> region
    float originalOffsetX -> originalOffsetX
    float originalOffsetY -> originalOffsetY
    void setPosition(float,float) -> setPosition
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setOrigin(float,float) -> setOrigin
    void flip(boolean,boolean) -> flip
    void rotate90(boolean) -> rotate90
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthRatio() -> getWidthRatio
    float getHeightRatio() -> getHeightRatio
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> getAtlasRegion
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> textureFile
    com.badlogic.gdx.graphics.Texture texture -> texture
    boolean useMipMaps -> useMipMaps
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> page
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int left -> left
    int top -> top
    int width -> width
    int height -> height
    boolean flip -> flip
    int[] splits -> splits
    int[] pads -> pads
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> texture
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int regionWidth -> regionWidth
    int regionHeight -> regionHeight
    void setRegion(com.badlogic.gdx.graphics.Texture) -> setRegion
    void setRegion(int,int,int,int) -> setRegion
    void setRegion(float,float,float,float) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> setRegion
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    float getU() -> getU
    void setU(float) -> setU
    float getV() -> getV
    void setV(float) -> setV
    float getU2() -> getU2
    void setU2(float) -> setU2
    float getV2() -> getV2
    void setV2(float) -> setV2
    int getRegionX() -> getRegionX
    void setRegionX(int) -> setRegionX
    int getRegionY() -> getRegionY
    void setRegionY(int) -> setRegionY
    int getRegionWidth() -> getRegionWidth
    void setRegionWidth(int) -> setRegionWidth
    int getRegionHeight() -> getRegionHeight
    void setRegionHeight(int) -> setRegionHeight
    void flip(boolean,boolean) -> flip
    boolean isFlipX() -> isFlipX
    boolean isFlipY() -> isFlipY
    void scroll(float,float) -> scroll
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> split
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> split
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int) -> split
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    com.badlogic.gdx.utils.IntMap regionsMap -> regionsMap
    java.util.HashSet textures -> textures
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> getRegion
    void dispose() -> dispose
    java.lang.String removeExtension(java.lang.String) -> removeExtension
    java.lang.String removePath(java.lang.String) -> removePath
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    void flipRegions(boolean,boolean) -> flipRegions
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer -> com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    com.badlogic.gdx.graphics.g2d.SpriteCache cache -> cache
    int[][][] normalCacheId -> normalCacheId
    int[][][] blendedCacheId -> blendedCacheId
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas atlas -> atlas
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap map -> map
    int mapHeightUnits -> mapHeightUnits
    int mapWidthUnits -> mapWidthUnits
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    float unitsPerTileX -> unitsPerTileX
    float unitsPerTileY -> unitsPerTileY
    int tilesPerBlockX -> tilesPerBlockX
    int tilesPerBlockY -> tilesPerBlockY
    float unitsPerBlockX -> unitsPerBlockX
    float unitsPerBlockY -> unitsPerBlockY
    int[] allLayers -> allLayers
    boolean isSimpleTileAtlas -> isSimpleTileAtlas
    com.badlogic.gdx.utils.IntArray blendedTiles -> blendedTiles
    int FLAG_FLIP_X -> FLAG_FLIP_X
    int FLAG_FLIP_Y -> FLAG_FLIP_Y
    int FLAG_ROTATE -> FLAG_ROTATE
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    float overdrawX -> overdrawX
    float overdrawY -> overdrawY
    int initialRow -> initialRow
    int initialCol -> initialCol
    int currentRow -> currentRow
    int currentCol -> currentCol
    int lastRow -> lastRow
    int lastCol -> lastCol
    int currentLayer -> currentLayer
    void init(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> init
    int addBlock(int[][],int,int,boolean) -> addBlock
    void render() -> render
    void render(float,float,float,float) -> render
    void render(com.badlogic.gdx.graphics.OrthographicCamera) -> render
    void render(com.badlogic.gdx.graphics.OrthographicCamera,int[]) -> render
    void render(float,float,float,float,int[]) -> render
    int getLayerWidthInBlocks(int,int) -> getLayerWidthInBlocks
    int getLayerHeightInBlocks(int) -> getLayerHeightInBlocks
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    int getRow(int) -> getRow
    int getCol(int) -> getCol
    int getInitialRow() -> getInitialRow
    int getInitialCol() -> getInitialCol
    int getLastRow() -> getLastRow
    int getLastCol() -> getLastCol
    float getUnitsPerTileX() -> getUnitsPerTileX
    float getUnitsPerTileY() -> getUnitsPerTileY
    int getMapHeightUnits() -> getMapHeightUnits
    int getMapWidthUnits() -> getMapWidthUnits
    int parseIntWithDefault(java.lang.String,int) -> parseIntWithDefault
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap() -> getMap
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas() -> getAtlas
    com.badlogic.gdx.utils.IntArray createFromCSV(java.lang.String) -> createFromCSV
com.badlogic.gdx.graphics.g2d.tiled.TileSet -> com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    int firstgid -> firstgid
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    int margin -> margin
    int spacing -> spacing
    java.lang.String imageName -> imageName
    java.lang.String name -> name
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer -> com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    java.lang.String name -> name
    java.util.HashMap properties -> properties
    int[][] tiles -> tiles
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String) -> createMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle) -> createMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle,java.lang.String) -> createMap
    int unsignedByteToInt(byte) -> unsignedByteToInt
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1:
    java.util.Stack currBranch -> currBranch
    boolean awaitingData -> awaitingData
    com.badlogic.gdx.graphics.g2d.tiled.TiledLayer currLayer -> currLayer
    int currLayerWidth -> currLayerWidth
    int currLayerHeight -> currLayerHeight
    com.badlogic.gdx.graphics.g2d.tiled.TileSet currTileSet -> currTileSet
    com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup currObjectGroup -> currObjectGroup
    com.badlogic.gdx.graphics.g2d.tiled.TiledObject currObject -> currObject
    int currTile -> currTile
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polyline -> polyline
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polygon -> polygon
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property currProperty -> currProperty
    java.lang.String encoding -> encoding
    java.lang.String dataString -> dataString
    java.lang.String compression -> compression
    byte[] data -> data
    int dataCounter -> dataCounter
    int row -> row
    int col -> col
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap val$map -> val$map
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    void text(java.lang.String) -> text
    void close() -> close
    void putPolyLine(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline) -> putPolyLine
    void putProperty(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property) -> putProperty
    void fromCSV() -> fromCSV
    void arrangeData() -> arrangeData
    void unZlib() -> unZlib
    void unGZip() -> unGZip
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    java.lang.String name -> name
    java.lang.String points -> points
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$0 -> this$0
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property:
    java.lang.String parentType -> parentType
    java.lang.String name -> name
    java.lang.String value -> value
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$0 -> this$0
com.badlogic.gdx.graphics.g2d.tiled.TiledMap -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    java.util.ArrayList layers -> layers
    java.util.ArrayList objectGroups -> objectGroups
    java.util.ArrayList tileSets -> tileSets
    java.util.HashMap properties -> properties
    java.util.ArrayList tileProperties -> tileProperties
    com.badlogic.gdx.files.FileHandle tmxFile -> tmxFile
    java.lang.String orientation -> orientation
    int width -> width
    int height -> height
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    void setTileProperty(int,java.lang.String,java.lang.String) -> setTileProperty
    java.lang.String getTileProperty(int,java.lang.String) -> getTileProperty
com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty:
    int id -> id
    java.util.HashMap propertyMap -> propertyMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap this$0 -> this$0
com.badlogic.gdx.graphics.g2d.tiled.TiledObject -> com.badlogic.gdx.graphics.g2d.tiled.TiledObject:
    java.lang.String name -> name
    java.lang.String type -> type
    int x -> x
    int y -> y
    int width -> width
    int height -> height
    int gid -> gid
    java.util.HashMap properties -> properties
    java.lang.String polyline -> polyline
    java.lang.String polygon -> polygon
com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup -> com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup:
    int width -> width
    int height -> height
    java.lang.String name -> name
    java.util.HashMap properties -> properties
    java.util.ArrayList objects -> objects
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance -> com.badlogic.gdx.graphics.g3d.AnimatedModelInstance:
    java.lang.String getAnimation() -> getAnimation
    float getAnimationTime() -> getAnimationTime
    boolean isLooping() -> isLooping
com.badlogic.gdx.graphics.g3d.AnimatedModelNode -> com.badlogic.gdx.graphics.g3d.AnimatedModelNode:
    java.lang.String animation -> animation
    float time -> time
    boolean looping -> looping
    java.lang.String getAnimation() -> getAnimation
    float getAnimationTime() -> getAnimationTime
    boolean isLooping() -> isLooping
    com.badlogic.gdx.graphics.g3d.AnimatedModelNode copy() -> copy
    com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> copy
com.badlogic.gdx.graphics.g3d.ModelLoaderHints -> com.badlogic.gdx.graphics.g3d.ModelLoaderHints:
    boolean flipV -> flipV
com.badlogic.gdx.graphics.g3d.ModelRenderer -> com.badlogic.gdx.graphics.g3d.ModelRenderer:
    void begin() -> begin
    void draw(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.graphics.g3d.StillModelInstance) -> draw
    void draw(com.badlogic.gdx.graphics.g3d.model.AnimatedModel,com.badlogic.gdx.graphics.g3d.AnimatedModelInstance) -> draw
    void end() -> end
com.badlogic.gdx.graphics.g3d.StillModelInstance -> com.badlogic.gdx.graphics.g3d.StillModelInstance:
    com.badlogic.gdx.math.Matrix4 getTransform() -> getTransform
    com.badlogic.gdx.math.Vector3 getSortCenter() -> getSortCenter
    float getBoundingSphereRadius() -> getBoundingSphereRadius
    com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> getMaterials
com.badlogic.gdx.graphics.g3d.StillModelNode -> com.badlogic.gdx.graphics.g3d.StillModelNode:
    float[] vec3 -> vec3
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 transformedPosition -> transformedPosition
    com.badlogic.gdx.math.Matrix4 matrix -> matrix
    com.badlogic.gdx.graphics.g3d.materials.Material[] materials -> materials
    float radius -> radius
    com.badlogic.gdx.math.Matrix4 getTransform() -> getTransform
    com.badlogic.gdx.math.Vector3 getSortCenter() -> getSortCenter
    com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> getMaterials
    float getBoundingSphereRadius() -> getBoundingSphereRadius
    com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> copy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool -> arrayPool
    com.badlogic.gdx.utils.Array usedArrays -> usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups -> materialGroups
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    java.util.Comparator cameraSorter -> cameraSorter
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    void createDefaultShader() -> createDefaultShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.Camera val$camera -> val$camera
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SIZE -> SIZE
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    int value -> value
    float[] vertices -> vertices
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector2 scale -> scale
    com.badlogic.gdx.math.Vector2 transformationOffset -> transformationOffset
    com.badlogic.gdx.math.Vector2 dimensions -> dimensions
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> material
    boolean updated -> updated
    com.badlogic.gdx.math.Vector3 dir -> dir
    int X1 -> X1
    int Y1 -> Y1
    int Z1 -> Z1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int Z2 -> Z2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int Z3 -> Z3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int Z4 -> Z4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.math.Quaternion rotator -> rotator
    com.badlogic.gdx.math.Vector3 X_AXIS -> X_AXIS
    com.badlogic.gdx.math.Vector3 Y_AXIS -> Y_AXIS
    com.badlogic.gdx.math.Vector3 Z_AXIS -> Z_AXIS
    void setColor(float,float,float,float) -> setColor
    void setRotationX(float) -> setRotationX
    void setRotationY(float) -> setRotationY
    void setRotationZ(float) -> setRotationZ
    void rotateX(float) -> rotateX
    void rotateY(float) -> rotateY
    void rotateZ(float) -> rotateZ
    void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setRotation
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void translateX(float) -> translateX
    void setX(float) -> setX
    float getX() -> getX
    void translateY(float) -> translateY
    void setY(float) -> setY
    float getY() -> getY
    void translateZ(float) -> translateZ
    void setZ(float) -> setZ
    float getZ() -> getZ
    void translate(float,float,float) -> translate
    void setPosition(float,float,float) -> setPosition
    com.badlogic.gdx.math.Vector3 getPosition() -> getPosition
    void setScaleX(float) -> setScaleX
    float getScaleX() -> getScaleX
    void setScaleY(float) -> setScaleY
    float getScaleY() -> getScaleY
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setHeight(float) -> setHeight
    float getHeight() -> getHeight
    void setDimensions(float,float) -> setDimensions
    float[] getVertices() -> getVertices
    void update() -> update
    void transformVertices() -> transformVertices
    void resetVertices() -> resetVertices
    void updateUVs() -> updateUVs
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setBlending(int,int) -> setBlending
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> getMaterial
    void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> lookAt
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> newDecal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.utils.SortedIntList groupList -> groupList
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> groupStrategy
    com.badlogic.gdx.utils.Pool groupPool -> groupPool
    com.badlogic.gdx.utils.Array usedGroups -> usedGroups
    void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> setGroupStrategy
    void initialize(int) -> initialize
    int getSize() -> getSize
    void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> add
    void flush() -> flush
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> render
    void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> flush
    void clear() -> clear
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> NO_BLEND
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    int srcBlendFactor -> srcBlendFactor
    int dstBlendFactor -> dstBlendFactor
    void set() -> set
    boolean isOpaque() -> isOpaque
    int getSrcBlendFactor() -> getSrcBlendFactor
    int getDstBlendFactor() -> getDstBlendFactor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup(com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup() -> afterGroup
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> plugs
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> plugIn
    com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> unPlug
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> comparator
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.ModelLoader:
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry -> com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry:
    java.util.Map loaders -> loaders
    java.util.Map defaultHints -> defaultHints
    void registerLoader(java.lang.String,com.badlogic.gdx.graphics.g3d.loaders.ModelLoader,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> registerLoader
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> loadStillModel
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> loadStillModel
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> loadKeyframedModel
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> loadKeyframedModel
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> loadSkeletonModel
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> loadSkeletonModel
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants:
    byte MAJOR_VERSION -> MAJOR_VERSION
    byte MINOR_VERSION -> MINOR_VERSION
    int G3D_ROOT -> G3D_ROOT
    int VERSION_INFO -> VERSION_INFO
    int STILL_MODEL -> STILL_MODEL
    int STILL_SUBMESH -> STILL_SUBMESH
    int KEYFRAMED_MODEL -> KEYFRAMED_MODEL
    int KEYFRAMED_SUBMESH -> KEYFRAMED_SUBMESH
    int KEYFRAMED_ANIMATION -> KEYFRAMED_ANIMATION
    int KEYFRAMED_FRAME -> KEYFRAMED_FRAME
    int SKELETON_MODEL -> SKELETON_MODEL
    int SKELETON_SUBMESH -> SKELETON_SUBMESH
    int SKELETON_ANIMATIONS -> SKELETON_ANIMATIONS
    int SKELETON_ANIMATION -> SKELETON_ANIMATION
    int SKELETON -> SKELETON
    int SKELETON_HIERARCHY -> SKELETON_HIERARCHY
    int SKELETON_JOINT -> SKELETON_JOINT
    int SKELETON_KEYFRAME -> SKELETON_KEYFRAME
    int VERTEX_LIST -> VERTEX_LIST
    int INDEX_LIST -> INDEX_LIST
    int VERTEX_ATTRIBUTES -> VERTEX_ATTRIBUTES
    int VERTEX_ATTRIBUTE -> VERTEX_ATTRIBUTE
    int BONE_WEIGHTS -> BONE_WEIGHTS
    int BONE_WEIGHT -> BONE_WEIGHT
    int BONE_ASSIGNMENTS -> BONE_ASSIGNMENTS
    int BONE_ASSIGNMENT -> BONE_ASSIGNMENT
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> loadStillModel
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> loadKeyframedModel
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> loadSkeletonModel
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint readSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> readSkeletonJoint
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader:
    int lineNum -> lineNum
    java.lang.String line -> line
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,boolean) -> loadKeyframedModel
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,boolean) -> loadStillModel
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(java.io.InputStream,boolean) -> loadStillModel
    com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh readStillSubMesh(java.io.BufferedReader,boolean) -> readStillSubMesh
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(java.io.InputStream,boolean) -> loadKeyframedModel
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh readMesh(java.io.BufferedReader,boolean) -> readMesh
    float[] buildVertices(int,boolean,com.badlogic.gdx.utils.Array) -> buildVertices
    com.badlogic.gdx.graphics.VertexAttribute[] createVertexAttributes(boolean,int) -> createVertexAttributes
    com.badlogic.gdx.utils.FloatArray readUVSet(java.io.BufferedReader,int,boolean) -> readUVSet
    com.badlogic.gdx.utils.IntArray readFaces(java.io.BufferedReader) -> readFaces
    short[] convertToShortArray(com.badlogic.gdx.utils.IntArray) -> convertToShortArray
    float readFloat(java.io.BufferedReader) -> readFloat
    int readInt(java.io.BufferedReader) -> readInt
    java.lang.String readString(java.io.BufferedReader) -> readString
    void readFloatArray(java.io.BufferedReader,com.badlogic.gdx.utils.FloatArray) -> readFloatArray
    int readFloatArray(java.io.BufferedReader,float[],int) -> readFloatArray
    void readIntArray(java.io.BufferedReader,com.badlogic.gdx.utils.IntArray) -> readIntArray
    java.lang.String read(java.io.BufferedReader) -> read
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader:
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk readChunks(java.io.InputStream) -> readChunks
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunks(java.io.InputStream,int) -> loadChunks
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunk(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream,byte[]) -> loadChunk
    byte[] readStream(java.io.InputStream,int) -> readStream
    void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> printChunks
    void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk,int) -> printChunks
    java.lang.String rep(java.lang.String,int) -> rep
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk:
    int id -> id
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    java.io.ByteArrayInputStream payload -> payload
    byte[] payloadBytes -> payloadBytes
    int offset -> offset
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream in -> in
    int getId() -> getId
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getParent() -> getParent
    com.badlogic.gdx.utils.Array getChildren() -> getChildren
    int readByte() -> readByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    byte[] readBytes() -> readBytes
    short[] readShorts() -> readShorts
    int[] readInts() -> readInts
    long[] readLongs() -> readLongs
    float[] readFloats() -> readFloats
    double[] readDoubles() -> readDoubles
    java.lang.String readString() -> readString
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getChild(int) -> getChild
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk[] getChildren(int) -> getChildren
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter:
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk root -> root
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk currChunk -> currChunk
    void newChunk(int) -> newChunk
    void endChunk() -> endChunk
    void writeByte(int) -> writeByte
    void writeShort(short) -> writeShort
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeFloat(float) -> writeFloat
    void writeDouble(double) -> writeDouble
    void writeString(java.lang.String) -> writeString
    void writeToStream(java.io.OutputStream) -> writeToStream
    void writeToStream(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk,java.io.DataOutputStream) -> writeToStream
    void writeBytes(byte[]) -> writeBytes
    void writeShorts(short[]) -> writeShorts
    void writeInts(int[]) -> writeInts
    void writeLongs(long[]) -> writeLongs
    void writeFloats(float[]) -> writeFloats
    void writeDoubles(double[]) -> writeDoubles
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk:
    int id -> id
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    java.io.ByteArrayOutputStream payload -> payload
    java.io.DataOutputStream out -> out
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter this$0 -> this$0
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream:
    int readBytes -> readBytes
    java.io.DataInputStream in -> in
    int getReadBytes() -> getReadBytes
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter:
    void export(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.files.FileHandle) -> export
    void export(com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel,com.badlogic.gdx.files.FileHandle) -> export
    void export(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel,com.badlogic.gdx.files.FileHandle) -> export
    void writeSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> writeSkeletonJoint
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame:
    float[] vertices -> vertices
    int[] normalIndices -> normalIndices
    java.lang.String name -> name
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header:
    int ident -> ident
    int version -> version
    int skinWidth -> skinWidth
    int skinHeight -> skinHeight
    int frameSize -> frameSize
    int numSkins -> numSkins
    int numVertices -> numVertices
    int numTexCoords -> numTexCoords
    int numTriangles -> numTriangles
    int numGLCommands -> numGLCommands
    int numFrames -> numFrames
    int offsetSkin -> offsetSkin
    int offsetTexCoords -> offsetTexCoords
    int offsetTriangles -> offsetTriangles
    int offsetFrames -> offsetFrames
    int offsetGLCommands -> offsetGLCommands
    int offsetEnd -> offsetEnd
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader:
    byte[] charBuffer -> charBuffer
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,float) -> load
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(java.io.InputStream,float) -> load
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel buildModel(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[],com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[],float) -> buildModel
    float[] buildTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[]) -> buildTexCoords
    short[] buildIndices(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[]) -> buildIndices
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[] loadFrames(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> loadFrames
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame loadFrame(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.utils.LittleEndianInputStream) -> loadFrame
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[] loadTriangles(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> loadTriangles
    float[] loadTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> loadTexCoords
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header loadHeader(byte[]) -> loadHeader
    byte[] loadBytes(java.io.InputStream) -> loadBytes
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints:
    float frameDuration -> frameDuration
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices:
    short vIdx -> vIdx
    short tIdx -> tIdx
    short nIdx -> nIdx
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals:
    float[][] normals -> normals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle:
    short[] vertices -> vertices
    short[] texCoords -> texCoords
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader:
    java.util.ArrayList materials -> materials
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.Texture emptyTexture -> emptyTexture
    void load(java.lang.String,com.badlogic.gdx.files.FileHandle) -> load
    com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String) -> getMaterial
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader:
    com.badlogic.gdx.utils.FloatArray verts -> verts
    com.badlogic.gdx.utils.FloatArray norms -> norms
    com.badlogic.gdx.utils.FloatArray uvs -> uvs
    java.util.ArrayList groups -> groups
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle) -> loadObj
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> loadObj
    com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean) -> loadObj
    com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group setActiveGroup(java.lang.String) -> setActiveGroup
    int getIndex(java.lang.String,int) -> getIndex
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> load
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group:
    java.lang.String name -> name
    java.lang.String materialName -> materialName
    java.util.ArrayList faces -> faces
    int numFaces -> numFaces
    boolean hasNorms -> hasNorms
    boolean hasUVs -> hasUVs
    com.badlogic.gdx.graphics.g3d.materials.Material mat -> mat
    com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader this$0 -> this$0
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute -> com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute:
    java.lang.String translucent -> translucent
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.utils.Pool pool -> pool
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> copy
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> set
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> pooledCopy
    void free() -> free
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1:
    com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute -> com.badlogic.gdx.graphics.g3d.materials.ColorAttribute:
    java.lang.String diffuse -> diffuse
    java.lang.String specular -> specular
    java.lang.String emissive -> emissive
    java.lang.String rim -> rim
    java.lang.String fog -> fog
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.utils.Pool pool -> pool
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> copy
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> set
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> pooledCopy
    void free() -> free
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1:
    com.badlogic.gdx.graphics.g3d.materials.ColorAttribute newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.Material -> com.badlogic.gdx.graphics.g3d.materials.Material:
    java.lang.String name -> name
    com.badlogic.gdx.utils.Array attributes -> attributes
    boolean needBlending -> needBlending
    boolean hasTexture -> hasTexture
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    void checkAttributes() -> checkAttributes
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    java.lang.String getName() -> getName
    void addAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> addAttribute
    void removeAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> removeAttribute
    void clearAttributes() -> clearAttributes
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute getAttribute(int) -> getAttribute
    int getNumberOfAttributes() -> getNumberOfAttributes
    com.badlogic.gdx.graphics.g3d.materials.Material copy() -> copy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean shaderEquals(com.badlogic.gdx.graphics.g3d.materials.Material) -> shaderEquals
    void setPooled(com.badlogic.gdx.graphics.g3d.materials.Material) -> setPooled
    boolean isNeedBlending() -> isNeedBlending
    boolean hasTexture() -> hasTexture
    com.badlogic.gdx.graphics.glutils.ShaderProgram getShader() -> getShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void resetShader() -> resetShader
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute -> com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute:
    java.lang.String FLAG -> FLAG
    java.lang.String name -> name
    boolean isPooled -> isPooled
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> copy
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> pooledCopy
    void free() -> free
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> set
    java.lang.String getShaderFlag() -> getShaderFlag
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute -> com.badlogic.gdx.graphics.g3d.materials.TextureAttribute:
    int MAX_TEXTURE_UNITS -> MAX_TEXTURE_UNITS
    java.lang.String diffuseTexture -> diffuseTexture
    java.lang.String lightmapTexture -> lightmapTexture
    java.lang.String specularTexture -> specularTexture
    com.badlogic.gdx.graphics.Texture texture -> texture
    int unit -> unit
    int minFilter -> minFilter
    int magFilter -> magFilter
    int uWrap -> uWrap
    int vWrap -> vWrap
    com.badlogic.gdx.utils.Pool pool -> pool
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> copy
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> set
    boolean texturePortionEquals(com.badlogic.gdx.graphics.g3d.materials.TextureAttribute) -> texturePortionEquals
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> pooledCopy
    void free() -> free
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1:
    com.badlogic.gdx.graphics.g3d.materials.TextureAttribute newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.model.AnimatedModel -> com.badlogic.gdx.graphics.g3d.model.AnimatedModel:
    void setAnimation(java.lang.String,float,boolean) -> setAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> getAnimations
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.g3d.model.Animation:
    java.lang.String name -> name
    float totalDuration -> totalDuration
com.badlogic.gdx.graphics.g3d.model.Model -> com.badlogic.gdx.graphics.g3d.model.Model:
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> render
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> getSubModel
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> getSubMesh
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> getSubMeshes
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> setMaterials
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> setMaterial
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.model.SubMesh -> com.badlogic.gdx.graphics.g3d.model.SubMesh:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.g3d.materials.Material material -> material
    int primitiveType -> primitiveType
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    com.badlogic.gdx.graphics.Mesh getMesh() -> getMesh
    void setMesh(com.badlogic.gdx.graphics.Mesh) -> setMesh
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe -> com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe:
    float timeStamp -> timeStamp
    float[] vertices -> vertices
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation:
    float frameDuration -> frameDuration
    com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe[] keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh[] subMeshes -> subMeshes
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] animations -> animations
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> tmpBox
    void checkValidity() -> checkValidity
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> render
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> setMaterials
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> setMaterial
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh getSubMesh(java.lang.String) -> getSubMesh
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> getSubMeshes
    void setAnimation(java.lang.String,float,boolean) -> setAnimation
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] getAnimations() -> getAnimations
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> getSubModel
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> getAnimations
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> getSubMesh
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh:
    float[] blendedVertices -> blendedVertices
    int animatedComponents -> animatedComponents
    com.badlogic.gdx.utils.ObjectMap animations -> animations
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton -> com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton:
    com.badlogic.gdx.utils.Array hierarchy -> hierarchy
    com.badlogic.gdx.utils.Array jointNames -> jointNames
    java.util.Map namesToIndices -> namesToIndices
    com.badlogic.gdx.utils.Array bindPoseJoints -> bindPoseJoints
    com.badlogic.gdx.utils.Array animPoseJoints -> animPoseJoints
    com.badlogic.gdx.utils.Array offsetMatrices -> offsetMatrices
    com.badlogic.gdx.utils.Array sceneMatrices -> sceneMatrices
    com.badlogic.gdx.utils.Array combinedMatrices -> combinedMatrices
    com.badlogic.gdx.utils.ObjectMap animations -> animations
    com.badlogic.gdx.math.Matrix4 IDENTITY -> IDENTITY
    com.badlogic.gdx.math.Matrix4 rotMatrix -> rotMatrix
    void buildFromHierarchy() -> buildFromHierarchy
    void recursiveFill(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> recursiveFill
    void calculateOffsetMatrices() -> calculateOffsetMatrices
    void calculateMatrices(com.badlogic.gdx.utils.Array) -> calculateMatrices
    void setAnimation(java.lang.String,float) -> setAnimation
    void setBindPose() -> setBindPose
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe[][] perJointkeyFrames -> perJointkeyFrames
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint:
    java.lang.String name -> name
    int index -> index
    int parentIndex -> parentIndex
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe:
    float timeStamp -> timeStamp
    int parentIndex -> parentIndex
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel:
    com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton skeleton -> skeleton
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh[] subMeshes -> subMeshes
    com.badlogic.gdx.math.Vector3 v -> v
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] animations -> animations
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> tmpBox
    void setBindPose() -> setBindPose
    void setAnimation(java.lang.String,float,boolean) -> setAnimation
    void skin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh,com.badlogic.gdx.utils.Array) -> skin
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> render
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> setMaterials
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> setMaterial
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> getSubMesh
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> getSubMeshes
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] getAnimations() -> getAnimations
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> getSubModel
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> getAnimations
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned:
    java.lang.String BoneIndexAttribue -> BoneIndexAttribue
    java.lang.String BoneWeightAttribue -> BoneWeightAttribue
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel CreateFromSkeletonModel(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel) -> CreateFromSkeletonModel
    void setupGpuSkin() -> setupGpuSkin
    void setupGpuSkin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh) -> setupGpuSkin
    void setAnimation(java.lang.String,float,boolean) -> setAnimation
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh:
    short[] indices -> indices
    float[] vertices -> vertices
    float[] skinnedVertices -> skinnedVertices
    int[][] boneAssignments -> boneAssignments
    float[][] boneWeights -> boneWeights
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    void setVertices(float[]) -> setVertices
    void setIndices(short[]) -> setIndices
com.badlogic.gdx.graphics.g3d.model.still.StillModel -> com.badlogic.gdx.graphics.g3d.model.still.StillModel:
    com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh[] subMeshes -> subMeshes
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> tmpBox
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> render
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> getSubModel
    com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh getSubMesh(java.lang.String) -> getSubMesh
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> getSubMeshes
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> setMaterials
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> setMaterial
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> getSubMesh
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh -> com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh:
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> getBoundingBox
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> PKM_HEADER_SIZE
    int ETC1_RGB8_OES -> ETC1_RGB8_OES
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixelSize
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> encodeImage
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> encodeImagePKM
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> decodeImage
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> width
    int height -> height
    java.nio.ByteBuffer compressedData -> compressedData
    int dataOffset -> dataOffset
    boolean hasPKMHeader() -> hasPKMHeader
    void write(com.badlogic.gdx.files.FileHandle) -> write
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> data
    boolean useMipMaps -> useMipMaps
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCompressedData() -> consumeCompressedData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> copyToPOT
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    boolean useMipMaps -> useMipMaps
    boolean isPrepared -> isPrepared
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> ensurePot
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.files.FileHandle getFileHandle() -> getFileHandle
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCompressedData() -> consumeCompressedData
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    void setupTexture() -> setupTexture
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.FloatTextureData:
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    java.nio.FloatBuffer buffer -> buffer
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCompressedData() -> consumeCompressedData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> buffers
    com.badlogic.gdx.graphics.Texture colorTexture -> colorTexture
    int defaultFramebufferHandle -> defaultFramebufferHandle
    boolean defaultFramebufferHandleInitialized -> defaultFramebufferHandleInitialized
    int framebufferHandle -> framebufferHandle
    int depthbufferHandle -> depthbufferHandle
    int width -> width
    int height -> height
    boolean hasDepth -> hasDepth
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    void setupTexture() -> setupTexture
    void build() -> build
    void dispose() -> dispose
    void begin() -> begin
    void end() -> end
    void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> addManagedFrameBuffer
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> invalidateAllFrameBuffers
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> clearAllFrameBuffers
    java.lang.String getManagedStatus() -> getManagedStatus
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> getColorBufferTexture
    int getHeight() -> getHeight
    int getWidth() -> getWidth
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    int primitiveType -> primitiveType
    float[] positions -> positions
    java.nio.FloatBuffer positionsBuffer -> positionsBuffer
    float[] colors -> colors
    java.nio.FloatBuffer colorsBuffer -> colorsBuffer
    float[] normals -> normals
    java.nio.FloatBuffer normalsBuffer -> normalsBuffer
    float[] texCoords -> texCoords
    java.nio.FloatBuffer texCoordsBuffer -> texCoordsBuffer
    int idxPos -> idxPos
    int idxCols -> idxCols
    int idxNors -> idxNors
    int idxTexCoords -> idxTexCoords
    boolean hasCols -> hasCols
    boolean hasNors -> hasNors
    boolean hasTexCoords -> hasTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void begin(int) -> begin
    void color(float,float,float,float) -> color
    void normal(float,float,float) -> normal
    void texCoord(float,float) -> texCoord
    void vertex(float,float,float) -> vertex
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void end() -> end
    void vertex(com.badlogic.gdx.math.Vector3) -> vertex
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> primitiveType
    int vertexIdx -> vertexIdx
    int numSetTexCoords -> numSetTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    int numTexCoords -> numTexCoords
    int vertexSize -> vertexSize
    int normalOffset -> normalOffset
    int colorOffset -> colorOffset
    int texCoordOffset -> texCoordOffset
    com.badlogic.gdx.math.Matrix4 projModelView -> projModelView
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> buildVertexAttributes
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
    java.lang.String createVertexShader(boolean,boolean,int) -> createVertexShader
    java.lang.String createFragmentShader(boolean,boolean,int) -> createFragmentShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> createDefaultShader
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> useHWMipMap
    void setUseHardwareMipMap(boolean) -> setUseHardwareMipMap
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMap
    void generateMipMapGLES20(com.badlogic.gdx.graphics.Pixmap,boolean) -> generateMipMapGLES20
    void generateMipMapDesktop(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMapDesktop
    void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMapCPU
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean useMipMaps -> useMipMaps
    boolean disposePixmap -> disposePixmap
    boolean disposePixmap() -> disposePixmap
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCompressedData() -> consumeCompressedData
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> POSITION_ATTRIBUTE
    java.lang.String NORMAL_ATTRIBUTE -> NORMAL_ATTRIBUTE
    java.lang.String COLOR_ATTRIBUTE -> COLOR_ATTRIBUTE
    java.lang.String TEXCOORD_ATTRIBUTE -> TEXCOORD_ATTRIBUTE
    java.lang.String TANGENT_ATTRIBUTE -> TANGENT_ATTRIBUTE
    java.lang.String BINORMAL_ATTRIBUTE -> BINORMAL_ATTRIBUTE
    boolean pedantic -> pedantic
    com.badlogic.gdx.utils.ObjectMap shaders -> shaders
    java.lang.String log -> log
    boolean isCompiled -> isCompiled
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> uniforms
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> uniformTypes
    java.lang.String[] uniformNames -> uniformNames
    com.badlogic.gdx.utils.ObjectIntMap attributes -> attributes
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> attributeTypes
    java.lang.String[] attributeNames -> attributeNames
    int program -> program
    int vertexShaderHandle -> vertexShaderHandle
    int fragmentShaderHandle -> fragmentShaderHandle
    java.nio.FloatBuffer matrix -> matrix
    java.lang.String vertexShaderSource -> vertexShaderSource
    java.lang.String fragmentShaderSource -> fragmentShaderSource
    boolean invalidated -> invalidated
    java.nio.ByteBuffer buffer -> buffer
    java.nio.FloatBuffer floatBuffer -> floatBuffer
    java.nio.IntBuffer intBuffer -> intBuffer
    int refCount -> refCount
    java.nio.IntBuffer intbuf -> intbuf
    java.nio.IntBuffer params -> params
    java.nio.IntBuffer type -> type
    void compileShaders(java.lang.String,java.lang.String) -> compileShaders
    int loadShader(int,java.lang.String) -> loadShader
    int linkProgram() -> linkProgram
    java.lang.String getLog() -> getLog
    boolean isCompiled() -> isCompiled
    int fetchAttributeLocation(java.lang.String) -> fetchAttributeLocation
    int fetchUniformLocation(java.lang.String) -> fetchUniformLocation
    void setUniformi(java.lang.String,int) -> setUniformi
    void setUniformi(int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int) -> setUniformi
    void setUniformi(int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int,int) -> setUniformi
    void setUniformf(java.lang.String,float) -> setUniformf
    void setUniformf(int,float) -> setUniformf
    void setUniformf(java.lang.String,float,float) -> setUniformf
    void setUniformf(int,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float,float) -> setUniformf
    void setUniform1fv(java.lang.String,float[],int,int) -> setUniform1fv
    void setUniform1fv(int,float[],int,int) -> setUniform1fv
    void setUniform2fv(java.lang.String,float[],int,int) -> setUniform2fv
    void setUniform2fv(int,float[],int,int) -> setUniform2fv
    void setUniform3fv(java.lang.String,float[],int,int) -> setUniform3fv
    void setUniform3fv(int,float[],int,int) -> setUniform3fv
    void setUniform4fv(java.lang.String,float[],int,int) -> setUniform4fv
    void setUniform4fv(int,float[],int,int) -> setUniform4fv
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix4fv
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,int) -> setVertexAttribute
    void begin() -> begin
    void end() -> end
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> disableVertexAttribute
    void disableVertexAttribute(int) -> disableVertexAttribute
    void enableVertexAttribute(java.lang.String) -> enableVertexAttribute
    void enableVertexAttribute(int) -> enableVertexAttribute
    void checkManaged() -> checkManaged
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> addManagedShader
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> invalidateAllShaderPrograms
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> clearAllShaderPrograms
    java.lang.String getManagedStatus() -> getManagedStatus
    void setAttributef(java.lang.String,float,float,float,float) -> setAttributef
    void ensureBufferCapacity(int) -> ensureBufferCapacity
    void fetchUniforms() -> fetchUniforms
    void fetchAttributes() -> fetchAttributes
    boolean hasAttribute(java.lang.String) -> hasAttribute
    int getAttributeType(java.lang.String) -> getAttributeType
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    boolean hasUniform(java.lang.String) -> hasUniform
    int getUniformType(java.lang.String) -> getUniformType
    int getUniformLocation(java.lang.String) -> getUniformLocation
    java.lang.String[] getAttributes() -> getAttributes
    java.lang.String[] getUniforms() -> getUniforms
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> renderer
    boolean matrixDirty -> matrixDirty
    com.badlogic.gdx.math.Matrix4 projView -> projView
    com.badlogic.gdx.math.Matrix4 transform -> transform
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 tmp -> tmp
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> currType
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void identity() -> identity
    void translate(float,float,float) -> translate
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> begin
    void point(float,float,float) -> point
    void line(float,float,float,float,float,float) -> line
    void line(float,float,float,float) -> line
    void curve(float,float,float,float,float,float,float,float) -> curve
    void curve(float,float,float,float,float,float,float,float,int) -> curve
    void rect(float,float,float,float) -> rect
    void filledRect(float,float,float,float) -> filledRect
    void filledRect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> filledRect
    void box(float,float,float,float,float,float) -> box
    void circle(float,float,float) -> circle
    void circle(float,float,float,int) -> circle
    void filledCircle(float,float,float) -> filledCircle
    void filledCircle(float,float,float,int) -> filledCircle
    void triangle(float,float,float,float,float,float) -> triangle
    void filledTriangle(float,float,float,float,float,float) -> filledTriangle
    void cone(float,float,float,float,float) -> cone
    void cone(float,float,float,float,float,int) -> cone
    void filledCone(float,float,float,float,float) -> filledCone
    void filledCone(float,float,float,float,float,int) -> filledCone
    void checkDirty() -> checkDirty
    void checkFlush(int) -> checkFlush
    void end() -> end
    void flush() -> flush
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> getCurrentType
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> Point
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> Line
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Rectangle -> Rectangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledRectangle -> FilledRectangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Box -> Box
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Circle -> Circle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledCircle -> FilledCircle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Triangle -> Triangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledTriangle -> FilledTriangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Cone -> Cone
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledCone -> FilledCone
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Curve -> Curve
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    int getGlType() -> getGlType
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    boolean isBound -> isBound
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> getBuffer
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind() -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind() -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
    int getBufferHandle() -> getBufferHandle
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setVertices(float[],int,int) -> setVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> listener
    float tapSquareSize -> tapSquareSize
    long tapCountInterval -> tapCountInterval
    float longPressSeconds -> longPressSeconds
    long maxFlingDelay -> maxFlingDelay
    boolean inTapSquare -> inTapSquare
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    float lastTapX -> lastTapX
    float lastTapY -> lastTapY
    int lastTapButton -> lastTapButton
    int lastTapPointer -> lastTapPointer
    boolean longPressFired -> longPressFired
    boolean pinching -> pinching
    boolean panning -> panning
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> tracker
    float tapSquareCenterX -> tapSquareCenterX
    float tapSquareCenterY -> tapSquareCenterY
    long gestureStartTime -> gestureStartTime
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.utils.Timer$Task longPressTask -> longPressTask
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDown(float,float,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchDragged(float,float,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchUp(float,float,int,int) -> touchUp
    boolean isLongPressed() -> isLongPressed
    boolean isLongPressed(float) -> isLongPressed
    boolean isPanning() -> isPanning
    void reset() -> reset
    boolean isWithinTapSquare(float,float,float,float) -> isWithinTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    void setTapSquareSize(int) -> setTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    void setLongPressSeconds(float) -> setLongPressSeconds
    void setMaxFlingDelay(long) -> setMaxFlingDelay
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.input.GestureDetector$1:
    com.badlogic.gdx.input.GestureDetector this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> sampleSize
    float lastX -> lastX
    float lastY -> lastY
    float deltaX -> deltaX
    float deltaY -> deltaY
    long lastTime -> lastTime
    int numSamples -> numSamples
    float[] meanX -> meanX
    float[] meanY -> meanY
    long[] meanTime -> meanTime
    void start(float,float,long) -> start
    void update(float,float,long) -> update
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    float getAverage(float[],int) -> getAverage
    long getAverage(long[],int) -> getAverage
    float getSum(float[],int) -> getSum
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.ServerSocket serverSocket -> serverSocket
    float[] accel -> accel
    float[] compass -> compass
    boolean multiTouch -> multiTouch
    float remoteWidth -> remoteWidth
    float remoteHeight -> remoteHeight
    java.util.Set keys -> keys
    int[] touchX -> touchX
    int[] touchY -> touchY
    boolean[] isTouched -> isTouched
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    int port -> port
    java.lang.String[] ips -> ips
    void run() -> run
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getY() -> getY
    int getY(int) -> getY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    java.lang.String[] getIPs() -> getIPs
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    long getCurrentEventTime() -> getCurrentEventTime
    void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> touchEvent
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> keyEvent
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> out
    boolean connected -> connected
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int ACCEL -> ACCEL
    int COMPASS -> COMPASS
    int SIZE -> SIZE
    void sendUpdate() -> sendUpdate
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean isConnected() -> isConnected
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    long serialVersionUID -> serialVersionUID
    java.util.List controlPoints -> controlPoints
    com.badlogic.gdx.math.Vector3 T1 -> T1
    com.badlogic.gdx.math.Vector3 T2 -> T2
    void add(com.badlogic.gdx.math.Vector3) -> add
    java.util.List getControlPoints() -> getControlPoints
    java.util.List getPath(int) -> getPath
    void getPath(com.badlogic.gdx.math.Vector3[],int) -> getPath
    java.util.List getTangents(int) -> getTangents
    java.util.List getTangentNormals2D(int) -> getTangentNormals2D
    java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3) -> getTangentNormals
    java.util.List getTangentNormals(int,java.util.List) -> getTangentNormals
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    void set(float,float,float) -> set
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int CONVEX -> CONVEX
    int concaveVertexCount -> concaveVertexCount
    java.util.List computeTriangles(java.util.List) -> computeTriangles
    boolean areVerticesClockwise(java.util.ArrayList) -> areVerticesClockwise
    int[] classifyVertices(java.util.ArrayList) -> classifyVertices
    boolean isTriangleConvex(float,float,float,float,float,float) -> isTriangleConvex
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
    boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float) -> isAnyVertexInTriangle
    boolean isEarTip(java.util.ArrayList,int,int[]) -> isEarTip
    void cutEarTip(java.util.ArrayList,int,java.util.ArrayList) -> cutEarTip
    void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int) -> removeCollinearNeighborEarsAfterRemovingEarTip
    boolean isCollinear(java.util.ArrayList,int) -> isCollinear
    boolean isCollinear(java.util.ArrayList,int,int,int) -> isCollinear
    int computePreviousIndex(java.util.List,int) -> computePreviousIndex
    int computeNextIndex(java.util.List,int) -> computeNextIndex
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.FloatCounter:
    int count -> count
    float total -> total
    float min -> min
    float max -> max
    float average -> average
    float latest -> latest
    float value -> value
    com.badlogic.gdx.math.WindowedMean mean -> mean
    void put(float) -> put
    void reset() -> reset
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> clipSpacePlanePoints
    float[] clipSpacePlanePointsArray -> clipSpacePlanePointsArray
    com.badlogic.gdx.math.Plane[] planes -> planes
    com.badlogic.gdx.math.Vector3[] planePoints -> planePoints
    float[] planePointsArray -> planePointsArray
    void update(com.badlogic.gdx.math.Matrix4) -> update
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> linear
    com.badlogic.gdx.math.Interpolation fade -> fade
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> pow2
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> pow2In
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> pow2Out
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> pow3
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> pow3In
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> pow3Out
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> pow4
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> pow4In
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> pow4Out
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> pow5
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> pow5In
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> pow5Out
    com.badlogic.gdx.math.Interpolation sine -> sine
    com.badlogic.gdx.math.Interpolation sineIn -> sineIn
    com.badlogic.gdx.math.Interpolation sineOut -> sineOut
    com.badlogic.gdx.math.Interpolation exp10 -> exp10
    com.badlogic.gdx.math.Interpolation exp10In -> exp10In
    com.badlogic.gdx.math.Interpolation exp10Out -> exp10Out
    com.badlogic.gdx.math.Interpolation exp5 -> exp5
    com.badlogic.gdx.math.Interpolation exp5In -> exp5In
    com.badlogic.gdx.math.Interpolation exp5Out -> exp5Out
    com.badlogic.gdx.math.Interpolation circle -> circle
    com.badlogic.gdx.math.Interpolation circleIn -> circleIn
    com.badlogic.gdx.math.Interpolation circleOut -> circleOut
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> elastic
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> elasticIn
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> elasticOut
    com.badlogic.gdx.math.Interpolation swing -> swing
    com.badlogic.gdx.math.Interpolation swingIn -> swingIn
    com.badlogic.gdx.math.Interpolation swingOut -> swingOut
    com.badlogic.gdx.math.Interpolation bounce -> bounce
    com.badlogic.gdx.math.Interpolation bounceIn -> bounceIn
    com.badlogic.gdx.math.Interpolation bounceOut -> bounceOut
    float apply(float) -> apply
    float apply(float,float,float) -> apply
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    float out(float) -> out
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> widths
    float[] heights -> heights
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> value
    float power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> value
    float power -> power
    float min -> min
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector3 intersection -> intersection
    float getLowestPositiveRoot(float,float,float) -> getLowestPositiveRoot
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pointLineSide
    int pointLineSide(float,float,float,float,float,float) -> pointLineSide
    boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceLinePoint
    float distanceLinePoint(float,float,float,float,float,float) -> distanceLinePoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectLinePlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> intersectRayBounds
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
    boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> overlapCircles
    boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> overlapRectangles
    boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> overlapCircleRectangle
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> overlapConvexPolygons
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> splitTriangle
    void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int) -> splitEdge
    void main(java.lang.String[]) -> main
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    com.badlogic.gdx.math.Vector2 normal -> normal
    float depth -> depth
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> front
    float[] back -> back
    float[] edgeSplit -> edgeSplit
    int numFront -> numFront
    int numBack -> numBack
    int total -> total
    boolean frontCurrent -> frontCurrent
    int frontOffset -> frontOffset
    int backOffset -> backOffset
    java.lang.String toString() -> toString
    void setSide(boolean) -> setSide
    boolean getSide() -> getSide
    void add(float[],int,int) -> add
    void reset() -> reset
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float nanoToSec -> nanoToSec
    float PI -> PI
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float radDeg -> radDeg
    float degreesToRadians -> degreesToRadians
    float degRad -> degRad
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    java.util.Random random -> random
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double CEIL -> CEIL
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    double BIG_ENOUGH_ROUND -> BIG_ENOUGH_ROUND
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    boolean randomBoolean() -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int clamp(int,int,int) -> clamp
    short clamp(short,short,short) -> clamp
    float clamp(float,float,float) -> clamp
    int floor(float) -> floor
    int floorPositive(float) -> floorPositive
    int ceil(float) -> ceil
    int ceilPositive(float) -> ceilPositive
    int round(float) -> round
    int roundPositive(float) -> roundPositive
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.MathUtils$Atan2:
    float[] table -> table
com.badlogic.gdx.math.MathUtils$Cos -> com.badlogic.gdx.math.MathUtils$Cos:
    float[] table -> table
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.MathUtils$Sin:
    float[] table -> table
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    float DEGREE_TO_RAD -> DEGREE_TO_RAD
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    float[] val -> val
    float[] tmp -> tmp
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> trn
    com.badlogic.gdx.math.Matrix3 trn(float,float) -> trn
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix3 translate(float,float) -> translate
    com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> translate
    com.badlogic.gdx.math.Matrix3 rotate(float) -> rotate
    com.badlogic.gdx.math.Matrix3 scale(float,float) -> scale
    com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> scale
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix3 scl(float) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix3 transpose() -> transpose
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    void lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float) -> scl
    void getTranslation(com.badlogic.gdx.math.Vector3) -> getTranslation
    void getRotation(com.badlogic.gdx.math.Quaternion) -> getRotation
    com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> toNormalMatrix
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> translate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> scale
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> $VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void dirty() -> dirty
    float area() -> area
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    boolean contains(float,float) -> contains
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> NORMALIZATION_TOLERANCE
    com.badlogic.gdx.math.Quaternion tmp1 -> tmp1
    com.badlogic.gdx.math.Quaternion tmp2 -> tmp2
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len() -> len
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
    float len2() -> len2
    com.badlogic.gdx.math.Quaternion nor() -> nor
    com.badlogic.gdx.math.Quaternion conjugate() -> conjugate
    void transform(com.badlogic.gdx.math.Vector3) -> transform
    com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> mulLeft
    void toMatrix(float[]) -> toMatrix
    com.badlogic.gdx.math.Quaternion idt() -> idt
    com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setFromCross
    com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> setFromCross
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    boolean equals(java.lang.Object) -> equals
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    com.badlogic.gdx.math.Quaternion mul(float) -> mul
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    void set(float,float,float,float) -> set
    boolean contains(float,float) -> contains
    void set(com.badlogic.gdx.math.Rectangle) -> set
    void merge(com.badlogic.gdx.math.Rectangle) -> merge
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 X -> X
    com.badlogic.gdx.math.Vector2 Y -> Y
    com.badlogic.gdx.math.Vector2 Zero -> Zero
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    com.badlogic.gdx.math.Vector2 mul(float) -> mul
    com.badlogic.gdx.math.Vector2 mul(float,float) -> mul
    com.badlogic.gdx.math.Vector2 div(float) -> div
    com.badlogic.gdx.math.Vector2 div(float,float) -> div
    com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2) -> div
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    float dst2(float,float) -> dst2
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 tmp() -> tmp
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
    float crs(com.badlogic.gdx.math.Vector2) -> crs
    float crs(float,float) -> crs
    float angle() -> angle
    void setAngle(float) -> setAngle
    com.badlogic.gdx.math.Vector2 rotate(float) -> rotate
    com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> lerp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> epsilonEquals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 Zero -> Zero
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 tmp() -> tmp
    com.badlogic.gdx.math.Vector3 tmp2() -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3() -> tmp3
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 mul(float) -> mul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3) -> mul
    com.badlogic.gdx.math.Vector3 mul(float,float,float) -> mul
    com.badlogic.gdx.math.Vector3 div(float) -> div
    com.badlogic.gdx.math.Vector3 div(float,float,float) -> div
    com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3) -> div
    float len() -> len
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    boolean isUnit() -> isUnit
    boolean isZero() -> isZero
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    float dot(float,float,float) -> dot
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    float dst(float,float,float) -> dst
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector3 scale(float,float,float) -> scale
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> overlaps
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.net.NetJavaImpl:
    java.util.concurrent.ExecutorService executorService -> executorService
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.net.NetJavaImpl$1:
    java.lang.String val$method -> val$method
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> val$httpRequest
    java.net.HttpURLConnection val$connection -> val$connection
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> val$httpResponseListener
    com.badlogic.gdx.net.NetJavaImpl this$0 -> this$0
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$1 -> com.badlogic.gdx.net.NetJavaImpl$1$1:
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$2 -> com.badlogic.gdx.net.NetJavaImpl$1$2:
    java.lang.Exception val$e -> val$e
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    java.net.HttpURLConnection connection -> connection
    com.badlogic.gdx.Net$HttpStatus status -> status
    java.io.InputStream inputStream -> inputStream
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.Net$HttpStatus getStatus() -> getStatus
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.net.ServerSocket:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.net.ServerSocketHints:
    int backlog -> backlog
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    boolean reuseAddress -> reuseAddress
    int acceptTimeout -> acceptTimeout
    int receiveBufferSize -> receiveBufferSize
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.net.Socket:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.net.SocketHints:
    int connectTimeout -> connectTimeout
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    int trafficClass -> trafficClass
    boolean keepAlive -> keepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int sendBufferSize -> sendBufferSize
    int receiveBufferSize -> receiveBufferSize
    boolean linger -> linger
    int lingerDuration -> lingerDuration
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> addr
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.World world -> world
    java.util.ArrayList fixtures -> fixtures
    java.util.ArrayList joints -> joints
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.Transform transform -> transform
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 worldCenter -> worldCenter
    com.badlogic.gdx.math.Vector2 localCenter -> localCenter
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    com.badlogic.gdx.physics.box2d.MassData massData -> massData
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    com.badlogic.gdx.math.Vector2 worldVector -> worldVector
    com.badlogic.gdx.math.Vector2 localPoint2 -> localPoint2
    com.badlogic.gdx.math.Vector2 localVector -> localVector
    com.badlogic.gdx.math.Vector2 linVelWorld -> linVelWorld
    com.badlogic.gdx.math.Vector2 linVelLoc -> linVelLoc
    void reset(long) -> reset
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> createFixture
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> createFixture
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> destroyFixture
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> setTransform
    void setTransform(float,float,float) -> setTransform
    void setTransform(float,float,float,boolean) -> setTransform
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    void jniSetTransform(long,float,float,float,boolean) -> jniSetTransform
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> getTransform
    void jniGetTransform(long,float[]) -> jniGetTransform
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    float getAngle() -> getAngle
    float jniGetAngle(long) -> jniGetAngle
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> getWorldCenter
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> getLocalCenter
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> setLinearVelocity
    void setLinearVelocity(float,float) -> setLinearVelocity
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> getLinearVelocity
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    float getAngularVelocity() -> getAngularVelocity
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyForce
    void applyForce(float,float,float,float) -> applyForce
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> applyForceToCenter
    void applyForceToCenter(float,float) -> applyForceToCenter
    void jniApplyForceToCenter(long,float,float) -> jniApplyForceToCenter
    void applyTorque(float) -> applyTorque
    void jniApplyTorque(long,float) -> jniApplyTorque
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyLinearImpulse
    void applyLinearImpulse(float,float,float,float) -> applyLinearImpulse
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    void applyAngularImpulse(float) -> applyAngularImpulse
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    float getMass() -> getMass
    float jniGetMass(long) -> jniGetMass
    float getInertia() -> getInertia
    float jniGetInertia(long) -> jniGetInertia
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> getMassData
    void jniGetMassData(long,float[]) -> jniGetMassData
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> setMassData
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    void resetMassData() -> resetMassData
    void jniResetMassData(long) -> jniResetMassData
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> getWorldPoint
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> getWorldVector
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> getLocalPoint
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> getLocalVector
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromWorldPoint
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromLocalPoint
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    float getLinearDamping() -> getLinearDamping
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    void setLinearDamping(float) -> setLinearDamping
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    float getAngularDamping() -> getAngularDamping
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    void setAngularDamping(float) -> setAngularDamping
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> setType
    void jniSetType(long,int) -> jniSetType
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> getType
    int jniGetType(long) -> jniGetType
    void setBullet(boolean) -> setBullet
    void jniSetBullet(long,boolean) -> jniSetBullet
    boolean isBullet() -> isBullet
    boolean jniIsBullet(long) -> jniIsBullet
    void setSleepingAllowed(boolean) -> setSleepingAllowed
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    boolean isSleepingAllowed() -> isSleepingAllowed
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    void setAwake(boolean) -> setAwake
    void jniSetAwake(long,boolean) -> jniSetAwake
    boolean isAwake() -> isAwake
    boolean jniIsAwake(long) -> jniIsAwake
    void setActive(boolean) -> setActive
    void jniSetActive(long,boolean) -> jniSetActive
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
    void setFixedRotation(boolean) -> setFixedRotation
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    boolean isFixedRotation() -> isFixedRotation
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    java.util.ArrayList getFixtureList() -> getFixtureList
    java.util.ArrayList getJointList() -> getJointList
    float getGravityScale() -> getGravityScale
    float jniGetGravityScale(long) -> jniGetGravityScale
    void setGravityScale(float) -> setGravityScale
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    com.badlogic.gdx.physics.box2d.World getWorld() -> getWorld
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> type
    com.badlogic.gdx.math.Vector2 position -> position
    float angle -> angle
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    float angularVelocity -> angularVelocity
    float linearDamping -> linearDamping
    float angularDamping -> angularDamping
    boolean allowSleep -> allowSleep
    boolean awake -> awake
    boolean fixedRotation -> fixedRotation
    boolean bullet -> bullet
    boolean active -> active
    float gravityScale -> gravityScale
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> StaticBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> KinematicBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> DynamicBody
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> renderer
    com.badlogic.gdx.math.Vector2[] vertices -> vertices
    com.badlogic.gdx.math.Vector2 lower -> lower
    com.badlogic.gdx.math.Vector2 upper -> upper
    boolean drawBodies -> drawBodies
    boolean drawJoints -> drawJoints
    boolean drawAABBs -> drawAABBs
    boolean drawInactiveBodies -> drawInactiveBodies
    boolean drawVelocities -> drawVelocities
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> SHAPE_NOT_ACTIVE
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> SHAPE_STATIC
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> SHAPE_KINEMATIC
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> SHAPE_NOT_AWAKE
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> SHAPE_AWAKE
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> JOINT_COLOR
    com.badlogic.gdx.graphics.Color AABB_COLOR -> AABB_COLOR
    com.badlogic.gdx.graphics.Color VELOCITY_COLOR -> VELOCITY_COLOR
    com.badlogic.gdx.math.Vector2 t -> t
    com.badlogic.gdx.math.Vector2 axis -> axis
    com.badlogic.gdx.math.Vector2 f -> f
    com.badlogic.gdx.math.Vector2 v -> v
    com.badlogic.gdx.math.Vector2 lv -> lv
    void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> render
    void renderBodies(com.badlogic.gdx.physics.box2d.World) -> renderBodies
    void renderBody(com.badlogic.gdx.physics.box2d.Body) -> renderBody
    void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> drawAABB
    void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> drawShape
    void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSolidCircle
    void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean) -> drawSolidPolygon
    void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> drawJoint
    void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSegment
    void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> drawContact
    boolean isDrawBodies() -> isDrawBodies
    void setDrawBodies(boolean) -> setDrawBodies
    boolean isDrawJoints() -> isDrawJoints
    void setDrawJoints(boolean) -> setDrawJoints
    boolean isDrawAABBs() -> isDrawAABBs
    void setDrawAABBs(boolean) -> setDrawAABBs
    boolean isDrawInactiveBodies() -> isDrawInactiveBodies
    void setDrawInactiveBodies(boolean) -> setDrawInactiveBodies
    boolean isDrawVelocities() -> isDrawVelocities
    void setDrawVelocities(boolean) -> setDrawVelocities
    com.badlogic.gdx.math.Vector2 getAxis() -> getAxis
    void setAxis(com.badlogic.gdx.math.Vector2) -> setAxis
    void dispose() -> dispose
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    boolean isLooped -> isLooped
    float[] verts -> verts
    long newChainShape() -> newChainShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void createLoop(com.badlogic.gdx.math.Vector2[]) -> createLoop
    void jniCreateLoop(long,float[],int) -> jniCreateLoop
    void createChain(com.badlogic.gdx.math.Vector2[]) -> createChain
    void jniCreateChain(long,float[],int) -> jniCreateChain
    void setPrevVertex(com.badlogic.gdx.math.Vector2) -> setPrevVertex
    void setPrevVertex(float,float) -> setPrevVertex
    void jniSetPrevVertex(long,float,float) -> jniSetPrevVertex
    void setNextVertex(com.badlogic.gdx.math.Vector2) -> setNextVertex
    void setNextVertex(float,float) -> setNextVertex
    void jniSetNextVertex(long,float,float) -> jniSetNextVertex
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
    boolean isLooped() -> isLooped
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 position -> position
    long newCircleShape() -> newCircleShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> worldManifold
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> getWorldManifold
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    boolean isTouching() -> isTouching
    boolean jniIsTouching(long) -> jniIsTouching
    void setEnabled(boolean) -> setEnabled
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    boolean isEnabled() -> isEnabled
    boolean jniIsEnabled(long) -> jniIsEnabled
    com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> getFixtureA
    long jniGetFixtureA(long) -> jniGetFixtureA
    com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> getFixtureB
    long jniGetFixtureB(long) -> jniGetFixtureB
    int getChildIndexA() -> getChildIndexA
    int jniGetChildIndexA(long) -> jniGetChildIndexA
    int getChildIndexB() -> getChildIndexB
    int jniGetChildIndexB(long) -> jniGetChildIndexB
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void resetFriction() -> resetFriction
    void jniResetFriction(long) -> jniResetFriction
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void ResetRestitution() -> ResetRestitution
    void jniResetRestitution(long) -> jniResetRestitution
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.ContactFilter:
    boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> shouldCollide
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> world
    long addr -> addr
    float[] tmp -> tmp
    float[] normalImpulses -> normalImpulses
    float[] tangentImpulses -> tangentImpulses
    float[] getNormalImpulses() -> getNormalImpulses
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    float[] getTangentImpulses() -> getTangentImpulses
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
    int getCount() -> getCount
    int jniGetCount(long) -> jniGetCount
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.ContactListener:
    void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> beginContact
    void endContact(com.badlogic.gdx.physics.box2d.Contact) -> endContact
    void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> preSolve
    void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> postSolve
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.DestructionListener:
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> vertex
    long newEdgeShape() -> newEdgeShape
    void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> set
    void set(float,float,float,float) -> set
    void jniSet(long,float,float,float,float) -> jniSet
    void getVertex1(com.badlogic.gdx.math.Vector2) -> getVertex1
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    void getVertex2(com.badlogic.gdx.math.Vector2) -> getVertex2
    void jniGetVertex2(long,float[]) -> jniGetVertex2
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> categoryBits
    short maskBits -> maskBits
    short groupIndex -> groupIndex
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> body
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    java.lang.Object userData -> userData
    short[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
    void reset(com.badlogic.gdx.physics.box2d.Body,long) -> reset
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Shape getShape() -> getShape
    long jniGetShape(long) -> jniGetShape
    void setSensor(boolean) -> setSensor
    void jniSetSensor(long,boolean) -> jniSetSensor
    boolean isSensor() -> isSensor
    boolean jniIsSensor(long) -> jniIsSensor
    void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> setFilterData
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    com.badlogic.gdx.physics.box2d.Filter getFilterData() -> getFilterData
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    void refilter() -> refilter
    void jniRefilter(long) -> jniRefilter
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean testPoint(com.badlogic.gdx.math.Vector2) -> testPoint
    boolean testPoint(float,float) -> testPoint
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    void setDensity(float) -> setDensity
    void jniSetDensity(long,float) -> jniSetDensity
    float getDensity() -> getDensity
    float jniGetDensity(long) -> jniGetDensity
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    float friction -> friction
    float restitution -> restitution
    float density -> density
    boolean isSensor -> isSensor
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> jointEdgeA
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> jointEdgeB
    com.badlogic.gdx.math.Vector2 anchorA -> anchorA
    com.badlogic.gdx.math.Vector2 anchorB -> anchorB
    com.badlogic.gdx.math.Vector2 reactionForce -> reactionForce
    com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Body getBodyA() -> getBodyA
    long jniGetBodyA(long) -> jniGetBodyA
    com.badlogic.gdx.physics.box2d.Body getBodyB() -> getBodyB
    long jniGetBodyB(long) -> jniGetBodyB
    com.badlogic.gdx.math.Vector2 getAnchorA() -> getAnchorA
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    com.badlogic.gdx.math.Vector2 getAnchorB() -> getAnchorB
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    com.badlogic.gdx.math.Vector2 getReactionForce(float) -> getReactionForce
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    float getReactionTorque(float) -> getReactionTorque
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> type
    com.badlogic.gdx.physics.box2d.Body bodyA -> bodyA
    com.badlogic.gdx.physics.box2d.Body bodyB -> bodyB
    boolean collideConnected -> collideConnected
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> Unknown
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> RevoluteJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> PrismaticJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> DistanceJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> PulleyJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> MouseJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> GearJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> WheelJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> WeldJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> FrictionJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> RopeJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> valueTypes
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> other
    com.badlogic.gdx.physics.box2d.Joint joint -> joint
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> points
    com.badlogic.gdx.math.Vector2 localNormal -> localNormal
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    int[] tmpInt -> tmpInt
    float[] tmpFloat -> tmpFloat
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> getType
    int jniGetType(long) -> jniGetType
    int getPointCount() -> getPointCount
    int jniGetPointCount(long) -> jniGetPointCount
    com.badlogic.gdx.math.Vector2 getLocalNormal() -> getLocalNormal
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    com.badlogic.gdx.math.Vector2 getLocalPoint() -> getLocalPoint
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> getPoints
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    float normalImpulse -> normalImpulse
    float tangentImpulse -> tangentImpulse
    int contactID -> contactID
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> this$0
    java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> Circle
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> FaceA
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> FaceB
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> mass
    com.badlogic.gdx.math.Vector2 center -> center
    float I -> I
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> verts
    long newPolygonShape() -> newPolygonShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void set(com.badlogic.gdx.math.Vector2[]) -> set
    void set(float[]) -> set
    void set(float[],int,int) -> set
    void jniSet(long,float[],int,int) -> jniSet
    void setAsBox(float,float) -> setAsBox
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> setAsBox
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.QueryCallback:
    boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture) -> reportFixture
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.RayCastCallback:
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    float getRadius() -> getRadius
    float jniGetRadius(long) -> jniGetRadius
    void setRadius(float) -> setRadius
    void jniSetRadius(long,float) -> jniSetRadius
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
    int getChildCount() -> getChildCount
    int jniGetChildCount(long) -> jniGetChildCount
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> Circle
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> Polygon
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> Edge
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> Chain
    com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> POS_X
    int POS_Y -> POS_Y
    int COS -> COS
    int SIN -> SIN
    float[] vals -> vals
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> mul
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> freeBodies
    com.badlogic.gdx.utils.Pool freeFixtures -> freeFixtures
    long addr -> addr
    com.badlogic.gdx.utils.LongMap bodies -> bodies
    com.badlogic.gdx.utils.LongMap fixtures -> fixtures
    com.badlogic.gdx.utils.LongMap joints -> joints
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> contactFilter
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> contactListener
    float[] tmpGravity -> tmpGravity
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> queryCallback
    long[] contactAddrs -> contactAddrs
    java.util.ArrayList contacts -> contacts
    java.util.ArrayList freeContacts -> freeContacts
    com.badlogic.gdx.physics.box2d.Contact contact -> contact
    com.badlogic.gdx.physics.box2d.Manifold manifold -> manifold
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> impulse
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> rayCastCallback
    com.badlogic.gdx.math.Vector2 rayPoint -> rayPoint
    com.badlogic.gdx.math.Vector2 rayNormal -> rayNormal
    long newWorld(float,float,boolean) -> newWorld
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setUseDefaultContactFilter(boolean) -> setUseDefaultContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void jniDestroyBody(long,long) -> jniDestroyBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createProperJoint
    long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float) -> jniCreateWheelJoint
    long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateRopeJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    void step(float,int,int) -> step
    void jniStep(long,float,int,int) -> jniStep
    void clearForces() -> clearForces
    void jniClearForces(long) -> jniClearForces
    void setWarmStarting(boolean) -> setWarmStarting
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    int getProxyCount() -> getProxyCount
    int jniGetProxyCount(long) -> jniGetProxyCount
    int getBodyCount() -> getBodyCount
    int jniGetBodyCount(long) -> jniGetBodyCount
    int getJointCount() -> getJointCount
    int jniGetJointcount(long) -> jniGetJointcount
    int getContactCount() -> getContactCount
    int jniGetContactCount(long) -> jniGetContactCount
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void jniSetGravity(long,float,float) -> jniSetGravity
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    void jniGetGravity(long,float[]) -> jniGetGravity
    boolean isLocked() -> isLocked
    boolean jniIsLocked(long) -> jniIsLocked
    void setAutoClearForces(boolean) -> setAutoClearForces
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    boolean getAutoClearForces() -> getAutoClearForces
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    java.util.List getContactList() -> getContactList
    java.util.Iterator getBodies() -> getBodies
    java.util.Iterator getJoints() -> getJoints
    void jniGetContactList(long,long[]) -> jniGetContactList
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    boolean contactFilter(long,long) -> contactFilter
    void beginContact(long) -> beginContact
    void endContact(long) -> endContact
    void preSolve(long,long) -> preSolve
    void postSolve(long,long) -> postSolve
    boolean reportFixture(long) -> reportFixture
    void setVelocityThreshold(float) -> setVelocityThreshold
    float getVelocityThreshold() -> getVelocityThreshold
    void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> rayCast
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    float reportRayFixture(long,float,float,float,float,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.World$1:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Body newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.World$2:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Fixture newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> normal
    com.badlogic.gdx.math.Vector2[] points -> points
    int numContactPoints -> numContactPoints
    com.badlogic.gdx.math.Vector2 getNormal() -> getNormal
    com.badlogic.gdx.math.Vector2[] getPoints() -> getPoints
    int getNumberOfContactPoints() -> getNumberOfContactPoints
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    void setLength(float) -> setLength
    void jniSetLength(long,float) -> jniSetLength
    float getLength() -> getLength
    float jniGetLength(long) -> jniGetLength
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float length -> length
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setMaxTorque(float) -> setMaxTorque
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    float getMaxTorque() -> getMaxTorque
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    void setRatio(float) -> setRatio
    void jniSetRatio(long,float) -> jniSetRatio
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    float ratio -> ratio
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 target -> target
    void setTarget(com.badlogic.gdx.math.Vector2) -> setTarget
    void jniSetTarget(long,float,float) -> jniSetTarget
    com.badlogic.gdx.math.Vector2 getTarget() -> getTarget
    void jniGetTarget(long,float[]) -> jniGetTarget
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> target
    float maxForce -> maxForce
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorForce(float) -> setMaxMotorForce
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    float getMotorForce(float) -> getMotorForce
    float jniGetMotorForce(long,float) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> getGroundAnchorA
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> getGroundAnchorB
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    float getLength1() -> getLength1
    float jniGetLength1(long) -> jniGetLength1
    float getLength2() -> getLength2
    float jniGetLength2(long) -> jniGetLength2
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> minPulleyLength
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float lengthA -> lengthA
    float lengthB -> lengthB
    float ratio -> ratio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> initialize
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    float getJointAngle() -> getJointAngle
    float jniGetJointAngle(long) -> jniGetJointAngle
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerAngle -> lowerAngle
    float upperAngle -> upperAngle
    boolean enableMotor -> enableMotor
    float motorSpeed -> motorSpeed
    float maxMotorTorque -> maxMotorTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.RopeJoint -> com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    float getMaxLength() -> getMaxLength
    float jniGetMaxLength(long) -> jniGetMaxLength
    void setMaxLength(float) -> setMaxLength
    float jniSetMaxLength(long,float) -> jniSetMaxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef -> com.badlogic.gdx.physics.box2d.joints.RopeJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxLength -> maxLength
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    float getReferenceAngle() -> getReferenceAngle
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.WheelJoint -> com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMaxMotorTorque() -> getMaxMotorTorque
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    void setSpringFrequencyHz(float) -> setSpringFrequencyHz
    void jniSetSpringFrequencyHz(long,float) -> jniSetSpringFrequencyHz
    float getSpringFrequencyHz() -> getSpringFrequencyHz
    float jniGetSpringFrequencyHz(long) -> jniGetSpringFrequencyHz
    void setSpringDampingRatio(float) -> setSpringDampingRatio
    void jniSetSpringDampingRatio(long,float) -> jniSetSpringDampingRatio
    float getSpringDampingRatio() -> getSpringDampingRatio
    float jniGetSpringDampingRatio(long) -> jniGetSpringDampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef -> com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    boolean enableMotor -> enableMotor
    float maxMotorTorque -> maxMotorTorque
    float motorSpeed -> motorSpeed
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.Pool pool -> pool
    boolean act(float) -> act
    void restart() -> restart
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void reset() -> reset
    com.badlogic.gdx.utils.Pool getPool() -> getPool
    void setPool(com.badlogic.gdx.utils.Pool) -> setPool
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void act(float) -> act
    boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    boolean remove() -> remove
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    com.badlogic.gdx.utils.Array getListeners() -> getListeners
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.utils.Array getActions() -> getActions
    void clearActions() -> clearActions
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    boolean hasParent() -> hasParent
    com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    float getTop() -> getTop
    float getRight() -> getRight
    void setSize(float,float) -> setSize
    void size(float) -> size
    void size(float,float) -> size
    void setBounds(float,float,float,float) -> setBounds
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    void setOrigin(float,float) -> setOrigin
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void scale(float,float) -> scale
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void toFront() -> toFront
    void toBack() -> toBack
    void setZIndex(int) -> setZIndex
    int getZIndex() -> getZIndex
    boolean clipBegin() -> clipBegin
    boolean clipBegin(float,float,float,float) -> clipBegin
    void clipEnd() -> clipEnd
    com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.Event:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    boolean capture -> capture
    boolean bubbles -> bubbles
    boolean handled -> handled
    boolean stopped -> stopped
    boolean cancelled -> cancelled
    void handle() -> handle
    void cancel() -> cancel
    void stop() -> stop
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> getListenerActor
    void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setListenerActor
    boolean getBubbles() -> getBubbles
    void setBubbles(boolean) -> setBubbles
    boolean isHandled() -> isHandled
    boolean isStopped() -> isStopped
    boolean isCancelled() -> isCancelled
    void setCapture(boolean) -> setCapture
    boolean isCapture() -> isCapture
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.EventListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Matrix3 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix3 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 batchTransform -> batchTransform
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> oldBatchTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    com.badlogic.gdx.math.Vector2 point -> point
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawChildren
    void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> resetTransform
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void childrenChanged() -> childrenChanged
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean swapActor(int,int) -> swapActor
    boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    void setTransform(boolean) -> setTransform
    boolean isTransform() -> isTransform
    com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.InputEvent:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> type
    float stageX -> stageX
    float stageY -> stageY
    int pointer -> pointer
    int button -> button
    int keyCode -> keyCode
    int scrollAmount -> scrollAmount
    char character -> character
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    float getStageX() -> getStageX
    void setStageX(float) -> setStageX
    float getStageY() -> getStageY
    void setStageY(float) -> setStageY
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> setType
    int getPointer() -> getPointer
    void setPointer(int) -> setPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
    int getKeyCode() -> getKeyCode
    void setKeyCode(int) -> setKeyCode
    char getCharacter() -> getCharacter
    void setCharacter(char) -> setCharacter
    int getScrollAmount() -> getScrollAmount
    void setScrollAmount(int) -> setScrollAmount
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> touchDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> touchUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> touchDragged
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> mouseMoved
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> enter
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> exit
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> scrolled
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> keyDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> keyUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> keyTyped
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.InputListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.InputListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    float width -> width
    float height -> height
    float gutterWidth -> gutterWidth
    float gutterHeight -> gutterHeight
    float centerX -> centerX
    float centerY -> centerY
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> batch
    boolean ownsBatch -> ownsBatch
    com.badlogic.gdx.scenes.scene2d.Group root -> root
    com.badlogic.gdx.math.Vector2 stageCoords -> stageCoords
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> pointerOverActors
    boolean[] pointerTouched -> pointerTouched
    int[] pointerScreenX -> pointerScreenX
    int[] pointerScreenY -> pointerScreenY
    int mouseScreenX -> mouseScreenX
    int mouseScreenY -> mouseScreenY
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> mouseOverActor
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> keyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> scrollFocus
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> touchFocuses
    void initialize(float,float,boolean) -> initialize
    void setViewport(float,float,boolean) -> setViewport
    void draw() -> draw
    void act() -> act
    void act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> fireEnterAndExit
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> addTouchFocus
    void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> removeTouchFocus
    void cancelTouchFocus() -> cancelTouchFocus
    void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> cancelTouchFocus
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.utils.Array getActors() -> getActors
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    void clear() -> clear
    void unfocusAll() -> unfocusAll
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> unfocus
    void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> getKeyboardFocus
    void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setScrollFocus
    com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> getScrollFocus
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getGutterWidth() -> getGutterWidth
    float getGutterHeight() -> getGutterHeight
    com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.scenes.scene2d.Group getRoot() -> getRoot
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> screenToStageCoordinates
    com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> stageToScreenCoordinates
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    int pointer -> pointer
    int button -> button
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.Touchable:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> enabled
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> disabled
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> childrenOnly
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.actions.Actions:
    com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> action
    com.badlogic.gdx.scenes.scene2d.actions.AddAction add(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Action) -> add
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation) -> color
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> show
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> hide
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> visible
    com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> touchable
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> repeat
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> forever
    com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> run
    com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> layout
    com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> after
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void restart() -> restart
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    com.badlogic.gdx.utils.Array waitForActions -> waitForActions
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void restart() -> restart
    boolean act(float) -> act
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    float start -> start
    float end -> end
    com.badlogic.gdx.graphics.Color color -> color
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    float startR -> startR
    float startG -> startG
    float startB -> startB
    float startA -> startA
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.Color end -> end
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getEndColor() -> getEndColor
    void setEndColor(com.badlogic.gdx.graphics.Color) -> setEndColor
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    float duration -> duration
    float time -> time
    boolean act(float) -> act
    void finish() -> finish
    void restart() -> restart
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void restart() -> restart
    void reset() -> reset
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    float start -> start
    float end -> end
    float value -> value
    void begin() -> begin
    void update(float) -> update
    float getValue() -> getValue
    void setValue(float) -> setValue
    float getStart() -> getStart
    void setStart(float) -> setStart
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    int start -> start
    int end -> end
    int value -> value
    void begin() -> begin
    void update(float) -> update
    int getValue() -> getValue
    void setValue(int) -> setValue
    int getStart() -> getStart
    void setStart(int) -> setStart
    int getEnd() -> getEnd
    void setEnd(int) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    boolean enabled -> enabled
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    boolean act(float) -> act
    boolean isEnabled() -> isEnabled
    void setLayoutEnabled(boolean) -> setLayoutEnabled
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setPosition(float,float) -> setPosition
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    com.badlogic.gdx.utils.Array actions -> actions
    boolean complete -> complete
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.utils.Array getActions() -> getActions
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    float lastPercent -> lastPercent
    void begin() -> begin
    void update(float) -> update
    void updateRelative(float) -> updateRelative
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> removeActor
    boolean removed -> removed
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor() -> getRemoveActor
    void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRemoveActor
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    int FOREVER -> FOREVER
    int repeatCount -> repeatCount
    int executedCount -> executedCount
    boolean finished -> finished
    boolean act(float) -> act
    void finish() -> finish
    void restart() -> restart
    void setCount(int) -> setCount
    int getCount() -> getCount
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    float amount -> amount
    void updateRelative(float) -> updateRelative
    float getAmount() -> getAmount
    void setAmount(float) -> setAmount
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    float start -> start
    float end -> end
    void begin() -> begin
    void update(float) -> update
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    java.lang.Runnable runnable -> runnable
    boolean ran -> ran
    boolean act(float) -> act
    void run() -> run
    void restart() -> restart
    void reset() -> reset
    java.lang.Runnable getRunnable() -> getRunnable
    void setRunnable(java.lang.Runnable) -> setRunnable
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    void setAmount(float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    int index -> index
    boolean act(float) -> act
    void restart() -> restart
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    float amountWidth -> amountWidth
    float amountHeight -> amountHeight
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountWidth() -> getAmountWidth
    void setAmountWidth(float) -> setAmountWidth
    float getAmountHeight() -> getAmountHeight
    void setAmountHeight(float) -> setAmountHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    float startWidth -> startWidth
    float startHeight -> startHeight
    float endWidth -> endWidth
    float endHeight -> endHeight
    void begin() -> begin
    void update(float) -> update
    void setSize(float,float) -> setSize
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    float duration -> duration
    float time -> time
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    boolean reverse -> reverse
    boolean complete -> complete
    boolean act(float) -> act
    void begin() -> begin
    void end() -> end
    void update(float) -> update
    void finish() -> finish
    void restart() -> restart
    void reset() -> reset
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    com.badlogic.gdx.math.Interpolation getInterpolation() -> getInterpolation
    void setInterpolation(com.badlogic.gdx.math.Interpolation) -> setInterpolation
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    boolean visible -> visible
    boolean act(float) -> act
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    boolean isChecked() -> isChecked
    boolean isPressed() -> isPressed
    boolean isOver() -> isOver
    boolean isDisabled() -> isDisabled
    void setDisabled(boolean) -> setDisabled
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    void setChecked(java.lang.String) -> setChecked
    boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    void uncheckAll() -> uncheckAll
    com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    com.badlogic.gdx.utils.Array getButtons() -> getButtons
    void setMinCheckCount(int) -> setMinCheckCount
    void setMaxCheckCount(int) -> setMaxCheckCount
    void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    float fadeDuration -> fadeDuration
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    void hide() -> hide
    void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    void result(java.lang.Object) -> result
    void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    void setAlign(int) -> setAlign
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean sizeInvalid -> sizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    void setText(java.lang.CharSequence) -> setText
    boolean textEquals(java.lang.CharSequence) -> textEquals
    java.lang.CharSequence getText() -> getText
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    void setWrap(boolean) -> setWrap
    void setAlignment(int) -> setAlignment
    void setAlignment(int,int) -> setAlignment
    void setFontScale(float) -> setFontScale
    void setFontScale(float,float) -> setFontScale
    float getFontScaleX() -> getFontScaleX
    void setFontScaleX(float) -> setFontScaleX
    float getFontScaleY() -> getFontScaleY
    void setFontScaleY(float) -> setFontScaleY
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    java.lang.String[] items -> items
    int selectedIndex -> selectedIndex
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    void touchDown(float) -> touchDown
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    java.lang.String getSelection() -> getSelection
    int setSelection(java.lang.String) -> setSelection
    void setItems(java.lang.Object[]) -> setItems
    java.lang.String[] getItems() -> getItems
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceOverscrollX -> forceOverscrollX
    boolean forceOverscrollY -> forceOverscrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    int draggingPointer -> draggingPointer
    void resetFade() -> resetFade
    void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    void clamp() -> clamp
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    void act(float) -> act
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void scrollX(float) -> scrollX
    void scrollY(float) -> scrollY
    void visualScrollX(float) -> visualScrollX
    void visualScrollY(float) -> visualScrollY
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    float getVisualScrollX() -> getVisualScrollX
    float getVisualScrollY() -> getVisualScrollY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    void setFlickScroll(boolean) -> setFlickScroll
    void scrollTo(float,float,float,float) -> scrollTo
    void scrollToCenter(float,float,float,float) -> scrollToCenter
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    float getScrollBarHeight() -> getScrollBarHeight
    float getScrollBarWidth() -> getScrollBarWidth
    boolean isScrollX() -> isScrollX
    boolean isScrollY() -> isScrollY
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    boolean isDragging() -> isDragging
    boolean isPanning() -> isPanning
    boolean isFlinging() -> isFlinging
    void setVelocityX(float) -> setVelocityX
    float getVelocityX() -> getVelocityX
    void setVelocityY(float) -> setVelocityY
    float getVelocityY() -> getVelocityY
    void setOverscroll(boolean,boolean) -> setOverscroll
    void setupOverscroll(float,float,float) -> setupOverscroll
    void setForceOverscroll(boolean,boolean) -> setForceOverscroll
    void setFlingTime(float) -> setFlingTime
    void setClamp(boolean) -> setClamp
    void setFadeScrollBars(boolean) -> setFadeScrollBars
    void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    void setSmoothScrolling(boolean) -> setSmoothScrolling
    void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    void setCancelTouchFocus(boolean) -> setCancelTouchFocus
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    java.lang.String[] items -> items
    int selectedIndex -> selectedIndex
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.math.Vector2 screenCoords -> screenCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList list -> list
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    void setItems(java.lang.Object[]) -> setItems
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void setSelection(int) -> setSelection
    void setSelection(java.lang.String) -> setSelection
    int getSelectionIndex() -> getSelectionIndex
    java.lang.String getSelection() -> getSelection
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void hideList() -> hideList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listBackground -> listBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listSelection -> listSelection
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    float itemSpacing -> itemSpacing
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList:
    com.badlogic.gdx.math.Vector2 oldScreenCoords -> oldScreenCoords
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    int listSelectedIndex -> listSelectedIndex
    com.badlogic.gdx.scenes.scene2d.InputListener stageListener -> stageListener
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList this$1 -> this$1
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    void load(com.badlogic.gdx.files.FileHandle) -> load
    void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    void add(java.lang.String,java.lang.Object) -> add
    void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    boolean has(java.lang.String,java.lang.Class) -> has
    com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    java.lang.String find(java.lang.Object) -> find
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    void dispose() -> dispose
    com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.ObjectMap) -> readNamedObjects
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float sliderPos -> sliderPos
    boolean vertical -> vertical
    int draggingPointer -> draggingPointer
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void calculatePositionAndValue(float,float) -> calculatePositionAndValue
    boolean isDragging() -> isDragging
    float getValue() -> getValue
    float getVisualValue() -> getVisualValue
    void setValue(float) -> setValue
    void setRange(float,float) -> setRange
    void setStepSize(float) -> setStepSize
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinValue() -> getMinValue
    float getMaxValue() -> getMaxValue
    float getStepSize() -> getStepSize
    void setAnimateDuration(float) -> setAnimateDuration
    void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setVertical(boolean) -> setVertical
    void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void setSplitAmount(float) -> setSplitAmount
    float getSplit() -> getSplit
    void setMinSplitAmount(float) -> setMinSplitAmount
    void setMaxSplitAmount(float) -> setMaxSplitAmount
    void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.scenes.scene2d.ui.TableLayout layout -> layout
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    void invalidate() -> invalidate
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setBackground(java.lang.String) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setClip(boolean) -> setClip
    int getRow(float) -> getRow
    void clear() -> clear
    com.esotericsoftware.tablelayout.Cell add(java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add() -> add
    com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    com.esotericsoftware.tablelayout.Cell row() -> row
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    void layout() -> layout
    void reset() -> reset
    com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    java.util.List getCells() -> getCells
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget() -> debugWidget
    com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> getDebug
    com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    int getAlign() -> getAlign
    void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    void setRound(boolean) -> setRound
    void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> drawDebug
    void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableLayout -> com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> debugRenderer
    boolean round -> round
    void layout() -> layout
    void invalidateHierarchy() -> invalidateHierarchy
    void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toStageCoordinates
    void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    boolean drawDebug -> drawDebug
    void addChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addChild
    void removeChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> removeChild
    float getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinWidth
    float getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinHeight
    float getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefWidth
    float getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefHeight
    float getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxWidth
    float getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxHeight
    float getWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getWidth
    float getHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getHeight
    void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.TableLayout) -> clearDebugRectangles
    void addDebugRectangle(com.badlogic.gdx.scenes.scene2d.ui.TableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    float getHeight(java.lang.Object) -> getHeight
    float getWidth(java.lang.Object) -> getWidth
    float getMaxHeight(java.lang.Object) -> getMaxHeight
    float getMaxWidth(java.lang.Object) -> getMaxWidth
    float getPrefHeight(java.lang.Object) -> getPrefHeight
    float getPrefWidth(java.lang.Object) -> getPrefWidth
    float getMinHeight(java.lang.Object) -> getMinHeight
    float getMinWidth(java.lang.Object) -> getMinWidth
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    void addChild(java.lang.Object,java.lang.Object) -> addChild
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug type -> type
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String text -> text
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    int cursor -> cursor
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean disabled -> disabled
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    com.badlogic.gdx.math.Rectangle fieldBounds -> fieldBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    com.badlogic.gdx.math.Rectangle scissor -> scissor
    float renderOffset -> renderOffset
    float textOffset -> textOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    boolean cursorOn -> cursorOn
    float blinkTime -> blinkTime
    long lastBlink -> lastBlink
    boolean hasSelection -> hasSelection
    int selectionStart -> selectionStart
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    char passwordCharacter -> passwordCharacter
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    boolean rightAligned -> rightAligned
    int maxLength -> maxLength
    void initialize() -> initialize
    void setMaxLength(int) -> setMaxLength
    int getMaxLength() -> getMaxLength
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    void setPasswordCharacter(char) -> setPasswordCharacter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    void calculateOffsets() -> calculateOffsets
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void updateDisplayText() -> updateDisplayText
    void blink() -> blink
    void copy() -> copy
    void cut() -> cut
    void paste() -> paste
    void delete() -> delete
    void next(boolean) -> next
    com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    void setFocusTraversal(boolean) -> setFocusTraversal
    java.lang.String getMessageText() -> getMessageText
    void setMessageText(java.lang.String) -> setMessageText
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setSelection(int,int) -> setSelection
    void selectAll() -> selectAll
    void clearSelection() -> clearSelection
    void setCursorPosition(int) -> setCursorPosition
    int getCursorPosition() -> getCursorPosition
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRightAligned(boolean) -> setRightAligned
    void setPasswordMode(boolean) -> setPasswordMode
    void setBlinkTime(float) -> setBlinkTime
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    boolean isPasswordMode() -> isPasswordMode
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$1 -> com.badlogic.gdx.scenes.scene2d.ui.TextField$1:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void setCursorPosition(float) -> setCursorPosition
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    boolean isTouched() -> isTouched
    void setDeadzone(float) -> setDeadzone
    float getKnobX() -> getKnobX
    float getKnobY() -> getKnobY
    float getKnobPercentX() -> getKnobPercentX
    float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.utils.Array selectedNodes -> selectedNodes
    float ySpacing -> ySpacing
    float iconSpacing -> iconSpacing
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    boolean multiSelect -> multiSelect
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void clear() -> clear
    com.badlogic.gdx.utils.Array getNodes() -> getNodes
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    void layout() -> layout
    float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.utils.Array,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    com.badlogic.gdx.utils.Array getSelection() -> getSelection
    void setSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setSelection
    void setSelection(com.badlogic.gdx.utils.Array) -> setSelection
    void addSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> addSelection
    void clearSelection() -> clearSelection
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    void setPadding(float) -> setPadding
    void setYSpacing(float) -> setYSpacing
    void setIconSpacing(float) -> setIconSpacing
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    void expandAll() -> expandAll
    void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    void setMultiSelect(boolean) -> setMultiSelect
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    void setExpanded(boolean) -> setExpanded
    void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove() -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void removeAll() -> removeAll
    com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean isExpanded() -> isExpanded
    com.badlogic.gdx.utils.Array getChildren() -> getChildren
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void expandAll() -> expandAll
    void expandTo() -> expandTo
    boolean isSelectable() -> isSelectable
    void setSelectable(boolean) -> setSelectable
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int alignment -> alignment
    boolean reverse -> reverse
    void setAlignment(int) -> setAlignment
    void setReverse(boolean) -> setReverse
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void childrenChanged() -> childrenChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    com.badlogic.gdx.math.Vector2 dragOffset -> dragOffset
    boolean dragging -> dragging
    int titleAlignment -> titleAlignment
    boolean keepWithinStage -> keepWithinStage
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setTitleAlignment(int) -> setTitleAlignment
    void setMovable(boolean) -> setMovable
    void setModal(boolean) -> setModal
    void setKeepWithinStage(boolean) -> setKeepWithinStage
    boolean isDragging() -> isDragging
    float getPrefWidth() -> getPrefWidth
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> this$0
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.scenes.scene2d.utils.Align:
    int center -> center
    int top -> top
    int bottom -> bottom
    int left -> left
    int right -> right
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    void cancel() -> cancel
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    boolean inTapSquare(float,float) -> inTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    boolean isPressed() -> isPressed
    boolean isOver() -> isOver
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    int getTapCount() -> getTapCount
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source source -> source
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> payload
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> target
    boolean isValidTarget -> isValidTarget
    com.badlogic.gdx.utils.Array targets -> targets
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> sourceListeners
    float tapSquareSize -> tapSquareSize
    int button -> button
    float dragActorX -> dragActorX
    float dragActorY -> dragActorY
    long dragStartTime -> dragStartTime
    int dragTime -> dragTime
    void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> addSource
    void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> removeSource
    void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> addTarget
    void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> removeTarget
    void setTapSquareSize(float) -> setTapSquareSize
    void setButton(int) -> setButton
    void setDragActorPosition(float,float) -> setDragActorPosition
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setDragTime(int) -> setDragTime
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> val$source
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> this$0
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> validDragActor
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> invalidDragActor
    java.lang.Object object -> object
    void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setValidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> getValidDragActor
    void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setInvalidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> getInvalidDragActor
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> dragStop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    boolean drag(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drag
    void reset(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload) -> reset
    void drop(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean dragging -> dragging
    float deltaX -> deltaX
    float deltaY -> deltaY
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    boolean isDragging() -> isDragging
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    float getDeltaX() -> getDeltaX
    float getDeltaY() -> getDeltaY
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> scroll
    com.badlogic.gdx.utils.Timer$Task scrollUp -> scrollUp
    com.badlogic.gdx.utils.Timer$Task scrollDown -> scrollDown
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    float minSpeed -> minSpeed
    float maxSpeed -> maxSpeed
    float tickSecs -> tickSecs
    long startTime -> startTime
    long rampTime -> rampTime
    void setup(float,float,float,float) -> setup
    float getScrollPixels() -> getScrollPixels
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    boolean focused -> focused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> type
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> setType
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> keyboard
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.utils.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> patch
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> setPatch
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> getPatch
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> scissors
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Rectangle viewport -> viewport
    boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> pushScissors
    com.badlogic.gdx.math.Rectangle popScissors() -> popScissors
    void fix(com.badlogic.gdx.math.Rectangle) -> fix
    void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Rectangle getViewport() -> getViewport
    void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2) -> toWindowCoordinates
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> items
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> iterator
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean contains(java.lang.Object,boolean) -> contains
    int indexOf(java.lang.Object,boolean) -> indexOf
    int lastIndexOf(java.lang.Object,boolean) -> lastIndexOf
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object first() -> first
    void clear() -> clear
    void shrink() -> shrink
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    java.lang.Object[] resize(int) -> resize
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    java.util.Iterator iterator() -> iterator
    void truncate(int) -> truncate
    java.lang.Object random() -> random
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> array
    int index -> index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.ArrayMap$Entries entries -> entries
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter -> valuesIter
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter -> keysIter
    void put(java.lang.Object,java.lang.Object) -> put
    void put(java.lang.Object,java.lang.Object,int) -> put
    void addAll(com.badlogic.gdx.utils.ArrayMap) -> addAll
    void addAll(com.badlogic.gdx.utils.ArrayMap,int,int) -> addAll
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getKey(java.lang.Object,boolean) -> getKey
    java.lang.Object getKeyAt(int) -> getKeyAt
    java.lang.Object getValueAt(int) -> getValueAt
    java.lang.Object firstKey() -> firstKey
    java.lang.Object firstValue() -> firstValue
    void setKey(int,java.lang.Object) -> setKey
    void setValue(int,java.lang.Object) -> setValue
    void insert(int,java.lang.Object,java.lang.Object) -> insert
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object,boolean) -> indexOfValue
    java.lang.Object removeKey(java.lang.Object) -> removeKey
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    void removeIndex(int) -> removeIndex
    java.lang.Object peekKey() -> peekKey
    java.lang.Object peekValue() -> peekValue
    void clear() -> clear
    void shrink() -> shrink
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ArrayMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ArrayMap$Values values() -> values
    com.badlogic.gdx.utils.ArrayMap$Keys keys() -> keys
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.ArrayMap$Entries:
    com.badlogic.gdx.utils.ArrayMap map -> map
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    int index -> index
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.ArrayMap$Keys:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.ArrayMap$Values:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> writeIndex
    java.util.concurrent.atomic.AtomicInteger readIndex -> readIndex
    java.util.concurrent.atomic.AtomicReferenceArray queue -> queue
    int next(int) -> next
    boolean put(java.lang.Object) -> put
    java.lang.Object poll() -> poll
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    java.lang.String encodeString(java.lang.String) -> encodeString
    java.lang.String encodeLines(byte[]) -> encodeLines
    java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int) -> encode
    char[] encode(byte[],int,int) -> encode
    java.lang.String decodeString(java.lang.String) -> decodeString
    byte[] decodeLines(java.lang.String) -> decodeLines
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> size
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> nodes
    boolean isMaxHeap -> isMaxHeap
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node peek() -> peek
    com.badlogic.gdx.utils.BinaryHeap$Node pop() -> pop
    void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> setValue
    void up(int) -> up
    void down(int) -> down
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> value
    int index -> index
    float getValue() -> getValue
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(boolean) -> add
    void addAll(com.badlogic.gdx.utils.BooleanArray) -> addAll
    void addAll(com.badlogic.gdx.utils.BooleanArray,int,int) -> addAll
    void addAll(boolean[]) -> addAll
    void addAll(boolean[],int,int) -> addAll
    boolean get(int) -> get
    void set(int,boolean) -> set
    void insert(int,boolean) -> insert
    void swap(int,int) -> swap
    boolean removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> removeAll
    boolean pop() -> pop
    boolean peek() -> peek
    boolean first() -> first
    void clear() -> clear
    void shrink() -> shrink
    boolean[] ensureCapacity(int) -> ensureCapacity
    boolean[] resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    boolean random() -> random
    boolean[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> unsafeBuffers
    int allocatedUnsafe -> allocatedUnsafe
    void copy(float[],java.nio.Buffer,int,int) -> copy
    void copy(byte[],int,java.nio.Buffer,int) -> copy
    void copy(short[],int,java.nio.Buffer,int) -> copy
    void copy(char[],int,java.nio.Buffer,int) -> copy
    void copy(int[],int,java.nio.Buffer,int) -> copy
    void copy(long[],int,java.nio.Buffer,int) -> copy
    void copy(float[],int,java.nio.Buffer,int) -> copy
    void copy(double[],int,java.nio.Buffer,int) -> copy
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> copy
    int positionInBytes(java.nio.Buffer) -> positionInBytes
    int bytesToElements(java.nio.Buffer,int) -> bytesToElements
    int elementsToBytes(java.nio.Buffer,int) -> elementsToBytes
    java.nio.FloatBuffer newFloatBuffer(int) -> newFloatBuffer
    java.nio.DoubleBuffer newDoubleBuffer(int) -> newDoubleBuffer
    java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
    java.nio.ShortBuffer newShortBuffer(int) -> newShortBuffer
    java.nio.CharBuffer newCharBuffer(int) -> newCharBuffer
    java.nio.IntBuffer newIntBuffer(int) -> newIntBuffer
    java.nio.LongBuffer newLongBuffer(int) -> newLongBuffer
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> disposeUnsafeByteBuffer
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> newUnsafeByteBuffer
    long getUnsafeBufferAddress(java.nio.Buffer) -> getUnsafeBufferAddress
    java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> newUnsafeByteBuffer
    int getAllocatedBytesUnsafe() -> getAllocatedBytesUnsafe
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(char) -> add
    void addAll(com.badlogic.gdx.utils.CharArray) -> addAll
    void addAll(com.badlogic.gdx.utils.CharArray,int,int) -> addAll
    void addAll(char[]) -> addAll
    void addAll(char[],int,int) -> addAll
    char get(int) -> get
    void set(int,char) -> set
    void insert(int,char) -> insert
    void swap(int,int) -> swap
    boolean contains(char) -> contains
    int indexOf(char) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(char) -> removeValue
    char removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.CharArray) -> removeAll
    char pop() -> pop
    char peek() -> peek
    char first() -> first
    void clear() -> clear
    void shrink() -> shrink
    char[] ensureCapacity(int) -> ensureCapacity
    char[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    char random() -> random
    char[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],int,int) -> doSort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void binarySort(java.lang.Object[],int,int,int) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopLeft
    int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.DataInput:
    char[] chars -> chars
    int readInt(boolean) -> readInt
    java.lang.String readString() -> readString
    void readUtf8_slow(int,int,int) -> readUtf8_slow
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.DataOutput:
    int writeInt(int,boolean) -> writeInt
    void writeString(java.lang.String) -> writeString
    void writeString_slow(java.lang.String,int,int) -> writeString_slow
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.DelayedRemovalArray:
    boolean iterating -> iterating
    com.badlogic.gdx.utils.IntArray remove -> remove
    void begin() -> begin
    void end() -> end
    void remove(int) -> remove
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(float) -> add
    void addAll(com.badlogic.gdx.utils.FloatArray) -> addAll
    void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> addAll
    void addAll(float[]) -> addAll
    void addAll(float[],int,int) -> addAll
    float get(int) -> get
    void set(int,float) -> set
    void insert(int,float) -> insert
    void swap(int,int) -> swap
    boolean contains(float) -> contains
    int indexOf(float) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(float) -> removeValue
    float removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> removeAll
    float pop() -> pop
    float peek() -> peek
    float first() -> first
    void clear() -> clear
    void shrink() -> shrink
    float[] ensureCapacity(int) -> ensureCapacity
    float[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    float random() -> random
    float[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.GdxBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> disableNativesLoading
    boolean nativesLoaded -> nativesLoaded
    void load() -> load
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator -> com.badlogic.gdx.utils.GwtModuleGenerator:
    void gatherJavaFiles(com.badlogic.gdx.files.FileHandle,java.util.Set,java.util.Map,boolean) -> gatherJavaFiles
    void main(java.lang.String[]) -> main
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IdentityMap$Entries entries -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IdentityMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values() -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys() -> keys
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> entry
    com.badlogic.gdx.utils.IdentityMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IdentityMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    int get(int) -> get
    void set(int,int) -> set
    void insert(int,int) -> insert
    void swap(int,int) -> swap
    boolean contains(int) -> contains
    int indexOf(int) -> indexOf
    int lastIndexOf(int) -> lastIndexOf
    boolean removeValue(int) -> removeValue
    int removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.IntArray) -> removeAll
    int pop() -> pop
    int peek() -> peek
    int first() -> first
    void clear() -> clear
    void shrink() -> shrink
    int[] ensureCapacity(int) -> ensureCapacity
    int[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    int random() -> random
    int[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.IntFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntFloatMap$Entries entries -> entries
    com.badlogic.gdx.utils.IntFloatMap$Values values -> values
    com.badlogic.gdx.utils.IntFloatMap$Keys keys -> keys
    void put(int,float) -> put
    void putAll(com.badlogic.gdx.utils.IntFloatMap) -> putAll
    void putResize(int,float) -> putResize
    void push(int,float,int,int,int,int,int,int) -> push
    void putStash(int,float) -> putStash
    float get(int,float) -> get
    float getStash(int,float) -> getStash
    float getAndIncrement(int,float,float) -> getAndIncrement
    float getAndIncrementStash(int,float,float) -> getAndIncrementStash
    float remove(int,float) -> remove
    float removeStash(int,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsValue(float,float) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(float,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntFloatMap$Values values() -> values
    com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.IntFloatMap$Entries:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.IntFloatMap$Entry:
    int key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.IntFloatMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.IntFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.IntIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    int zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntIntMap$Entries entries -> entries
    com.badlogic.gdx.utils.IntIntMap$Values values -> values
    com.badlogic.gdx.utils.IntIntMap$Keys keys -> keys
    void put(int,int) -> put
    void putAll(com.badlogic.gdx.utils.IntIntMap) -> putAll
    void putResize(int,int) -> putResize
    void push(int,int,int,int,int,int,int,int) -> push
    void putStash(int,int) -> putStash
    int get(int,int) -> get
    int getStash(int,int) -> getStash
    int getAndIncrement(int,int,int) -> getAndIncrement
    int getAndIncrementStash(int,int,int) -> getAndIncrementStash
    int remove(int,int) -> remove
    int removeStash(int,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(int,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntIntMap$Values values() -> values
    com.badlogic.gdx.utils.IntIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.IntIntMap$Entries:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.IntIntMap$Entry:
    int key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.IntIntMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.IntIntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.IntIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntMap$Entries entries -> entries
    com.badlogic.gdx.utils.IntMap$Values values -> values
    com.badlogic.gdx.utils.IntMap$Keys keys -> keys
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.IntMap) -> putAll
    void putResize(int,java.lang.Object) -> putResize
    void push(int,java.lang.Object,int,int,int,int,int,int) -> push
    void putStash(int,java.lang.Object) -> putStash
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object getStash(int,java.lang.Object) -> getStash
    java.lang.Object remove(int) -> remove
    java.lang.Object removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(java.lang.Object,boolean,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntMap$Values values() -> values
    com.badlogic.gdx.utils.IntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    boolean ignoreUnknownFields -> ignoreUnknownFields
    void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.String getTag(java.lang.Class) -> getTag
    void setTypeName(java.lang.String) -> setTypeName
    void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    void setUsePrototypes(boolean) -> setUsePrototypes
    void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> cacheFields
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    void writeFields(java.lang.Object) -> writeFields
    java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    void writeField(java.lang.Object,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    void writeValue(java.lang.String,java.lang.Object) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeObjectStart(java.lang.String) -> writeObjectStart
    void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectStart() -> writeObjectStart
    void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectEnd() -> writeObjectEnd
    void writeArrayStart(java.lang.String) -> writeArrayStart
    void writeArrayStart() -> writeArrayStart
    void writeArrayEnd() -> writeArrayEnd
    void writeType(java.lang.Class) -> writeType
    java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    void readField(java.lang.Object,java.lang.String,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    void readFields(java.lang.Object,java.lang.Object) -> readFields
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    java.lang.String convertToString(java.lang.Object) -> convertToString
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    void prettyPrint(java.lang.Object,com.badlogic.gdx.utils.StringBuilder,int,int) -> prettyPrint
    boolean isFlat(com.badlogic.gdx.utils.ObjectMap) -> isFlat
    boolean isFlat(com.badlogic.gdx.utils.Array) -> isFlat
    void indent(int,com.badlogic.gdx.utils.StringBuilder) -> indent
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    java.lang.reflect.Field field -> field
    java.lang.Class elementType -> elementType
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.OrderedMap) -> read
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> _json_actions
    short[] _json_key_offsets -> _json_key_offsets
    char[] _json_trans_keys -> _json_trans_keys
    byte[] _json_single_lengths -> _json_single_lengths
    byte[] _json_range_lengths -> _json_range_lengths
    short[] _json_index_offsets -> _json_index_offsets
    byte[] _json_trans_targs -> _json_trans_targs
    byte[] _json_trans_actions -> _json_trans_actions
    byte[] _json_eof_actions -> _json_eof_actions
    int json_start -> json_start
    int json_first_final -> json_first_final
    int json_error -> json_error
    int json_en_object -> json_en_object
    int json_en_array -> json_en_array
    int json_en_main -> json_en_main
    com.badlogic.gdx.utils.Array elements -> elements
    java.lang.Object root -> root
    java.lang.Object current -> current
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.io.Reader) -> parse
    java.lang.Object parse(java.io.InputStream) -> parse
    java.lang.Object parse(com.badlogic.gdx.files.FileHandle) -> parse
    java.lang.Object parse(char[],int,int) -> parse
    byte[] init__json_actions_0() -> init__json_actions_0
    short[] init__json_key_offsets_0() -> init__json_key_offsets_0
    char[] init__json_trans_keys_0() -> init__json_trans_keys_0
    byte[] init__json_single_lengths_0() -> init__json_single_lengths_0
    byte[] init__json_range_lengths_0() -> init__json_range_lengths_0
    short[] init__json_index_offsets_0() -> init__json_index_offsets_0
    byte[] init__json_trans_targs_0() -> init__json_trans_targs_0
    byte[] init__json_trans_actions_0() -> init__json_trans_actions_0
    byte[] init__json_eof_actions_0() -> init__json_eof_actions_0
    void set(java.lang.String,java.lang.Object) -> set
    void startObject(java.lang.String) -> startObject
    void startArray(java.lang.String) -> startArray
    void pop() -> pop
    void string(java.lang.String,java.lang.String) -> string
    void number(java.lang.String,float) -> number
    void bool(java.lang.String,boolean) -> bool
    java.lang.String unescape(java.lang.String) -> unescape
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.JsonWriter object() -> object
    com.badlogic.gdx.utils.JsonWriter array() -> array
    com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> set
    com.badlogic.gdx.utils.JsonWriter pop() -> pop
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.JsonWriter$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> array
    boolean needsComma -> needsComma
    com.badlogic.gdx.utils.JsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> json
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> javascript
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> minimal
    java.util.regex.Pattern javascriptPattern -> javascriptPattern
    java.util.regex.Pattern minimalValuePattern -> minimalValuePattern
    java.util.regex.Pattern minimalNamePattern -> minimalNamePattern
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    java.lang.String quoteValue(java.lang.Object) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> din
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> NONE
    int ERROR -> ERROR
    int INFO -> INFO
    int DEBUG -> DEBUG
    java.lang.String tag -> tag
    int level -> level
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Exception) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Exception) -> info
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(long) -> add
    void addAll(com.badlogic.gdx.utils.LongArray) -> addAll
    void addAll(com.badlogic.gdx.utils.LongArray,int,int) -> addAll
    void addAll(long[]) -> addAll
    void addAll(long[],int,int) -> addAll
    long get(int) -> get
    void set(int,long) -> set
    void insert(int,long) -> insert
    void swap(int,int) -> swap
    boolean contains(long) -> contains
    int indexOf(long) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(long) -> removeValue
    long removeIndex(int) -> removeIndex
    boolean removeAll(com.badlogic.gdx.utils.LongArray) -> removeAll
    long pop() -> pop
    long peek() -> peek
    long first() -> first
    void clear() -> clear
    void shrink() -> shrink
    long[] ensureCapacity(int) -> ensureCapacity
    long[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    long random() -> random
    long[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries -> entries
    com.badlogic.gdx.utils.LongMap$Values values -> values
    com.badlogic.gdx.utils.LongMap$Keys keys -> keys
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    java.lang.Object getStash(long,java.lang.Object) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    long findKey(java.lang.Object,boolean,long) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    com.badlogic.gdx.utils.LongArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    int floatToIntBits(float) -> floatToIntBits
    int floatToRawIntBits(float) -> floatToRawIntBits
    int floatToIntColor(float) -> floatToIntColor
    float intToFloatColor(int) -> intToFloatColor
    float intBitsToFloat(int) -> intBitsToFloat
    long doubleToLongBits(double) -> doubleToLongBits
    double longBitsToDouble(long) -> longBitsToDouble
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys -> keys
    void put(java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> putAll
    void putResize(java.lang.Object,int) -> putResize
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,int) -> putStash
    int get(java.lang.Object,int) -> get
    int getStash(java.lang.Object,int) -> getStash
    int getAndIncrement(java.lang.Object,int,int) -> getAndIncrement
    int getAndIncrementStash(java.lang.Object,int,int) -> getAndIncrementStash
    int remove(java.lang.Object,int) -> remove
    int removeStash(java.lang.Object,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectMap$Entries entries -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> put_internal
    void putAll(com.badlogic.gdx.utils.ObjectMap) -> putAll
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object) -> getStash
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void advance() -> advance
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedKeys() -> orderedKeys
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.OrderedMap$1:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.OrderedMap$2:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.OrderedMap$3:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> runnable
    boolean paused -> paused
    boolean exit -> exit
    void run() -> run
    void onPause() -> onPause
    void onResume() -> onResume
    boolean isPaused() -> isPaused
    void stopThread() -> stopThread
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.PerformanceCounter:
    float nano2seconds -> nano2seconds
    long startTime -> startTime
    long lastTick -> lastTick
    com.badlogic.gdx.math.FloatCounter time -> time
    com.badlogic.gdx.math.FloatCounter load -> load
    java.lang.String name -> name
    float current -> current
    boolean valid -> valid
    void tick() -> tick
    void tick(float) -> tick
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.PerformanceCounters:
    float nano2seconds -> nano2seconds
    long lastTick -> lastTick
    com.badlogic.gdx.utils.Array counters -> counters
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> add
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> add
    void tick() -> tick
    void tick(float) -> tick
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.Pool$Poolable:
    void reset() -> reset
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> head
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> tail
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> iter
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> curr
    int size -> size
    com.badlogic.gdx.utils.Pool pool -> pool
    void add(java.lang.Object) -> add
    void iter() -> iter
    java.lang.Object next() -> next
    void remove() -> remove
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> this$0
    com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> payload
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> next
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> prev
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.Pools:
    com.badlogic.gdx.utils.ObjectMap typePools -> typePools
    com.badlogic.gdx.utils.Pool get(java.lang.Class) -> get
    java.lang.Object obtain(java.lang.Class) -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.ReflectionPool:
    java.lang.Class type -> type
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> fit
    com.badlogic.gdx.utils.Scaling fill -> fill
    com.badlogic.gdx.utils.Scaling fillX -> fillX
    com.badlogic.gdx.utils.Scaling fillY -> fillY
    com.badlogic.gdx.utils.Scaling stretch -> stretch
    com.badlogic.gdx.utils.Scaling stretchX -> stretchX
    com.badlogic.gdx.utils.Scaling stretchY -> stretchY
    com.badlogic.gdx.utils.Scaling none -> none
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.utils.Scaling[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.Scaling[] values() -> values
    com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> apply
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.Scaling$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> $SwitchMap$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> getFrameBufferTexture
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int) -> getFrameBufferTexture
    byte[] getFrameBufferPixels(boolean) -> getFrameBufferPixels
    byte[] getFrameBufferPixels(int,int,int,int,boolean) -> getFrameBufferPixels
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    boolean causedBy(java.lang.Class) -> causedBy
    boolean causedBy(java.lang.Throwable,java.lang.Class) -> causedBy
    java.lang.String getMessage() -> getMessage
    void addTrace(java.lang.String) -> addTrace
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean isMac -> isMac
    boolean isAndroid -> isAndroid
    boolean is64Bit -> is64Bit
    java.util.HashSet loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    java.lang.String crc(java.io.InputStream) -> crc
    java.lang.String mapLibraryName(java.lang.String) -> mapLibraryName
    void load(java.lang.String) -> load
    java.io.InputStream readFile(java.lang.String) -> readFile
    java.io.File extractFile(java.lang.String,java.lang.String) -> extractFile
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.SnapshotArray:
    java.lang.Object[] snapshot -> snapshot
    java.lang.Object[] recycled -> recycled
    int snapshots -> snapshots
    java.lang.Object[] begin() -> begin
    void end() -> end
    void modified() -> modified
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> instance
    com.badlogic.gdx.utils.TimSort timSort -> timSort
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> comparableTimSort
    void sort(com.badlogic.gdx.utils.Array) -> sort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> sort
    com.badlogic.gdx.utils.Sort instance() -> instance
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> nodePool
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> iterator
    int size -> size
    com.badlogic.gdx.utils.SortedIntList$Node first -> first
    java.lang.Object insert(int,java.lang.Object) -> insert
    java.lang.Object get(int) -> get
    void clear() -> clear
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> position
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> previousPosition
    com.badlogic.gdx.utils.SortedIntList this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.SortedIntList$Node next() -> next
    void remove() -> remove
    com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> p
    com.badlogic.gdx.utils.SortedIntList$Node n -> n
    java.lang.Object value -> value
    int index -> index
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    com.badlogic.gdx.utils.SortedIntList$Node newObject() -> newObject
    com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.StringBuilder:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    char[] chars -> chars
    int length -> length
    char[] digits -> digits
    char[] getValue() -> getValue
    void enlargeBuffer(int) -> enlargeBuffer
    void appendNull() -> appendNull
    void append0(char[]) -> append0
    void append0(char[],int,int) -> append0
    void append0(char) -> append0
    void append0(java.lang.String) -> append0
    void append0(java.lang.CharSequence,int,int) -> append0
    int capacity() -> capacity
    char charAt(int) -> charAt
    void delete0(int,int) -> delete0
    void deleteCharAt0(int) -> deleteCharAt0
    void ensureCapacity(int) -> ensureCapacity
    void getChars(int,int,char[],int) -> getChars
    void insert0(int,char[]) -> insert0
    void insert0(int,char[],int,int) -> insert0
    void insert0(int,char) -> insert0
    void insert0(int,java.lang.String) -> insert0
    void insert0(int,java.lang.CharSequence,int,int) -> insert0
    int length() -> length
    void move(int,int) -> move
    void replace0(int,int,java.lang.String) -> replace0
    void reverse0() -> reverse0
    void setCharAt(int,char) -> setCharAt
    void setLength(int) -> setLength
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    void trimToSize() -> trimToSize
    int codePointAt(int) -> codePointAt
    int codePointBefore(int) -> codePointBefore
    int codePointCount(int,int) -> codePointCount
    int offsetByCodePoints(int,int) -> offsetByCodePoints
    com.badlogic.gdx.utils.StringBuilder append(boolean) -> append
    com.badlogic.gdx.utils.StringBuilder append(char) -> append
    com.badlogic.gdx.utils.StringBuilder append(int) -> append
    com.badlogic.gdx.utils.StringBuilder append(long) -> append
    com.badlogic.gdx.utils.StringBuilder append(float) -> append
    com.badlogic.gdx.utils.StringBuilder append(double) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[]) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> appendCodePoint
    com.badlogic.gdx.utils.StringBuilder delete(int,int) -> delete
    com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> deleteCharAt
    com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,long) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,float) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,double) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> replace
    com.badlogic.gdx.utils.StringBuilder reverse() -> reverse
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    java.util.Comparator c -> c
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int tmpCount -> tmpCount
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> doSort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopLeft
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.TimeUtils:
    long nanoTime() -> nanoTime
    long millis() -> millis
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.Timer:
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.utils.Timer instance -> instance
    int CANCELLED -> CANCELLED
    int FOREVER -> FOREVER
    com.badlogic.gdx.utils.Array tasks -> tasks
    void postTask(com.badlogic.gdx.utils.Timer$Task) -> postTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> scheduleTask
    void stop() -> stop
    void start() -> start
    void clear() -> clear
    float update(float) -> update
    void wake() -> wake
    void post(com.badlogic.gdx.utils.Timer$Task) -> post
    void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> schedule
com.badlogic.gdx.utils.Timer$1 -> com.badlogic.gdx.utils.Timer$1:
    void run() -> run
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.Timer$Task:
    float executeTime -> executeTime
    float intervalSeconds -> intervalSeconds
    int repeatCount -> repeatCount
    void run() -> run
    void cancel() -> cancel
    boolean isScheduled() -> isScheduled
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.utils.XmlReader$Element current -> current
    com.badlogic.gdx.utils.StringBuilder textBuffer -> textBuffer
    byte[] _xml_actions -> _xml_actions
    byte[] _xml_key_offsets -> _xml_key_offsets
    char[] _xml_trans_keys -> _xml_trans_keys
    byte[] _xml_single_lengths -> _xml_single_lengths
    byte[] _xml_range_lengths -> _xml_range_lengths
    short[] _xml_index_offsets -> _xml_index_offsets
    byte[] _xml_indicies -> _xml_indicies
    byte[] _xml_trans_targs -> _xml_trans_targs
    byte[] _xml_trans_actions -> _xml_trans_actions
    int xml_start -> xml_start
    int xml_first_final -> xml_first_final
    int xml_error -> xml_error
    int xml_en_elementBody -> xml_en_elementBody
    int xml_en_main -> xml_en_main
    com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> parse
    byte[] init__xml_actions_0() -> init__xml_actions_0
    byte[] init__xml_key_offsets_0() -> init__xml_key_offsets_0
    char[] init__xml_trans_keys_0() -> init__xml_trans_keys_0
    byte[] init__xml_single_lengths_0() -> init__xml_single_lengths_0
    byte[] init__xml_range_lengths_0() -> init__xml_range_lengths_0
    short[] init__xml_index_offsets_0() -> init__xml_index_offsets_0
    byte[] init__xml_indicies_0() -> init__xml_indicies_0
    byte[] init__xml_trans_targs_0() -> init__xml_trans_targs_0
    byte[] init__xml_trans_actions_0() -> init__xml_trans_actions_0
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    java.lang.String entity(java.lang.String) -> entity
    void text(java.lang.String) -> text
    void close() -> close
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> name
    com.badlogic.gdx.utils.ObjectMap attributes -> attributes
    com.badlogic.gdx.utils.Array children -> children
    java.lang.String text -> text
    com.badlogic.gdx.utils.XmlReader$Element parent -> parent
    java.lang.String getName() -> getName
    com.badlogic.gdx.utils.ObjectMap getAttributes() -> getAttributes
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(java.lang.String,java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    int getChildCount() -> getChildCount
    com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> getChild
    void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> addChild
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void removeChild(int) -> removeChild
    void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> removeChild
    void remove() -> remove
    com.badlogic.gdx.utils.XmlReader$Element getParent() -> getParent
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> getChildByName
    com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> getChildByNameRecursive
    com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> getChildrenByName
    com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> getChildrenByNameRecursively
    void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> getChildrenByNameRecursively
    float getFloatAttribute(java.lang.String) -> getFloatAttribute
    float getFloatAttribute(java.lang.String,float) -> getFloatAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(java.lang.String,java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    java.lang.String currentElement -> currentElement
    boolean indentNextClose -> indentNextClose
    int indent -> indent
    void indent() -> indent
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> element
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> element
    boolean startElementContent() -> startElementContent
    com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> attribute
    com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> text
    com.badlogic.gdx.utils.XmlWriter pop() -> pop
    void close() -> close
    void write(char[],int,int) -> write
    void flush() -> flush
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.compression.CRC:
    int[] Table -> Table
    int _value -> _value
    void Init() -> Init
    void Update(byte[],int,int) -> Update
    void Update(byte[]) -> Update
    void UpdateByte(int) -> UpdateByte
    int GetDigest() -> GetDigest
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.compression.ICodeProgress:
    void SetProgress(long,long) -> SetProgress
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.compression.Lzma:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    int kEncode -> kEncode
    int kDecode -> kDecode
    int kBenchmak -> kBenchmak
    int Command -> Command
    int NumBenchmarkPasses -> NumBenchmarkPasses
    int DictionarySize -> DictionarySize
    boolean DictionarySizeIsDefined -> DictionarySizeIsDefined
    int Lc -> Lc
    int Lp -> Lp
    int Pb -> Pb
    int Fb -> Fb
    boolean FbIsDefined -> FbIsDefined
    boolean Eos -> Eos
    int Algorithm -> Algorithm
    int MatchFinder -> MatchFinder
    java.lang.String InFile -> InFile
    java.lang.String OutFile -> OutFile
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos -> _cyclicBufferPos
    int _cyclicBufferSize -> _cyclicBufferSize
    int _matchMaxLen -> _matchMaxLen
    int[] _son -> _son
    int[] _hash -> _hash
    int _cutValue -> _cutValue
    int _hashMask -> _hashMask
    int _hashSizeSum -> _hashSizeSum
    boolean HASH_ARRAY -> HASH_ARRAY
    int kHash2Size -> kHash2Size
    int kHash3Size -> kHash3Size
    int kBT2HashSize -> kBT2HashSize
    int kStartMaxLen -> kStartMaxLen
    int kHash3Offset -> kHash3Offset
    int kEmptyHashValue -> kEmptyHashValue
    int kMaxValForNormalize -> kMaxValForNormalize
    int kNumHashDirectBytes -> kNumHashDirectBytes
    int kMinMatchCheck -> kMinMatchCheck
    int kFixHashSize -> kFixHashSize
    int[] CrcTable -> CrcTable
    void SetType(int) -> SetType
    void Init() -> Init
    void MovePos() -> MovePos
    boolean Create(int,int,int,int) -> Create
    int GetMatches(int[]) -> GetMatches
    void Skip(int) -> Skip
    void NormalizeLinks(int[],int,int) -> NormalizeLinks
    void Normalize() -> Normalize
    void SetCutValue(int) -> SetCutValue
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.compression.lz.InWindow:
    byte[] _bufferBase -> _bufferBase
    java.io.InputStream _stream -> _stream
    int _posLimit -> _posLimit
    boolean _streamEndWasReached -> _streamEndWasReached
    int _pointerToLastSafePosition -> _pointerToLastSafePosition
    int _bufferOffset -> _bufferOffset
    int _blockSize -> _blockSize
    int _pos -> _pos
    int _keepSizeBefore -> _keepSizeBefore
    int _keepSizeAfter -> _keepSizeAfter
    int _streamPos -> _streamPos
    void MoveBlock() -> MoveBlock
    void ReadBlock() -> ReadBlock
    void Free() -> Free
    void Create(int,int,int) -> Create
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void MovePos() -> MovePos
    byte GetIndexByte(int) -> GetIndexByte
    int GetMatchLen(int,int,int) -> GetMatchLen
    int GetNumAvailableBytes() -> GetNumAvailableBytes
    void ReduceOffsets(int) -> ReduceOffsets
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer -> _buffer
    int _pos -> _pos
    int _windowSize -> _windowSize
    int _streamPos -> _streamPos
    java.io.OutputStream _stream -> _stream
    void Create(int) -> Create
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init(boolean) -> Init
    void Flush() -> Flush
    void CopyBlock(int,int) -> CopyBlock
    void PutByte(byte) -> PutByte
    byte GetByte(int) -> GetByte
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.compression.lzma.Base:
    int kNumRepDistances -> kNumRepDistances
    int kNumStates -> kNumStates
    int kNumPosSlotBits -> kNumPosSlotBits
    int kDicLogSizeMin -> kDicLogSizeMin
    int kNumLenToPosStatesBits -> kNumLenToPosStatesBits
    int kNumLenToPosStates -> kNumLenToPosStates
    int kMatchMinLen -> kMatchMinLen
    int kNumAlignBits -> kNumAlignBits
    int kAlignTableSize -> kAlignTableSize
    int kAlignMask -> kAlignMask
    int kStartPosModelIndex -> kStartPosModelIndex
    int kEndPosModelIndex -> kEndPosModelIndex
    int kNumPosModels -> kNumPosModels
    int kNumFullDistances -> kNumFullDistances
    int kNumLitPosStatesBitsEncodingMax -> kNumLitPosStatesBitsEncodingMax
    int kNumLitContextBitsMax -> kNumLitContextBitsMax
    int kNumPosStatesBitsMax -> kNumPosStatesBitsMax
    int kNumPosStatesMax -> kNumPosStatesMax
    int kNumPosStatesBitsEncodingMax -> kNumPosStatesBitsEncodingMax
    int kNumPosStatesEncodingMax -> kNumPosStatesEncodingMax
    int kNumLowLenBits -> kNumLowLenBits
    int kNumMidLenBits -> kNumMidLenBits
    int kNumHighLenBits -> kNumHighLenBits
    int kNumLowLenSymbols -> kNumLowLenSymbols
    int kNumMidLenSymbols -> kNumMidLenSymbols
    int kNumLenSymbols -> kNumLenSymbols
    int kMatchMaxLen -> kMatchMaxLen
    int StateInit() -> StateInit
    int StateUpdateChar(int) -> StateUpdateChar
    int StateUpdateMatch(int) -> StateUpdateMatch
    int StateUpdateRep(int) -> StateUpdateRep
    int StateUpdateShortRep(int) -> StateUpdateShortRep
    boolean StateIsCharState(int) -> StateIsCharState
    int GetLenToPosState(int) -> GetLenToPosState
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.compression.lzma.Decoder:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> m_OutWindow
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> m_RangeDecoder
    short[] m_IsMatchDecoders -> m_IsMatchDecoders
    short[] m_IsRepDecoders -> m_IsRepDecoders
    short[] m_IsRepG0Decoders -> m_IsRepG0Decoders
    short[] m_IsRepG1Decoders -> m_IsRepG1Decoders
    short[] m_IsRepG2Decoders -> m_IsRepG2Decoders
    short[] m_IsRep0LongDecoders -> m_IsRep0LongDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> m_PosSlotDecoder
    short[] m_PosDecoders -> m_PosDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> m_PosAlignDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> m_LenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m_RepLenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> m_LiteralDecoder
    int m_DictionarySize -> m_DictionarySize
    int m_DictionarySizeCheck -> m_DictionarySizeCheck
    int m_PosStateMask -> m_PosStateMask
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void Init() -> Init
    boolean Code(java.io.InputStream,java.io.OutputStream,long) -> Code
    boolean SetDecoderProperties(byte[]) -> SetDecoderProperties
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    short[] m_Choice -> m_Choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> m_LowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> m_MidCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> m_HighCoder
    int m_NumPosStates -> m_NumPosStates
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int) -> Create
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> Decode
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> GetDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders -> m_Decoders
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> this$1
    void Init() -> Init
    byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> DecodeNormal
    byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> DecodeWithMatchByte
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.compression.lzma.Encoder:
    int EMatchFinderTypeBT2 -> EMatchFinderTypeBT2
    int EMatchFinderTypeBT4 -> EMatchFinderTypeBT4
    int kIfinityPrice -> kIfinityPrice
    byte[] g_FastPos -> g_FastPos
    int _state -> _state
    byte _previousByte -> _previousByte
    int[] _repDistances -> _repDistances
    int kDefaultDictionaryLogSize -> kDefaultDictionaryLogSize
    int kNumFastBytesDefault -> kNumFastBytesDefault
    int kNumLenSpecSymbols -> kNumLenSpecSymbols
    int kNumOpts -> kNumOpts
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> _optimum
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> _matchFinder
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> _rangeEncoder
    short[] _isMatch -> _isMatch
    short[] _isRep -> _isRep
    short[] _isRepG0 -> _isRepG0
    short[] _isRepG1 -> _isRepG1
    short[] _isRepG2 -> _isRepG2
    short[] _isRep0Long -> _isRep0Long
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> _posSlotEncoder
    short[] _posEncoders -> _posEncoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> _posAlignEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> _lenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> _repMatchLenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> _literalEncoder
    int[] _matchDistances -> _matchDistances
    int _numFastBytes -> _numFastBytes
    int _longestMatchLength -> _longestMatchLength
    int _numDistancePairs -> _numDistancePairs
    int _additionalOffset -> _additionalOffset
    int _optimumEndIndex -> _optimumEndIndex
    int _optimumCurrentIndex -> _optimumCurrentIndex
    boolean _longestMatchWasFound -> _longestMatchWasFound
    int[] _posSlotPrices -> _posSlotPrices
    int[] _distancesPrices -> _distancesPrices
    int[] _alignPrices -> _alignPrices
    int _alignPriceCount -> _alignPriceCount
    int _distTableSize -> _distTableSize
    int _posStateBits -> _posStateBits
    int _posStateMask -> _posStateMask
    int _numLiteralPosStateBits -> _numLiteralPosStateBits
    int _numLiteralContextBits -> _numLiteralContextBits
    int _dictionarySize -> _dictionarySize
    int _dictionarySizePrev -> _dictionarySizePrev
    int _numFastBytesPrev -> _numFastBytesPrev
    long nowPos64 -> nowPos64
    boolean _finished -> _finished
    java.io.InputStream _inStream -> _inStream
    int _matchFinderType -> _matchFinderType
    boolean _writeEndMark -> _writeEndMark
    boolean _needReleaseMFStream -> _needReleaseMFStream
    int[] reps -> reps
    int[] repLens -> repLens
    int backRes -> backRes
    long[] processedInSize -> processedInSize
    long[] processedOutSize -> processedOutSize
    boolean[] finished -> finished
    int kPropSize -> kPropSize
    byte[] properties -> properties
    int[] tempPrices -> tempPrices
    int _matchPriceCount -> _matchPriceCount
    int GetPosSlot(int) -> GetPosSlot
    int GetPosSlot2(int) -> GetPosSlot2
    void BaseInit() -> BaseInit
    void Create() -> Create
    void SetWriteEndMarkerMode(boolean) -> SetWriteEndMarkerMode
    void Init() -> Init
    int ReadMatchDistances() -> ReadMatchDistances
    void MovePos(int) -> MovePos
    int GetRepLen1Price(int,int) -> GetRepLen1Price
    int GetPureRepPrice(int,int,int) -> GetPureRepPrice
    int GetRepPrice(int,int,int,int) -> GetRepPrice
    int GetPosLenPrice(int,int,int) -> GetPosLenPrice
    int Backward(int) -> Backward
    int GetOptimum(int) -> GetOptimum
    boolean ChangePair(int,int) -> ChangePair
    void WriteEndMarker(int) -> WriteEndMarker
    void Flush(int) -> Flush
    void CodeOneBlock(long[],long[],boolean[]) -> CodeOneBlock
    void ReleaseMFStream() -> ReleaseMFStream
    void SetOutStream(java.io.OutputStream) -> SetOutStream
    void ReleaseOutStream() -> ReleaseOutStream
    void ReleaseStreams() -> ReleaseStreams
    void SetStreams(java.io.InputStream,java.io.OutputStream,long,long) -> SetStreams
    void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress) -> Code
    void WriteCoderProperties(java.io.OutputStream) -> WriteCoderProperties
    void FillDistancesPrices() -> FillDistancesPrices
    void FillAlignPrices() -> FillAlignPrices
    boolean SetAlgorithm(int) -> SetAlgorithm
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetNumFastBytes(int) -> SetNumFastBytes
    boolean SetMatchFinder(int) -> SetMatchFinder
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void SetEndMarkerMode(boolean) -> SetEndMarkerMode
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    short[] _choice -> _choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> _lowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> _midCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> _highCoder
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Init(int) -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
    void SetPrices(int,int,int[],int) -> SetPrices
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int[] _prices -> _prices
    int _tableSize -> _tableSize
    int[] _counters -> _counters
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void SetTableSize(int) -> SetTableSize
    int GetPrice(int,int) -> GetPrice
    void UpdateTable(int) -> UpdateTable
    void UpdateTables(int) -> UpdateTables
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> GetSubCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders -> m_Encoders
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> this$1
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> Encode
    void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> EncodeMatched
    int GetPrice(boolean,byte,byte) -> GetPrice
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    int State -> State
    boolean Prev1IsChar -> Prev1IsChar
    boolean Prev2 -> Prev2
    int PosPrev2 -> PosPrev2
    int BackPrev2 -> BackPrev2
    int Price -> Price
    int PosPrev -> PosPrev
    int BackPrev -> BackPrev
    int Backs0 -> Backs0
    int Backs1 -> Backs1
    int Backs2 -> Backs2
    int Backs3 -> Backs3
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void MakeAsChar() -> MakeAsChar
    void MakeAsShortRep() -> MakeAsShortRep
    boolean IsShortRep() -> IsShortRep
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> Decode
    int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> ReverseDecode
    int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> ReverseDecode
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> Encode
    void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> ReverseEncode
    int GetPrice(int) -> GetPrice
    int ReverseGetPrice(int) -> ReverseGetPrice
    int ReverseGetPrice(short[],int,int,int) -> ReverseGetPrice
    void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> ReverseEncode
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    int Range -> Range
    int Code -> Code
    java.io.InputStream Stream -> Stream
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    int DecodeDirectBits(int) -> DecodeDirectBits
    int DecodeBit(short[],int) -> DecodeBit
    void InitBitModels(short[]) -> InitBitModels
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    java.io.OutputStream Stream -> Stream
    long Low -> Low
    int Range -> Range
    int _cacheSize -> _cacheSize
    int _cache -> _cache
    long _position -> _position
    int kNumMoveReducingBits -> kNumMoveReducingBits
    int kNumBitPriceShiftBits -> kNumBitPriceShiftBits
    int[] ProbPrices -> ProbPrices
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void FlushData() -> FlushData
    void FlushStream() -> FlushStream
    void ShiftLow() -> ShiftLow
    void EncodeDirectBits(int,int) -> EncodeDirectBits
    long GetProcessedSizeAdd() -> GetProcessedSizeAdd
    void InitBitModels(short[]) -> InitBitModels
    void Encode(short[],int,int) -> Encode
    int GetPrice(int,int) -> GetPrice
    int GetPrice0(int) -> GetPrice0
    int GetPrice1(int) -> GetPrice1
com.esotericsoftware.tablelayout.BaseTableLayout -> com.a.a.a:
    int CENTER -> CENTER
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    com.esotericsoftware.tablelayout.Toolkit toolkit -> toolkit
    java.lang.Object table -> table
    int columns -> columns
    int rows -> rows
    java.util.ArrayList cells -> cells
    com.esotericsoftware.tablelayout.Cell cellDefaults -> cellDefaults
    java.util.ArrayList columnDefaults -> columnDefaults
    com.esotericsoftware.tablelayout.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    com.esotericsoftware.tablelayout.Value padTop -> padTop
    com.esotericsoftware.tablelayout.Value padLeft -> padLeft
    com.esotericsoftware.tablelayout.Value padBottom -> padBottom
    com.esotericsoftware.tablelayout.Value padRight -> padRight
    int align -> align
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug debug -> debug
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    com.esotericsoftware.tablelayout.Cell add(java.lang.Object) -> add
    com.esotericsoftware.tablelayout.Cell row() -> row
    void endRow() -> endRow
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    void reset() -> reset
    void clear() -> clear
    com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object) -> getCell
    java.util.List getCells() -> getCells
    void setToolkit(com.esotericsoftware.tablelayout.Toolkit) -> setToolkit
    java.lang.Object getTable() -> getTable
    void setTable(java.lang.Object) -> setTable
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout pad(float) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(float) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(float) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(float) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(float) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout align(int) -> align
    com.esotericsoftware.tablelayout.BaseTableLayout center() -> center
    com.esotericsoftware.tablelayout.BaseTableLayout top() -> top
    com.esotericsoftware.tablelayout.BaseTableLayout left() -> left
    com.esotericsoftware.tablelayout.BaseTableLayout bottom() -> bottom
    com.esotericsoftware.tablelayout.BaseTableLayout right() -> right
    com.esotericsoftware.tablelayout.BaseTableLayout debug() -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout debugTable() -> debugTable
    com.esotericsoftware.tablelayout.BaseTableLayout debugCell() -> debugCell
    com.esotericsoftware.tablelayout.BaseTableLayout debugWidget() -> debugWidget
    com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> getDebug
    com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    int getAlign() -> getAlign
    int getRow(float) -> getRow
    float[] ensureSize(float[],int) -> ensureSize
    float w(com.esotericsoftware.tablelayout.Value) -> w
    float h(com.esotericsoftware.tablelayout.Value) -> h
    float w(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> w
    float h(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> h
    void computeSize() -> computeSize
    void layout(float,float,float,float) -> layout
com.esotericsoftware.tablelayout.BaseTableLayout$Debug -> com.a.a.b:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug none -> a
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug all -> b
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug table -> c
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug cell -> d
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug widget -> e
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] $VALUES -> f
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] values() -> values
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug valueOf(java.lang.String) -> valueOf
com.esotericsoftware.tablelayout.Cell -> com.a.a.c:
    com.esotericsoftware.tablelayout.Value minWidth -> a
    com.esotericsoftware.tablelayout.Value minHeight -> b
    com.esotericsoftware.tablelayout.Value prefWidth -> c
    com.esotericsoftware.tablelayout.Value prefHeight -> d
    com.esotericsoftware.tablelayout.Value maxWidth -> e
    com.esotericsoftware.tablelayout.Value maxHeight -> f
    com.esotericsoftware.tablelayout.Value spaceTop -> g
    com.esotericsoftware.tablelayout.Value spaceLeft -> h
    com.esotericsoftware.tablelayout.Value spaceBottom -> i
    com.esotericsoftware.tablelayout.Value spaceRight -> j
    com.esotericsoftware.tablelayout.Value padTop -> k
    com.esotericsoftware.tablelayout.Value padLeft -> l
    com.esotericsoftware.tablelayout.Value padBottom -> m
    com.esotericsoftware.tablelayout.Value padRight -> n
    java.lang.Float fillX -> o
    java.lang.Float fillY -> p
    java.lang.Integer align -> q
    java.lang.Integer expandX -> r
    java.lang.Integer expandY -> s
    java.lang.Boolean ignore -> t
    java.lang.Integer colspan -> u
    java.lang.Boolean uniformX -> v
    java.lang.Boolean uniformY -> w
    java.lang.Object widget -> x
    float widgetX -> y
    float widgetY -> z
    float widgetWidth -> A
    float widgetHeight -> B
    com.esotericsoftware.tablelayout.BaseTableLayout layout -> K
    boolean endRow -> C
    int column -> D
    int row -> E
    int cellAboveIndex -> F
    float computedPadTop -> G
    float computedPadLeft -> H
    float computedPadBottom -> I
    float computedPadRight -> J
    void set(com.esotericsoftware.tablelayout.Cell) -> a
    void merge(com.esotericsoftware.tablelayout.Cell) -> b
    java.lang.Object getWidget() -> a
    com.esotericsoftware.tablelayout.Cell space(float) -> a
    com.esotericsoftware.tablelayout.Cell fill() -> b
    com.esotericsoftware.tablelayout.Cell expand() -> c
    boolean getIgnore() -> d
    float getWidgetX() -> e
    void setWidgetX(float) -> b
    float getWidgetY() -> f
    void setWidgetY(float) -> c
    float getWidgetWidth() -> g
    void setWidgetWidth(float) -> d
    float getWidgetHeight() -> h
    void setWidgetHeight(float) -> e
    boolean isEndRow() -> i
    com.esotericsoftware.tablelayout.Cell defaults(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
com.esotericsoftware.tablelayout.Toolkit -> com.a.a.d:
    com.esotericsoftware.tablelayout.Toolkit instance -> instance
    void addChild(java.lang.Object,java.lang.Object) -> addChild
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    float getMinWidth(java.lang.Object) -> getMinWidth
    float getMinHeight(java.lang.Object) -> getMinHeight
    float getPrefWidth(java.lang.Object) -> getPrefWidth
    float getPrefHeight(java.lang.Object) -> getPrefHeight
    float getMaxWidth(java.lang.Object) -> getMaxWidth
    float getMaxHeight(java.lang.Object) -> getMaxHeight
    float getWidth(java.lang.Object) -> getWidth
    float getHeight(java.lang.Object) -> getHeight
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object) -> setWidget
    float width(float) -> width
    float height(float) -> height
com.esotericsoftware.tablelayout.Value -> com.a.a.e:
    com.esotericsoftware.tablelayout.Value zero -> a
    com.esotericsoftware.tablelayout.Value minWidth -> b
    com.esotericsoftware.tablelayout.Value minHeight -> c
    com.esotericsoftware.tablelayout.Value prefWidth -> d
    com.esotericsoftware.tablelayout.Value prefHeight -> e
    com.esotericsoftware.tablelayout.Value maxWidth -> f
    com.esotericsoftware.tablelayout.Value maxHeight -> g
    float get(java.lang.Object) -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    float width(java.lang.Object) -> b
    float height(java.lang.Object) -> c
    float width(com.esotericsoftware.tablelayout.Cell) -> b
    float height(com.esotericsoftware.tablelayout.Cell) -> c
com.esotericsoftware.tablelayout.Value$1 -> com.a.a.f:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$2 -> com.a.a.g:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$3 -> com.a.a.h:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$4 -> com.a.a.i:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$5 -> com.a.a.j:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$6 -> com.a.a.k:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$7 -> com.a.a.l:
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$CellValue -> com.a.a.m:
    float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$FixedValue -> com.a.a.n:
    float value -> h
    float get(java.lang.Object) -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
com.july.dodgeball.Asset -> com.july.dodgeball.a:
    com.july.dodgeball.Asset instance -> C
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle fontStyle -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont numfont -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle numfontStyle -> d
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> e
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bg -> f
    com.badlogic.gdx.graphics.g2d.TextureRegion[] balls -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearStand -> h
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearRunLeft -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearRunRight -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearGunLeft -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearGunRight -> l
    com.badlogic.gdx.graphics.g2d.TextureRegion[] bearDie -> m
    com.badlogic.gdx.graphics.g2d.TextureRegion title -> n
    com.badlogic.gdx.graphics.g2d.TextureRegion gameover -> o
    com.badlogic.gdx.graphics.g2d.TextureRegion start -> p
    com.badlogic.gdx.graphics.g2d.TextureRegion startButton -> q
    com.badlogic.gdx.graphics.g2d.TextureRegion continueButton -> r
    com.badlogic.gdx.graphics.g2d.TextureRegion returnButton -> s
    com.badlogic.gdx.graphics.g2d.TextureRegion exit -> t
    com.badlogic.gdx.graphics.g2d.TextureRegion more -> u
    com.badlogic.gdx.graphics.g2d.TextureRegion[] music -> v
    com.badlogic.gdx.graphics.g2d.TextureRegion[] sound -> w
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable[] levels -> x
    com.badlogic.gdx.files.FileHandle file -> y
    com.badlogic.gdx.audio.Music bgMusic -> z
    com.badlogic.gdx.audio.Music clickMusic -> A
    com.badlogic.gdx.audio.Music failMusic -> B
    com.july.dodgeball.Asset getInstance() -> a
    void loadTexture() -> b
    void readScore() -> c
    void writeScore() -> d
    void loadMusic() -> e
    void dispose() -> f
com.july.dodgeball.Ball -> com.july.dodgeball.b:
    com.badlogic.gdx.physics.box2d.World world -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion ball -> b
    com.badlogic.gdx.physics.box2d.Body sbody -> c
    boolean tag -> d
    boolean hited(com.badlogic.gdx.math.Rectangle) -> a
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void setPosition(float,float) -> setPosition
com.july.dodgeball.BallFactory -> com.july.dodgeball.c:
    com.badlogic.gdx.physics.box2d.World world -> a
    com.badlogic.gdx.scenes.scene2d.Group group -> b
    com.badlogic.gdx.utils.Array arrays -> c
    boolean flag -> d
    float time -> e
    int size -> f
    void autoGenerate() -> a
    void generateBall() -> b
    boolean judge(com.badlogic.gdx.math.Rectangle) -> a
    void removeAll() -> c
com.july.dodgeball.Bear -> com.july.dodgeball.d:
    int status -> a
    com.badlogic.gdx.graphics.g2d.Animation stand -> b
    com.badlogic.gdx.graphics.g2d.Animation runLeft -> c
    com.badlogic.gdx.graphics.g2d.Animation runRight -> d
    com.badlogic.gdx.graphics.g2d.Animation gunLeft -> e
    com.badlogic.gdx.graphics.g2d.Animation gunRight -> f
    com.badlogic.gdx.graphics.g2d.Animation die -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion draw -> h
    float time -> i
    boolean move -> j
    float moveTime -> k
    void setMoveAction(float,float,int) -> a
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.math.Rectangle getRectangle() -> a
com.july.dodgeball.Constants -> com.july.dodgeball.e:
    int startTime -> a
    float screenWidth -> b
    float screenHeight -> c
    float wrate -> d
    float hrate -> e
    float PPM -> f
    float DOUBLE_PPM -> g
    float edgeX -> h
    float edgeY -> i
    float[] bestScore -> j
    float score -> k
    java.text.DecimalFormat df -> l
    int ballNum -> m
    float ballWidth -> n
    float ballHeight -> o
    int status -> p
    float resultButtonWidth -> q
    float resultButtonHeight -> r
    float returnButtonX -> s
    float returnButtonY -> t
    float continueButtonX -> u
    float continueButtonY -> v
    float tagWidth -> w
    float tagHeight -> x
    float musicX -> y
    float musicY -> z
    float moreX -> A
    float moreY -> B
    float closeX -> C
    float closeY -> D
    float titleWidth -> E
    float titleHeight -> F
    float titleX -> G
    float titleY -> H
    float startButtonX -> I
    float startButtonY -> J
    boolean isMusic -> K
    boolean isSound -> L
com.july.dodgeball.GameScreen -> com.july.dodgeball.f:
    com.july.dodgeball.MainGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> d
    com.badlogic.gdx.scenes.scene2d.Stage stage -> e
    com.badlogic.gdx.graphics.g2d.TextureRegion bg -> f
    com.july.dodgeball.Bear bear -> g
    com.july.dodgeball.BallFactory ballFactory -> h
    com.badlogic.gdx.scenes.scene2d.ui.Label scoreLabel -> i
    com.badlogic.gdx.scenes.scene2d.ui.Label bestLabel -> j
    com.july.dodgeball.Result result -> k
    com.badlogic.gdx.physics.box2d.World world -> l
    com.badlogic.gdx.graphics.OrthographicCamera camera -> b
    com.badlogic.gdx.physics.box2d.Box2DDebugRenderer renderer -> c
    void initWorld() -> a
    void draw() -> b
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.july.dodgeball.MainActivity -> com.july.dodgeball.MainActivity:
    android.widget.RelativeLayout layout -> a
    cn.domob.android.ads.DomobAdView MyAdview320x50 -> b
    android.os.Handler handler -> d
    android.content.Context mContext -> e
    android.content.DialogInterface$OnClickListener listener -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initAd() -> a
    void showAdStatic(int) -> a
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    android.content.Context access$0() -> b
com.july.dodgeball.MainActivity$1 -> com.july.dodgeball.g:
    void handleMessage(android.os.Message) -> handleMessage
com.july.dodgeball.MainActivity$1$1 -> com.july.dodgeball.h:
    com.july.dodgeball.MainActivity$1 this$1 -> a
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
com.july.dodgeball.MainActivity$2 -> com.july.dodgeball.i:
    void onClick(android.content.DialogInterface,int) -> onClick
com.july.dodgeball.MainGame -> com.july.dodgeball.j:
    com.july.dodgeball.MainActivity main -> a
    void create() -> create
    void dispose() -> dispose
com.july.dodgeball.MenuScreen -> com.july.dodgeball.k:
    com.july.dodgeball.MainGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> b
    com.badlogic.gdx.scenes.scene2d.Stage stage -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion bg -> d
    com.badlogic.gdx.graphics.g2d.TextureRegion title -> e
    com.badlogic.gdx.graphics.g2d.Animation ballAnimation -> f
    com.badlogic.gdx.graphics.g2d.TextureRegion ball -> g
    com.badlogic.gdx.graphics.g2d.Animation[] bearRun -> h
    boolean runLeft -> i
    float bearX -> j
    float bearY -> k
    float ballX -> l
    com.badlogic.gdx.graphics.g2d.TextureRegion bear -> m
    float time -> n
    com.badlogic.gdx.scenes.scene2d.ui.Image startButton -> o
    com.badlogic.gdx.scenes.scene2d.ui.Image music -> p
    com.badlogic.gdx.scenes.scene2d.ui.Image sound -> q
    com.badlogic.gdx.scenes.scene2d.ui.Image exit -> r
    com.badlogic.gdx.scenes.scene2d.ui.Image more -> s
    com.badlogic.gdx.scenes.scene2d.ui.Image[] levels -> t
    void initAnimation() -> a
    void drawAnimation() -> b
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    com.badlogic.gdx.scenes.scene2d.ui.Image access$0(com.july.dodgeball.MenuScreen) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image access$1(com.july.dodgeball.MenuScreen) -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image[] access$2(com.july.dodgeball.MenuScreen) -> c
com.july.dodgeball.MenuScreen$1 -> com.july.dodgeball.l:
    com.july.dodgeball.MenuScreen this$0 -> a
    com.july.dodgeball.MenuScreen val$tem -> b
    com.july.dodgeball.MainGame val$game -> c
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$2 -> com.july.dodgeball.m:
    com.july.dodgeball.MenuScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable[] val$trd -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$3 -> com.july.dodgeball.n:
    com.july.dodgeball.MenuScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable[] val$trd -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$4 -> com.july.dodgeball.o:
    com.july.dodgeball.MenuScreen this$0 -> a
    com.july.dodgeball.MainGame val$game -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$5 -> com.july.dodgeball.p:
    com.july.dodgeball.MenuScreen this$0 -> a
    com.july.dodgeball.MainGame val$game -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$6 -> com.july.dodgeball.q:
    com.july.dodgeball.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$7 -> com.july.dodgeball.r:
    com.july.dodgeball.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.MenuScreen$8 -> com.july.dodgeball.s:
    com.july.dodgeball.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.Result -> com.july.dodgeball.t:
    com.july.dodgeball.GameScreen screen -> a
    com.badlogic.gdx.scenes.scene2d.Stage stage -> b
    com.badlogic.gdx.graphics.g2d.TextureRegion gameover -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label scoreLabel -> d
    com.badlogic.gdx.scenes.scene2d.ui.Image continueButton -> e
    com.badlogic.gdx.scenes.scene2d.ui.Image returnButton -> f
    int count -> g
    void show() -> a
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    void dispose() -> b
com.july.dodgeball.Result$1 -> com.july.dodgeball.u:
    com.july.dodgeball.Result this$0 -> a
    com.july.dodgeball.GameScreen val$screen -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.july.dodgeball.Result$2 -> com.july.dodgeball.v:
    com.july.dodgeball.Result this$0 -> a
    com.july.dodgeball.GameScreen val$screen -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
net.youmi.android.AdBrowser -> net.youmi.android.AdBrowser:
    net.youmi.android.a.k.a.i a -> a
    net.youmi.android.a.h.l b -> b
    net.youmi.android.i.a c -> c
    android.widget.RelativeLayout d -> d
    net.youmi.android.i.b e -> e
    net.youmi.android.d.i.a f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void g() -> g
    void setWebTitle(java.lang.String) -> setWebTitle
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a() -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxySetVisibility(int) -> proxySetVisibility
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
net.youmi.android.AdManager -> net.youmi.android.AdManager:
    android.content.Context a -> a
    net.youmi.android.AdManager b -> b
    boolean c -> c
    boolean d -> d
    boolean getTipsDisplayOnNotificationAfterInstall() -> getTipsDisplayOnNotificationAfterInstall
    void setTipsDisplayOnNotificationAfterInstall(boolean) -> setTipsDisplayOnNotificationAfterInstall
    boolean getIsDownloadProgressDisplayOnNotification() -> getIsDownloadProgressDisplayOnNotification
    void setIsDownloadProgressDisplayOnNotification(boolean) -> setIsDownloadProgressDisplayOnNotification
    net.youmi.android.AdManager getInstance(android.content.Context) -> getInstance
    void init(java.lang.String,java.lang.String,boolean) -> init
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    java.lang.String getOnlineConfig(java.lang.String,java.lang.String) -> getOnlineConfig
    java.lang.String syncGetOnlineConfig(java.lang.String,java.lang.String) -> syncGetOnlineConfig
    void asyncGetOnlineConfig(java.lang.String,net.youmi.android.dev.OnlineConfigCallBack) -> asyncGetOnlineConfig
    net.youmi.android.dev.AppUpdateInfo syncCheckAppUpdate() -> syncCheckAppUpdate
    void asyncCheckAppUpdate(net.youmi.android.dev.CheckAppUpdateCallBack) -> asyncCheckAppUpdate
    net.youmi.android.dev.AppUpdateInfo checkAppUpdate() -> checkAppUpdate
    void setUserDataCollect(boolean) -> setUserDataCollect
net.youmi.android.AdReceiver -> net.youmi.android.AdReceiver:
    int a -> a
    int b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.AdService -> net.youmi.android.AdService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.ExpService -> net.youmi.android.ExpService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.SmartBannerActivity -> net.youmi.android.SmartBannerActivity:
    net.youmi.android.i.a a -> a
    net.youmi.android.f.f b -> b
    android.content.Context c -> c
    android.widget.RelativeLayout e -> e
    android.widget.FrameLayout f -> f
    net.youmi.android.a.h.e d -> d
    net.youmi.android.a.h.p g -> g
    void onCreate(android.os.Bundle) -> onCreate
    void a(android.content.Context,net.youmi.android.a.h.p,net.youmi.android.a.h.e,boolean) -> a
    void a(int) -> a
    void a(android.content.Context,net.youmi.android.a.h.p) -> a
    void a() -> a
    void onClick(android.view.View) -> onClick
    void setWebTitle(java.lang.String) -> setWebTitle
    boolean proxySetVisibility(int) -> proxySetVisibility
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
net.youmi.android.SmartBannerService -> net.youmi.android.SmartBannerService:
    java.lang.String cachePackage -> cachePackage
    long cachePackageSM -> cachePackageSM
    int nextTime -> nextTime
    java.lang.String cacheActivity -> cacheActivity
    long cacheActivitySM -> cacheActivitySM
    int acNextTime -> acNextTime
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.a -> net.youmi.android.a:
    net.youmi.android.AdBrowser a -> a
    void run() -> run
net.youmi.android.a.a.a -> net.youmi.android.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.b c -> c
    net.youmi.android.a.a.c d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    long j -> j
    boolean k -> k
    net.youmi.android.a.h.j l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    long b() -> b
    void a(long) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    boolean e() -> e
    void a(boolean) -> a
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    java.lang.String g() -> g
    void d(java.lang.String) -> d
    boolean h() -> h
    void b(boolean) -> b
    net.youmi.android.a.a.c i() -> i
    void a(net.youmi.android.a.a.c) -> a
    void b(long) -> b
    net.youmi.android.a.h.j j() -> j
    void a(net.youmi.android.a.h.j) -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
    java.lang.String f(java.lang.String) -> f
net.youmi.android.a.a.a.a -> net.youmi.android.a.a.a.a:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    net.youmi.android.a.a.a.f e -> e
    net.youmi.android.a.a.a.c f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.e h -> h
    net.youmi.android.a.a.a.d i -> i
    net.youmi.android.a.a.a.j j -> j
    net.youmi.android.a.a.a.h k -> k
    int a() -> a
    int b() -> b
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    java.lang.String a(int,int) -> a
    net.youmi.android.a.a.a.f e() -> e
    void a(net.youmi.android.a.a.a.f) -> a
    net.youmi.android.a.a.a.c f() -> f
    void a(net.youmi.android.a.a.a.c) -> a
    net.youmi.android.a.a.a.g g() -> g
    void a(net.youmi.android.a.a.a.g) -> a
    void a(net.youmi.android.a.a.a.e) -> a
    net.youmi.android.a.a.a.e h() -> h
    void a(net.youmi.android.a.a.a.d) -> a
    net.youmi.android.a.a.a.d i() -> i
    net.youmi.android.a.a.a.j j() -> j
    void a(net.youmi.android.a.a.a.j) -> a
    net.youmi.android.a.a.a.h n() -> n
    void a(net.youmi.android.a.a.a.h) -> a
    java.lang.String toString() -> toString
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.a.a.b -> net.youmi.android.a.a.a.b:
    java.lang.String a(net.youmi.android.a.a.a.a) -> a
    boolean a(net.youmi.android.a.a.a.a,java.lang.String) -> a
net.youmi.android.a.a.a.c -> net.youmi.android.a.a.a.c:
    long a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.ArrayList a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    long j() -> j
    void a(long) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.d -> net.youmi.android.a.a.a.d:
    long a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    int e() -> e
    void b(int) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.e -> net.youmi.android.a.a.a.e:
    long a -> a
    long b -> b
    java.lang.String c -> c
    long a() -> a
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.f -> net.youmi.android.a.a.a.f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    long h -> h
    boolean a(android.content.Context,java.lang.String) -> a
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.g -> net.youmi.android.a.a.a.g:
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    java.lang.String g -> g
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
    int g() -> g
    void a(int) -> a
net.youmi.android.a.a.a.h -> net.youmi.android.a.a.a.h:
    long a -> a
    int b -> b
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
net.youmi.android.a.a.a.i -> net.youmi.android.a.a.a.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.a.a.a.j -> net.youmi.android.a.a.a.j:
    long a -> a
    java.util.List b -> b
    long a() -> a
    void a(long) -> a
    java.util.List b() -> b
    void a(net.youmi.android.a.a.a.i) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.b -> net.youmi.android.a.a.b:
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.a.a.c a(org.json.JSONObject,net.youmi.android.a.a.c) -> a
net.youmi.android.a.a.c -> net.youmi.android.a.a.c:
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
net.youmi.android.a.a.d -> net.youmi.android.a.a.d:
    net.youmi.android.a.a.d a -> a
    net.youmi.android.a.a.d a(android.content.Context) -> a
    net.youmi.android.a.a.a a(android.content.Context,java.lang.String,net.youmi.android.a.a.b) -> a
    boolean a(android.content.Context,net.youmi.android.a.a.a) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.a.a.e -> net.youmi.android.a.a.e:
    void a(android.content.Context,net.youmi.android.a.h.e,java.util.List) -> a
net.youmi.android.a.b.a -> net.youmi.android.a.b.a:
    net.youmi.android.e.a.g a -> a
    net.youmi.android.e.a.f b -> b
    void a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    boolean a(android.content.Context,java.lang.String,boolean,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,boolean) -> a
net.youmi.android.a.c.a -> net.youmi.android.a.c.a:
    android.webkit.WebViewClient a(net.youmi.android.a.k.a.h) -> a
    int a() -> a
    android.webkit.WebChromeClient a(android.content.Context,net.youmi.android.a.k.a.b) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void a(android.content.Context) -> a
    void a(android.os.AsyncTask,java.lang.Object[]) -> a
net.youmi.android.a.c.b -> net.youmi.android.a.c.b:
    void a(android.content.Context) -> a
net.youmi.android.a.c.c -> net.youmi.android.a.c.c:
    void a(android.os.AsyncTask,java.lang.Object[]) -> a
net.youmi.android.a.c.d -> net.youmi.android.a.c.d:
    int a() -> a
net.youmi.android.a.c.e -> net.youmi.android.a.c.e:
    net.youmi.android.a.k.a.b a -> a
    net.youmi.android.a.c.e a(net.youmi.android.a.k.a.b) -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.a.c.f -> net.youmi.android.a.c.f:
    net.youmi.android.a.c.f b(net.youmi.android.a.k.a.b) -> b
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
net.youmi.android.a.c.g -> net.youmi.android.a.c.g:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.h -> net.youmi.android.a.c.h:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.i -> net.youmi.android.a.c.i:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.f c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.j -> net.youmi.android.a.c.j:
    net.youmi.android.a.c.j c(net.youmi.android.a.k.a.b) -> c
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
net.youmi.android.a.c.k -> net.youmi.android.a.c.k:
    net.youmi.android.a.k.a.h a -> a
    net.youmi.android.a.c.k a(net.youmi.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.l -> net.youmi.android.a.c.l:
    net.youmi.android.a.k.a.h a -> a
    net.youmi.android.a.c.l a(net.youmi.android.a.k.a.h) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.m -> net.youmi.android.a.c.m:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.c.n -> net.youmi.android.a.c.n:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.d.a -> net.youmi.android.a.d.a:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    net.youmi.android.e.a.d a(android.content.Context) -> a
    net.youmi.android.e.a.d b(android.content.Context) -> b
    net.youmi.android.e.a.d c(android.content.Context) -> c
net.youmi.android.a.e.a.a -> net.youmi.android.a.e.a.a:
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.e.a.b -> net.youmi.android.a.e.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    void a(long) -> a
    long l() -> l
    java.lang.String m() -> m
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.a.e.a.c -> net.youmi.android.a.e.a.c:
    net.youmi.android.a.e.a.c a -> a
    net.youmi.android.a.e.a.c a(android.content.Context) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.f.a -> net.youmi.android.a.f.a:
    net.youmi.android.c.f.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
    java.io.File a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.f.b -> net.youmi.android.a.f.b:
    net.youmi.android.a.f.b a -> a
    net.youmi.android.a.f.b a(android.content.Context) -> a
net.youmi.android.a.f.c -> net.youmi.android.a.f.c:
    net.youmi.android.a.f.c a -> a
    net.youmi.android.a.f.c a(android.content.Context) -> a
net.youmi.android.a.g.a -> net.youmi.android.a.g.a:
    net.youmi.android.a.g.a a -> a
    net.youmi.android.a.g.a b -> b
    net.youmi.android.a.g.a c -> c
    net.youmi.android.a.g.a d -> d
    net.youmi.android.a.g.a e -> e
    net.youmi.android.a.g.a f -> f
    net.youmi.android.a.g.a g -> g
    java.lang.String b() -> b
    java.io.File c(java.lang.String) -> c
    net.youmi.android.a.g.a a(android.content.Context,net.youmi.android.a.g.a,net.youmi.android.a.g.a,int,long) -> a
    net.youmi.android.a.g.a a(android.content.Context,int) -> a
    net.youmi.android.a.g.a b(android.content.Context,int) -> b
    net.youmi.android.a.g.a c(android.content.Context,int) -> c
    net.youmi.android.a.g.a d(android.content.Context,int) -> d
    net.youmi.android.a.g.a a(android.content.Context) -> a
    net.youmi.android.a.g.a b(android.content.Context) -> b
    net.youmi.android.a.g.a c(android.content.Context) -> c
net.youmi.android.a.h.a -> net.youmi.android.a.h.a:
net.youmi.android.a.h.a.a -> net.youmi.android.a.h.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(long) -> a
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.h.a.b -> net.youmi.android.a.h.a.b:
    net.youmi.android.a.h.a.b a -> a
    net.youmi.android.a.h.a.b a(android.content.Context) -> a
    net.youmi.android.a.h.a.a a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
    boolean a(java.util.List) -> a
    boolean b(java.lang.String) -> b
net.youmi.android.a.h.b -> net.youmi.android.a.h.b:
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
net.youmi.android.a.h.b.a -> net.youmi.android.a.h.b.a:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
net.youmi.android.a.h.b.a.a -> net.youmi.android.a.h.b.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.b -> net.youmi.android.a.h.b.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.c -> net.youmi.android.a.h.b.a.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.d -> net.youmi.android.a.h.b.a.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.e -> net.youmi.android.a.h.b.a.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.f -> net.youmi.android.a.h.b.a.f:
    int[] a -> a
net.youmi.android.a.h.b.a.g -> net.youmi.android.a.h.b.a.g:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
    void a(android.content.Context,java.lang.String,int) -> a
net.youmi.android.a.h.b.a.h -> net.youmi.android.a.h.b.a.h:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.i -> net.youmi.android.a.h.b.a.i:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.j -> net.youmi.android.a.h.b.a.j:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.k -> net.youmi.android.a.h.b.a.k:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.l -> net.youmi.android.a.h.b.a.l:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b -> net.youmi.android.a.h.b.b:
    net.youmi.android.a.h.y a -> a
    net.youmi.android.a.h.a b -> b
    void a(net.youmi.android.a.h.y) -> a
    void a(net.youmi.android.a.h.a) -> a
    java.lang.String a(org.json.JSONObject) -> a
    org.json.JSONObject a(int) -> a
    java.lang.String b(int) -> b
net.youmi.android.a.h.b.b.a -> net.youmi.android.a.h.b.b.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.b -> net.youmi.android.a.h.b.b.b:
    int[] a -> a
net.youmi.android.a.h.b.b.c -> net.youmi.android.a.h.b.b.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.d -> net.youmi.android.a.h.b.b.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.e -> net.youmi.android.a.h.b.b.e:
    int[] a -> a
net.youmi.android.a.h.b.b.f -> net.youmi.android.a.h.b.b.f:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.g -> net.youmi.android.a.h.b.b.g:
    int[] a -> a
net.youmi.android.a.h.b.b.h -> net.youmi.android.a.h.b.b.h:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.i -> net.youmi.android.a.h.b.b.i:
    int[] a -> a
net.youmi.android.a.h.b.b.j -> net.youmi.android.a.h.b.b.j:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.k -> net.youmi.android.a.h.b.b.k:
    int[] a -> a
net.youmi.android.a.h.b.b.l -> net.youmi.android.a.h.b.b.l:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.m -> net.youmi.android.a.h.b.b.m:
    int[] a -> a
net.youmi.android.a.h.b.b.n -> net.youmi.android.a.h.b.b.n:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.b.o -> net.youmi.android.a.h.b.b.o:
    net.youmi.android.a.h.b a -> a
    net.youmi.android.a.h.b.b.n b -> b
    void run() -> run
net.youmi.android.a.h.b.b.p -> net.youmi.android.a.h.b.b.p:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.q -> net.youmi.android.a.h.b.b.q:
    android.content.Context a -> a
    net.youmi.android.a.h.c.a.a b -> b
    net.youmi.android.a.h.b.b.p c -> c
    void run() -> run
net.youmi.android.a.h.b.b.r -> net.youmi.android.a.h.b.b.r:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.s -> net.youmi.android.a.h.b.b.s:
    int[] a -> a
net.youmi.android.a.h.b.c -> net.youmi.android.a.h.b.c:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.c.a -> net.youmi.android.a.h.b.c.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.b -> net.youmi.android.a.h.b.c.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.c -> net.youmi.android.a.h.b.c.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.d -> net.youmi.android.a.h.b.c.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d -> net.youmi.android.a.h.b.d:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d.a -> net.youmi.android.a.h.b.d.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.d.b -> net.youmi.android.a.h.b.d.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.e.a -> net.youmi.android.a.h.b.e.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.e.b -> net.youmi.android.a.h.b.e.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.c -> net.youmi.android.a.h.b.e.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.d -> net.youmi.android.a.h.b.e.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.e -> net.youmi.android.a.h.b.e.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.a -> net.youmi.android.a.h.b.f.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.b -> net.youmi.android.a.h.b.f.b:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    net.youmi.android.a.h.b.f.a d -> d
    void run() -> run
net.youmi.android.a.h.b.f.c -> net.youmi.android.a.h.b.f.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.a -> net.youmi.android.a.h.b.g.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b) -> a
net.youmi.android.a.h.b.g.b -> net.youmi.android.a.h.b.g.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.c -> net.youmi.android.a.h.b.g.c:
    int[] a -> a
net.youmi.android.a.h.b.g.d -> net.youmi.android.a.h.b.g.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.e -> net.youmi.android.a.h.b.g.e:
    int[] a -> a
net.youmi.android.a.h.b.h.a -> net.youmi.android.a.h.b.h.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.b -> net.youmi.android.a.h.b.h.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.c -> net.youmi.android.a.h.b.h.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
    java.lang.String a(net.youmi.android.b.a.b,java.lang.String) -> a
net.youmi.android.a.h.c -> net.youmi.android.a.h.c:
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.c.a.a -> net.youmi.android.a.h.c.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    boolean h() -> h
net.youmi.android.a.h.c.b.a -> net.youmi.android.a.h.c.b.a:
    net.youmi.android.a.h.c.b.a a -> a
    java.util.HashSet b -> b
    net.youmi.android.a.h.c.b.a a() -> a
    java.util.HashSet b() -> b
    void a(net.youmi.android.a.h.c) -> a
    void b(net.youmi.android.a.h.c) -> b
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.c.b.b -> net.youmi.android.a.h.c.b.b:
    net.youmi.android.a.h.c a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.h.c.b.a d -> d
    void run() -> run
net.youmi.android.a.h.c.b.c -> net.youmi.android.a.h.c.b.c:
    android.content.Context a -> a
    net.youmi.android.a.h.c.b.c b -> b
    java.util.HashMap c -> c
    net.youmi.android.a.h.c.b.c a(android.content.Context) -> a
    boolean a(net.youmi.android.a.h.c.a.a) -> a
    void a(net.youmi.android.a.h.c.a.a,android.graphics.Bitmap) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.a.h.c.b.d -> net.youmi.android.a.h.c.b.d:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.youmi.android.a.h.e g -> g
    net.youmi.android.a.h.c.b.e h -> h
    void run() -> run
net.youmi.android.a.h.c.b.e -> net.youmi.android.a.h.c.b.e:
    net.youmi.android.a.h.c.b.d a -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void c(net.youmi.android.e.b.b) -> c
    void b(net.youmi.android.e.b.b,java.io.File) -> b
net.youmi.android.a.h.c.b.f -> net.youmi.android.a.h.c.b.f:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.youmi.android.a.h.e g -> g
    void run() -> run
net.youmi.android.a.h.d -> net.youmi.android.a.h.d:
    void setWebTitle(java.lang.String) -> setWebTitle
net.youmi.android.a.h.e -> net.youmi.android.a.h.e:
    android.content.Context a() -> a
    android.app.Activity b() -> b
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f a(int) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
net.youmi.android.a.h.f -> net.youmi.android.a.h.f:
    net.youmi.android.a.h.f a -> a
    net.youmi.android.a.h.f b -> b
    net.youmi.android.a.h.f c -> c
    net.youmi.android.a.h.f[] d -> d
    net.youmi.android.a.h.f[] values() -> values
    net.youmi.android.a.h.f valueOf(java.lang.String) -> valueOf
net.youmi.android.a.h.g -> net.youmi.android.a.h.g:
    net.youmi.android.a.h.e a -> a
    net.youmi.android.a.h.b b -> b
    net.youmi.android.a.h.k c -> c
    net.youmi.android.a.h.y d -> d
    net.youmi.android.a.h.a e -> e
    void setYmWebBrowser(net.youmi.android.a.h.y) -> setYmWebBrowser
    void setExtendJsObject(net.youmi.android.a.h.a) -> setExtendJsObject
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean e(java.lang.String) -> e
    boolean w(java.lang.String) -> w
    boolean dd(java.lang.String) -> dd
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    java.lang.String a(int,int,java.lang.String) -> a
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.h -> net.youmi.android.a.h.h:
    java.lang.String a(int,int,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean w(java.lang.String) -> w
    boolean e(java.lang.String) -> e
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    boolean dd(java.lang.String) -> dd
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.i -> net.youmi.android.a.h.i:
    net.youmi.android.a.a.a.a a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    net.youmi.android.a.h.j j -> j
    void a(long) -> a
    long a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    void a(boolean) -> a
    net.youmi.android.a.a.a.a f() -> f
    void a(net.youmi.android.a.a.a.a) -> a
    net.youmi.android.a.h.j g() -> g
    void a(net.youmi.android.a.h.j) -> a
    boolean h() -> h
    void b(boolean) -> b
net.youmi.android.a.h.j -> net.youmi.android.a.h.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    java.lang.String toString() -> toString
net.youmi.android.a.h.k -> net.youmi.android.a.h.k:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.a.h.l -> net.youmi.android.a.h.l:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    net.youmi.android.a.h.k f -> f
    boolean a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(int) -> b
    int d() -> d
    int e() -> e
    int f() -> f
    net.youmi.android.a.h.k g() -> g
    void a(net.youmi.android.a.h.k) -> a
net.youmi.android.a.h.m -> net.youmi.android.a.h.m:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.l a(int) -> a
net.youmi.android.a.h.n -> net.youmi.android.a.h.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    void b(java.lang.String) -> b
    java.lang.String h() -> h
    void c(java.lang.String) -> c
    java.lang.String i() -> i
    java.lang.String j() -> j
    int k() -> k
    void d(java.lang.String) -> d
    java.lang.String l() -> l
    void e(java.lang.String) -> e
net.youmi.android.a.h.o -> net.youmi.android.a.h.o:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    void e() -> e
    java.lang.String a() -> a
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.youmi.android.a.h.p -> net.youmi.android.a.h.p:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    double e -> e
    double f -> f
    boolean g -> g
    void c(int) -> c
    int m() -> m
    void d(int) -> d
    int n() -> n
    void e(int) -> e
    int o() -> o
    void f(int) -> f
    int p() -> p
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    boolean q() -> q
    void a(boolean) -> a
    double r() -> r
    void a(double) -> a
    double s() -> s
    void b(double) -> b
net.youmi.android.a.h.q -> net.youmi.android.a.h.q:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.a.h.r -> net.youmi.android.a.h.r:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.r b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.r a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.s -> net.youmi.android.a.h.s:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.s b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.s a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.t -> net.youmi.android.a.h.t:
    net.youmi.android.e.a.g a -> a
    net.youmi.android.e.a.g a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.u -> net.youmi.android.a.h.u:
    net.youmi.android.e.a.f a -> a
    net.youmi.android.e.a.f a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.h.v -> net.youmi.android.a.h.v:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    void run() -> run
    int a() -> a
    void a(int) -> a
net.youmi.android.a.h.w -> net.youmi.android.a.h.w:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.h.x -> net.youmi.android.a.h.x:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.youmi.android.a.h.y -> net.youmi.android.a.h.y:
net.youmi.android.a.i.a -> net.youmi.android.a.i.a:
    android.location.Location a -> a
    net.youmi.android.a.i.a b -> b
    android.content.Context c -> c
    net.youmi.android.a.i.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.location.Location) -> a
    android.location.Location a() -> a
net.youmi.android.a.j.a -> net.youmi.android.a.j.a:
    net.youmi.android.c.m.a a -> a
    android.view.animation.Animation b -> b
    net.youmi.android.a.j.a a(android.content.Context,android.view.View,int) -> a
    void a() -> a
net.youmi.android.a.k.a -> net.youmi.android.a.k.a:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.k.a.a -> net.youmi.android.a.k.a.a:
    net.youmi.android.a.k.a.i a -> a
    android.content.Context b -> b
    android.widget.RelativeLayout d -> d
    android.widget.RelativeLayout e -> e
    net.youmi.android.a.h.e c -> c
    net.youmi.android.a.h.p f -> f
    int g -> g
    int h -> h
    void a(android.content.Context,net.youmi.android.a.h.p,net.youmi.android.a.h.e,boolean) -> a
    void a(int) -> a
    void a(int,int,int,int) -> a
    void onBackPressed() -> onBackPressed
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    void setWebTitle(java.lang.String) -> setWebTitle
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    void a() -> a
net.youmi.android.a.k.a.b -> net.youmi.android.a.k.a.b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.k.a.h d -> d
    net.youmi.android.a.k.a.f e -> e
    net.youmi.android.a.h.e f -> f
    net.youmi.android.a.h.b g -> g
    net.youmi.android.a.h.e a() -> a
    void a(net.youmi.android.a.h.e) -> a
    net.youmi.android.a.h.b b() -> b
    void a(net.youmi.android.a.h.b) -> a
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    net.youmi.android.a.k.a.f f() -> f
    void a(net.youmi.android.a.k.a.f) -> a
    void a(net.youmi.android.a.k.a.h) -> a
    net.youmi.android.a.k.a.h g() -> g
    android.app.Activity h() -> h
net.youmi.android.a.k.a.c -> net.youmi.android.a.k.a.c:
    net.youmi.android.a.k.a.a a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
net.youmi.android.a.k.a.d -> net.youmi.android.a.k.a.d:
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.a.k.a.e -> net.youmi.android.a.k.a.e:
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void loadUrl(java.lang.String) -> loadUrl
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    void reload() -> reload
    void postUrl(java.lang.String,byte[]) -> postUrl
net.youmi.android.a.k.a.f -> net.youmi.android.a.k.a.f:
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.k.a.g -> net.youmi.android.a.k.a.g:
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
net.youmi.android.a.k.a.h -> net.youmi.android.a.k.a.h:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
net.youmi.android.a.k.a.i -> net.youmi.android.a.k.a.i:
    net.youmi.android.a.k.a.e e -> e
    net.youmi.android.a.k.a.o f -> f
    net.youmi.android.a.k.a.n g -> g
    net.youmi.android.a.k.a.g h -> h
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout i -> i
    net.youmi.android.a.h.d j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.content.Context m -> m
    java.util.Timer n -> n
    java.util.TimerTask o -> o
    void a(java.lang.String) -> a
    boolean c() -> c
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(net.youmi.android.a.k.a.g) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onClick(android.view.View) -> onClick
    void a(net.youmi.android.a.k.a.i,boolean,int) -> a
net.youmi.android.a.k.a.j -> net.youmi.android.a.k.a.j:
    int b -> b
    net.youmi.android.a.k.a.i a -> a
    void run() -> run
    int a(net.youmi.android.a.k.a.j) -> a
    int a(net.youmi.android.a.k.a.j,int) -> a
net.youmi.android.a.k.a.k -> net.youmi.android.a.k.a.k:
    net.youmi.android.a.k.a.j a -> a
    void run() -> run
net.youmi.android.a.k.a.l -> net.youmi.android.a.k.a.l:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.a.k.a.f f -> f
    net.youmi.android.a.k.a.h g -> g
    android.content.Context h -> h
    net.youmi.android.a.k.a.b i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(android.content.Context,net.youmi.android.a.k.a.b,net.youmi.android.a.h.g) -> a
    void c() -> c
    void a(net.youmi.android.a.h.g,int) -> a
    void a(int) -> a
    void d() -> d
    void a(net.youmi.android.a.k.a.h) -> a
    void a(net.youmi.android.a.k.a.f) -> a
    void setEnableOffersJsCodeLoader(boolean) -> setEnableOffersJsCodeLoader
    void setEnableOffersJsFileLoader(boolean) -> setEnableOffersJsFileLoader
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void setUserAgentString(java.lang.String) -> setUserAgentString
    java.lang.String getUserAgentString() -> getUserAgentString
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Context a(net.youmi.android.a.k.a.l) -> a
net.youmi.android.a.k.a.m -> net.youmi.android.a.k.a.m:
    net.youmi.android.a.k.a.l a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.youmi.android.a.k.a.n -> net.youmi.android.a.k.a.n:
    android.widget.TextView a -> a
    android.widget.Button b -> b
    android.widget.Button c -> c
    void setErrTips(java.lang.String) -> setErrTips
    android.widget.TextView getTipsView() -> getTipsView
    android.widget.Button getSetNetworkButton() -> getSetNetworkButton
    android.widget.Button getRefreshButton() -> getRefreshButton
net.youmi.android.a.k.a.o -> net.youmi.android.a.k.a.o:
    android.widget.ProgressBar a -> a
    android.widget.TextView b -> b
    net.youmi.android.a.k.a.q c -> c
    android.widget.LinearLayout d -> d
    void a(java.lang.String) -> a
    net.youmi.android.a.k.a.q getStyleConfig() -> getStyleConfig
net.youmi.android.a.k.a.p -> net.youmi.android.a.k.a.p:
net.youmi.android.a.k.a.q -> net.youmi.android.a.k.a.q:
    net.youmi.android.a.k.a.o a -> a
    float b -> b
    int c -> c
    android.graphics.drawable.Drawable d -> d
    int e -> e
    int f -> f
    net.youmi.android.a.k.a.q a(int) -> a
    net.youmi.android.a.k.a.q a(float) -> a
    net.youmi.android.a.k.a.q a(android.graphics.drawable.Drawable) -> a
    net.youmi.android.a.k.a.q b(int) -> b
net.youmi.android.b -> net.youmi.android.b:
    android.content.Context a -> a
    java.util.List b -> b
    net.youmi.android.ExpService c -> c
    void run() -> run
net.youmi.android.b.a.a -> net.youmi.android.b.a.a:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.youmi.android.b.a.b -> net.youmi.android.b.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String f() -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    boolean g() -> g
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.youmi.android.b.a.c -> net.youmi.android.b.a.c:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.youmi.android.b.b.a -> net.youmi.android.b.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    boolean g -> g
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    void c(android.content.Context,java.lang.String) -> c
    java.lang.String g(android.content.Context) -> g
    void a(boolean) -> a
    boolean b() -> b
net.youmi.android.b.b.b -> net.youmi.android.b.b.b:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
net.youmi.android.banner.AdSize -> net.youmi.android.banner.AdSize:
    int FILL_PARENT -> FILL_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int LANDSPACE_AD_HEIGHT -> LANDSPACE_AD_HEIGHT
    int PORAIT_AD_HEIGHT -> PORAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    net.youmi.android.banner.AdSize SIZE_320x50 -> SIZE_320x50
    net.youmi.android.banner.AdSize SIZE_300x250 -> SIZE_300x250
    net.youmi.android.banner.AdSize SIZE_468x60 -> SIZE_468x60
    net.youmi.android.banner.AdSize SIZE_728x90 -> SIZE_728x90
    net.youmi.android.banner.AdSize FIT_SCREEN -> FIT_SCREEN
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getAdWidth() -> getAdWidth
    int getAdHeight() -> getAdHeight
    int resizeWidth(android.content.Context) -> resizeWidth
    int resizeHeight(android.content.Context) -> resizeHeight
net.youmi.android.banner.AdView -> net.youmi.android.banner.AdView:
    net.youmi.android.banner.AdViewListener a -> a
    net.youmi.android.banner.e e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    net.youmi.android.banner.AdSize b -> b
    int c -> c
    int d -> d
    int h -> h
    boolean i -> i
    void a() -> a
    void setAdListener(net.youmi.android.banner.AdViewListener) -> setAdListener
    boolean a(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    int getVisibility() -> getVisibility
    void setVisibility(int) -> setVisibility
net.youmi.android.banner.AdViewListener -> net.youmi.android.banner.AdViewListener:
    void onReceivedAd(net.youmi.android.banner.AdView) -> onReceivedAd
    void onSwitchedAd(net.youmi.android.banner.AdView) -> onSwitchedAd
    void onFailedToReceivedAd(net.youmi.android.banner.AdView) -> onFailedToReceivedAd
net.youmi.android.banner.BannerManager -> net.youmi.android.banner.BannerManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    int b -> b
    java.util.HashMap a -> a
    int a() -> a
    void a(int) -> a
    java.lang.String checkPermissions(android.content.Context) -> checkPermissions
    net.youmi.android.banner.h getBannerObject(int) -> getBannerObject
    void setBannerObject(int,net.youmi.android.banner.h) -> setBannerObject
    boolean checkBannerAdConfig(android.content.Context) -> checkBannerAdConfig
    java.lang.String b() -> b
net.youmi.android.banner.a -> net.youmi.android.banner.a:
    android.content.Context f -> f
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.e b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.banner.b g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(net.youmi.android.banner.b) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    net.youmi.android.a.k.a.l e() -> e
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.banner.b -> net.youmi.android.banner.b:
    void b(int) -> b
net.youmi.android.banner.c -> net.youmi.android.banner.c:
    android.content.Context d -> d
    net.youmi.android.banner.d e -> e
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.e b -> b
    java.lang.String c -> c
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(net.youmi.android.banner.d) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    net.youmi.android.a.k.a.l c() -> c
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(android.webkit.WebView,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.banner.d -> net.youmi.android.banner.d:
    void c(int) -> c
net.youmi.android.banner.e -> net.youmi.android.banner.e:
    android.content.Context a -> a
    int i -> i
    android.os.Handler b -> b
    net.youmi.android.banner.AdView c -> c
    int d -> d
    int j -> j
    java.util.Timer k -> k
    net.youmi.android.banner.f l -> l
    int e -> e
    net.youmi.android.banner.g f -> f
    net.youmi.android.banner.a g -> g
    net.youmi.android.banner.c h -> h
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void c(int) -> c
    void b(int) -> b
    void b(net.youmi.android.banner.h) -> b
    void a(net.youmi.android.banner.h) -> a
    java.lang.String m() -> m
    void b(java.lang.String) -> b
    void k() -> k
    void l() -> l
    android.app.Activity b() -> b
    android.content.Context a() -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f c() -> c
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    int d() -> d
    int e() -> e
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
    java.lang.String n() -> n
    int a(net.youmi.android.banner.e) -> a
    void a(net.youmi.android.banner.e,net.youmi.android.banner.h) -> a
net.youmi.android.banner.f -> net.youmi.android.banner.f:
    net.youmi.android.banner.e a -> a
    void run() -> run
net.youmi.android.banner.g -> net.youmi.android.banner.g:
    net.youmi.android.banner.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.banner.h -> net.youmi.android.banner.h:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    void b(int) -> b
    java.lang.String g() -> g
    void f(java.lang.String) -> f
net.youmi.android.c.a -> net.youmi.android.c.a:
net.youmi.android.c.a.a -> net.youmi.android.c.a.a:
    android.view.animation.Animation a(android.content.Context,int) -> a
    android.view.animation.Animation b(android.content.Context,int) -> b
    android.view.animation.Animation c(android.content.Context,int) -> c
    android.view.animation.Animation d(android.content.Context,int) -> d
    android.view.animation.AnimationSet a(android.content.Context,int,int,int) -> a
net.youmi.android.c.b -> net.youmi.android.c.b:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
net.youmi.android.c.b.a -> net.youmi.android.c.b.a:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.c.b.b -> net.youmi.android.c.b.b:
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    double a(org.json.JSONObject,java.lang.String,double) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.youmi.android.c.b.c -> net.youmi.android.c.b.c:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
net.youmi.android.c.b.d -> net.youmi.android.c.b.d:
    java.util.Random a -> a
    int a(int) -> a
net.youmi.android.c.b.e -> net.youmi.android.c.b.e:
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.c.c -> net.youmi.android.c.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a() -> a
    java.lang.String j(android.content.Context) -> j
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String k(android.content.Context) -> k
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String l(android.content.Context) -> l
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void m(android.content.Context) -> m
    java.lang.String g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.c.c.a -> net.youmi.android.c.c.a:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.youmi.android.c.c.b -> net.youmi.android.c.c.b:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.youmi.android.c.c.c -> net.youmi.android.c.c.c:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.youmi.android.c.c.d -> net.youmi.android.c.c.d:
    java.lang.String a -> a
    char b -> b
net.youmi.android.c.c.e -> net.youmi.android.c.c.e:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.c.f -> net.youmi.android.c.c.f:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.youmi.android.c.c.g -> net.youmi.android.c.c.g:
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.youmi.android.c.c.h -> net.youmi.android.c.c.h:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.youmi.android.c.c.i -> net.youmi.android.c.c.i:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.c.d -> net.youmi.android.c.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a(java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
net.youmi.android.c.d.a -> net.youmi.android.c.d.a:
    java.lang.String a -> a
    android.database.sqlite.SQLiteDatabase$CursorFactory b -> b
    int c -> c
    android.content.Context d -> d
    android.database.sqlite.SQLiteDatabase e -> e
    boolean f -> f
    boolean g -> g
    android.database.sqlite.SQLiteDatabase a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
net.youmi.android.c.e.a -> net.youmi.android.c.e.a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a() -> a
    void a(boolean) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Object[]) -> b
    void c(java.lang.String,java.lang.Object[]) -> c
    void b(java.lang.String,java.lang.String,java.lang.Object[]) -> b
    void b(java.lang.Throwable) -> b
    void d(java.lang.String,java.lang.Object[]) -> d
    void a(int,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
net.youmi.android.c.e.b -> net.youmi.android.c.e.b:
    java.lang.String a -> a
    java.lang.String a() -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    void b(java.lang.Throwable) -> b
    void a(java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.Throwable) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.String,java.lang.Throwable) -> c
net.youmi.android.c.e.c -> net.youmi.android.c.e.c:
    java.util.Hashtable a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.c.f.a -> net.youmi.android.c.f.a:
    long a -> a
    long b -> b
    java.io.File c -> c
    void b() -> b
    java.io.File[] a() -> a
    java.lang.String a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    void c() -> c
    java.io.File a(net.youmi.android.c.f.a) -> a
    boolean a(net.youmi.android.c.f.a,java.io.File) -> a
    long b(net.youmi.android.c.f.a) -> b
net.youmi.android.c.f.b -> net.youmi.android.c.f.b:
    net.youmi.android.c.f.a a -> a
    void run() -> run
net.youmi.android.c.f.c -> net.youmi.android.c.f.c:
    net.youmi.android.c.f.a a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.youmi.android.c.g.a -> net.youmi.android.c.g.a:
    org.apache.http.client.methods.HttpUriRequest a -> a
    long b -> b
    org.apache.http.client.HttpClient c -> c
    net.youmi.android.c.g.b d -> d
    net.youmi.android.c.g.c e -> e
    android.content.Context f -> f
    long a() -> a
    void a(net.youmi.android.c.g.b) -> a
    void b() -> b
    void a(org.apache.http.HttpResponse) -> a
    void c() -> c
    void a(org.apache.http.HttpResponse,long) -> a
    org.apache.http.HttpResponse d() -> d
    void a(int) -> a
net.youmi.android.c.g.b -> net.youmi.android.c.g.b:
    org.apache.http.Header[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    long e -> e
    long f -> f
    boolean g -> g
    boolean h -> h
    org.apache.http.Header[] i -> i
    int a() -> a
    void a(int) -> a
    org.apache.http.Header[] b() -> b
    void a(org.apache.http.Header[]) -> a
    int c() -> c
    void b(int) -> b
    void a(java.lang.String) -> a
    long d() -> d
    void a(long) -> a
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    void a(boolean) -> a
    org.apache.http.Header[] g() -> g
    void b(org.apache.http.Header[]) -> b
net.youmi.android.c.g.c -> net.youmi.android.c.g.c:
    java.lang.String a -> a
    boolean b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.util.List c() -> c
    void a(java.util.List) -> a
    java.util.List d() -> d
    void b(java.util.List) -> b
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String a(java.util.Map) -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.c.g.d -> net.youmi.android.c.g.d:
    java.lang.String g -> g
    void a(org.apache.http.HttpResponse) -> a
    void b() -> b
    java.lang.String d() -> d
    java.lang.String a(android.content.Context,org.apache.http.HttpResponse,java.lang.String,boolean) -> a
net.youmi.android.c.g.e -> net.youmi.android.c.g.e:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    long i -> i
    boolean a(java.lang.String) -> a
    void a() -> a
    void a(android.content.Context,org.json.JSONObject) -> a
net.youmi.android.c.g.f -> net.youmi.android.c.g.f:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.c.g.g -> net.youmi.android.c.g.g:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.c.h.a -> net.youmi.android.c.h.a:
    void a(java.lang.String) -> a
net.youmi.android.c.h.b -> net.youmi.android.c.h.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
net.youmi.android.c.h.c -> net.youmi.android.c.h.c:
    java.lang.String a(android.content.Context) -> a
net.youmi.android.c.h.d -> net.youmi.android.c.h.d:
    android.content.Context a -> a
    long b -> b
    long c -> c
    boolean d -> d
    java.lang.String e -> e
    java.io.File f -> f
    int a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
net.youmi.android.c.h.e -> net.youmi.android.c.h.e:
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,boolean,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,java.lang.String,org.apache.http.Header[],net.youmi.android.c.h.b) -> a
net.youmi.android.c.h.f -> net.youmi.android.c.h.f:
    net.youmi.android.c.g.b a -> a
    net.youmi.android.c.g.d b -> b
    android.content.Context c -> c
    net.youmi.android.c.g.c d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    void run() -> run
net.youmi.android.c.h.g -> net.youmi.android.c.h.g:
    net.youmi.android.c.g.b a -> a
    net.youmi.android.c.g.d b -> b
    android.content.Context c -> c
    net.youmi.android.c.g.c d -> d
    java.lang.String e -> e
    java.util.List f -> f
    void run() -> run
net.youmi.android.c.h.h -> net.youmi.android.c.h.h:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.youmi.android.c.h.a) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
net.youmi.android.c.h.i -> net.youmi.android.c.h.i:
    void a(java.lang.String) -> a
net.youmi.android.c.h.j -> net.youmi.android.c.h.j:
    net.youmi.android.c.h.a a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.youmi.android.c.h.k -> net.youmi.android.c.h.k:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    int c(android.content.Context) -> c
net.youmi.android.c.i.a -> net.youmi.android.c.i.a:
    byte[] a -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.c.i.b -> net.youmi.android.c.i.b:
    android.graphics.Bitmap b -> b
net.youmi.android.c.j.a -> net.youmi.android.c.j.a:
    net.youmi.android.c.j.a a -> a
    android.os.Handler b -> b
    net.youmi.android.c.j.a a() -> a
    boolean b() -> b
    boolean a(java.lang.Runnable) -> a
    boolean a(java.lang.Runnable,long) -> a
net.youmi.android.c.k.a -> net.youmi.android.c.k.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.youmi.android.c.k.b -> net.youmi.android.c.k.b:
    boolean a(android.content.Context,java.lang.Class) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    android.content.pm.ActivityInfo b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.Class) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    android.content.pm.ServiceInfo d(android.content.Context,java.lang.String) -> d
    boolean c(android.content.Context,java.lang.Class) -> c
    boolean e(android.content.Context,java.lang.String) -> e
    android.content.pm.ActivityInfo f(android.content.Context,java.lang.String) -> f
net.youmi.android.c.k.c -> net.youmi.android.c.k.c:
    long a() -> a
    long a(android.content.Context) -> a
net.youmi.android.c.k.d -> net.youmi.android.c.k.d:
    boolean a -> a
    int b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    float f() -> f
    net.youmi.android.c.k.d a(android.content.Context) -> a
    net.youmi.android.c.k.d b(android.content.Context) -> b
    int g() -> g
    int h() -> h
    int a(int) -> a
    int b(int) -> b
    float a(float) -> a
net.youmi.android.c.k.e -> net.youmi.android.c.k.e:
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.k.f -> net.youmi.android.c.k.f:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean c(android.content.Context,java.lang.String,int) -> c
    boolean d(android.content.Context,java.lang.String,int) -> d
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
net.youmi.android.c.k.g -> net.youmi.android.c.k.g:
    void a(android.content.Context) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.c.k.h -> net.youmi.android.c.k.h:
    java.lang.String a(android.content.Context) -> a
    net.youmi.android.c.k.a a(android.content.Context,java.lang.String) -> a
    android.content.pm.PackageInfo b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    android.content.Intent c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
net.youmi.android.c.k.i -> net.youmi.android.c.k.i:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    boolean i(android.content.Context) -> i
    boolean j(android.content.Context) -> j
net.youmi.android.c.k.j -> net.youmi.android.c.k.j:
    boolean a(android.content.Context) -> a
net.youmi.android.c.k.k -> net.youmi.android.c.k.k:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b() -> b
    java.lang.String c() -> c
    long b(android.content.Context) -> b
net.youmi.android.c.k.l -> net.youmi.android.c.k.l:
    android.telephony.TelephonyManager a(android.content.Context) -> a
    android.net.wifi.WifiManager b(android.content.Context) -> b
net.youmi.android.c.l.a -> net.youmi.android.c.l.a:
    java.util.List a -> a
    java.util.List b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
net.youmi.android.c.m.a -> net.youmi.android.c.m.a:
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams b -> b
    android.widget.LinearLayout c -> c
    android.view.View d -> d
    boolean a() -> a
    boolean b() -> b
    void a(android.view.animation.Animation) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.d.a -> net.youmi.android.d.a:
    net.youmi.android.i.a d -> d
    net.youmi.android.d.b e -> e
    void a(net.youmi.android.d.b) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context,net.youmi.android.a.h.p) -> a
    net.youmi.android.d.a b(android.content.Context,net.youmi.android.a.h.p) -> b
    void onClick(android.view.View) -> onClick
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.d.a.a -> net.youmi.android.d.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    long e -> e
    int f -> f
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    long c() -> c
    void a(long) -> a
    long d() -> d
    void b(long) -> b
    long e() -> e
    void c(long) -> c
    int f() -> f
    void a(int) -> a
    java.lang.String toString() -> toString
net.youmi.android.d.a.b -> net.youmi.android.d.a.b:
    android.content.Context a -> a
    net.youmi.android.d.a.a b -> b
    void a() -> a
net.youmi.android.d.a.c -> net.youmi.android.d.a.c:
    int b -> b
    int c -> c
    int a -> a
    net.youmi.android.d.a.h d -> d
    android.content.Context e -> e
    int b() -> b
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void c() -> c
    void a(java.lang.String,long) -> a
    boolean a(net.youmi.android.d.a.c,java.lang.String) -> a
    android.content.Context a(net.youmi.android.d.a.c) -> a
net.youmi.android.d.a.d -> net.youmi.android.d.a.d:
    java.lang.String a -> a
    net.youmi.android.d.a.c b -> b
    void run() -> run
net.youmi.android.d.a.e -> net.youmi.android.d.a.e:
    java.lang.String a -> a
    net.youmi.android.d.a.c b -> b
    void run() -> run
net.youmi.android.d.a.f -> net.youmi.android.d.a.f:
    net.youmi.android.d.a.c a -> a
    void run() -> run
net.youmi.android.d.a.g -> net.youmi.android.d.a.g:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.a.h -> net.youmi.android.d.a.h:
    net.youmi.android.d.a.g a -> a
    java.lang.String b -> b
    net.youmi.android.d.a.h c -> c
    net.youmi.android.d.a.h a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.a.a) -> a
    void b(net.youmi.android.d.a.a) -> b
    void a() -> a
    void c(net.youmi.android.d.a.a) -> c
    void a(java.lang.String) -> a
    void b() -> b
    java.util.List c() -> c
    net.youmi.android.d.a.a b(java.lang.String) -> b
    net.youmi.android.d.a.a d() -> d
net.youmi.android.d.a.i -> net.youmi.android.d.a.i:
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.a.j -> net.youmi.android.d.a.j:
    net.youmi.android.d.a.j a -> a
    net.youmi.android.d.a.j a() -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.a.k -> net.youmi.android.d.a.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,net.youmi.android.d.a.a,long,long) -> a
    void a(android.content.Context,net.youmi.android.d.a.a) -> a
    void b(android.content.Context,net.youmi.android.d.a.a) -> b
    void a(android.content.Context,long) -> a
    void b(android.content.Context,long) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
net.youmi.android.d.a.l -> net.youmi.android.d.a.l:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.a.m -> net.youmi.android.d.a.m:
    java.lang.String a -> a
    net.youmi.android.d.a.l b -> b
    net.youmi.android.d.a.m c -> c
    net.youmi.android.d.a.m a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.a.n) -> a
    int b(net.youmi.android.d.a.n) -> b
    net.youmi.android.d.a.n a(java.lang.String) -> a
net.youmi.android.d.a.n -> net.youmi.android.d.a.n:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
    int e() -> e
    void c(int) -> c
    int f() -> f
    void d(int) -> d
    java.lang.String g() -> g
    void c(java.lang.String) -> c
    java.lang.String toString() -> toString
net.youmi.android.d.a.o -> net.youmi.android.d.a.o:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.d.b -> net.youmi.android.d.b:
    void onDialogClose() -> onDialogClose
net.youmi.android.d.b.a -> net.youmi.android.d.b.a:
    net.youmi.android.d.b.a d -> d
    net.youmi.android.d.b.h a -> a
    net.youmi.android.d.b.g b -> b
    android.util.SparseArray e -> e
    android.util.SparseArray f -> f
    net.youmi.android.d.b.a a(android.content.Context) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void c(net.youmi.android.e.b.b) -> c
    void a(int) -> a
    java.lang.String a(java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void d(java.lang.String) -> d
    void d() -> d
    void a(java.lang.String,net.youmi.android.a.h.i,net.youmi.android.e.b.b) -> a
    void b(java.io.File) -> b
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.j l(net.youmi.android.e.b.b) -> l
    net.youmi.android.a.h.o d(net.youmi.android.e.b.b) -> d
    net.youmi.android.a.h.i e(net.youmi.android.e.b.b) -> e
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int f(net.youmi.android.e.b.b) -> f
    net.youmi.android.a.h.j a(net.youmi.android.d.b.a,net.youmi.android.e.b.b) -> a
    android.content.Context a(net.youmi.android.d.b.a) -> a
    void a(net.youmi.android.d.b.a,java.lang.String) -> a
    java.lang.String a(net.youmi.android.d.b.a,java.io.File) -> a
    android.content.Context b(net.youmi.android.d.b.a) -> b
    void a(net.youmi.android.d.b.a,java.lang.String,net.youmi.android.a.h.i,net.youmi.android.e.b.b) -> a
    void c(net.youmi.android.d.b.a) -> c
    void b(net.youmi.android.d.b.a,java.io.File) -> b
    android.content.Context d(net.youmi.android.d.b.a) -> d
    android.content.Context e(net.youmi.android.d.b.a) -> e
net.youmi.android.d.b.b -> net.youmi.android.d.b.b:
    net.youmi.android.e.b.b a -> a
    net.youmi.android.d.b.a b -> b
    void run() -> run
net.youmi.android.d.b.c -> net.youmi.android.d.b.c:
    java.io.File a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.d.b.a c -> c
    void run() -> run
net.youmi.android.d.b.d -> net.youmi.android.d.b.d:
    java.io.File a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.d.b.a c -> c
    void run() -> run
net.youmi.android.d.b.e -> net.youmi.android.d.b.e:
    java.lang.String a -> a
    net.youmi.android.d.b.a b -> b
    void run() -> run
net.youmi.android.d.b.f -> net.youmi.android.d.b.f:
    int a -> a
    android.app.Notification b -> b
    android.app.PendingIntent c -> c
    android.app.PendingIntent d -> d
    android.app.NotificationManager e -> e
    android.content.Context f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.a h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean c(java.lang.String) -> c
    void a(int,long) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String) -> b
net.youmi.android.d.b.g -> net.youmi.android.d.b.g:
    net.youmi.android.d.b.a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    net.youmi.android.d.b.f d(net.youmi.android.e.b.b) -> d
    int c(net.youmi.android.e.b.b) -> c
    void a(android.content.Context,int,java.lang.String) -> a
    void a(int) -> a
net.youmi.android.d.b.h -> net.youmi.android.d.b.h:
    net.youmi.android.d.b.a a -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    void a(net.youmi.android.e.b.b,int,int,long) -> a
    void a(net.youmi.android.a.h.i,net.youmi.android.a.h.o,int,int,long) -> a
    void a(int) -> a
net.youmi.android.d.b.i -> net.youmi.android.d.b.i:
    net.youmi.android.AdReceiver a -> a
    void a(android.content.Context) -> a
net.youmi.android.d.b.j -> net.youmi.android.d.b.j:
    java.lang.String a -> a
    android.content.Context b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    boolean f -> f
    void a(android.content.Context) -> a
    void run() -> run
net.youmi.android.d.b.k -> net.youmi.android.d.b.k:
    int a -> a
    int b -> b
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.d.b.l -> net.youmi.android.d.b.l:
    net.youmi.android.d.b.l a -> a
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.d.b.l b() -> b
net.youmi.android.d.c -> net.youmi.android.d.c:
    android.app.Activity a -> a
    net.youmi.android.a.h.p b -> b
    void run() -> run
net.youmi.android.d.c.a -> net.youmi.android.d.c.a:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.j,int) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.j) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,int,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
net.youmi.android.d.d.a -> net.youmi.android.d.d.a:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void run() -> run
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    void b(android.content.Context) -> b
net.youmi.android.d.d.b -> net.youmi.android.d.d.b:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.d.c -> net.youmi.android.d.d.c:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.e.a.a -> net.youmi.android.d.e.a.a:
    void a(android.content.Context) -> a
    void a(android.content.Intent) -> a
net.youmi.android.d.e.a.b -> net.youmi.android.d.e.a.b:
    net.youmi.android.d.e.a.b a -> a
    android.content.IntentFilter b -> b
    void b(android.content.Context) -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
net.youmi.android.d.e.a.c -> net.youmi.android.d.e.a.c:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void a(android.content.Context,java.util.List) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,int) -> a
    void run() -> run
    java.lang.String a() -> a
net.youmi.android.d.e.a.d -> net.youmi.android.d.e.a.d:
    android.content.Context a -> a
    net.youmi.android.a.h.j b -> b
    int[] c -> c
    void run() -> run
net.youmi.android.d.f.a -> net.youmi.android.d.f.a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.util.HashMap b() -> b
    java.util.HashMap c() -> c
    java.util.HashMap d() -> d
    java.util.HashMap a() -> a
net.youmi.android.d.f.a.a -> net.youmi.android.d.f.a.a:
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.d.g.a -> net.youmi.android.d.g.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.d.g.b -> net.youmi.android.d.g.b:
    net.youmi.android.d.g.a b -> b
    java.lang.String a -> a
    net.youmi.android.d.g.b c -> c
    net.youmi.android.d.g.b a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.d.g.c) -> a
    void b(net.youmi.android.d.g.c) -> b
    void a(java.lang.String) -> a
    java.util.List a() -> a
net.youmi.android.d.g.c -> net.youmi.android.d.g.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
net.youmi.android.d.g.d -> net.youmi.android.d.g.d:
    android.content.Context a -> a
    net.youmi.android.d.g.d b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.Timer e -> e
    net.youmi.android.d.g.d a(android.content.Context) -> a
    void a() -> a
    void f() -> f
    void b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.List a(java.util.List) -> a
    java.util.Timer e() -> e
    java.util.Timer a(java.util.Timer) -> a
    android.content.Context a(net.youmi.android.d.g.d) -> a
net.youmi.android.d.g.e -> net.youmi.android.d.g.e:
    net.youmi.android.d.g.d a -> a
    void run() -> run
net.youmi.android.d.g.f -> net.youmi.android.d.g.f:
    net.youmi.android.d.g.e a -> a
    void run() -> run
net.youmi.android.d.h.a -> net.youmi.android.d.h.a:
    android.content.Context a -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.d.h.b -> net.youmi.android.d.h.b:
    android.content.Context a -> a
    android.content.Context b -> b
    android.widget.Toast c -> c
    void a(java.lang.String,int,int) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int,int) -> a
    void a() -> a
net.youmi.android.d.i.a -> net.youmi.android.d.i.a:
    android.app.Activity a -> a
    android.content.Context b -> b
    net.youmi.android.a.k.a.d c -> c
    net.youmi.android.a.h.l d -> d
    android.content.Context a() -> a
    android.app.Activity b() -> b
    android.content.Context g() -> g
    net.youmi.android.a.h.f c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
net.youmi.android.d.i.b -> net.youmi.android.d.i.b:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.c -> net.youmi.android.d.i.c:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.d -> net.youmi.android.d.i.d:
    net.youmi.android.d.i.a a -> a
    void run() -> run
net.youmi.android.d.i.e -> net.youmi.android.d.i.e:
    net.youmi.android.a.h.i a -> a
    net.youmi.android.a.h.o b -> b
    net.youmi.android.d.i.a c -> c
    void run() -> run
net.youmi.android.dev.AppUpdateInfo -> net.youmi.android.dev.AppUpdateInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int getVersionCode() -> getVersionCode
    void a(int) -> a
    java.lang.String getVersionName() -> getVersionName
    void a(java.lang.String) -> a
    java.lang.String getUpdateTips() -> getUpdateTips
    void b(java.lang.String) -> b
    java.lang.String getUrl() -> getUrl
    void c(java.lang.String) -> c
net.youmi.android.dev.CheckAppUpdateCallBack -> net.youmi.android.dev.CheckAppUpdateCallBack:
    void onCheckAppUpdateFinish(net.youmi.android.dev.AppUpdateInfo) -> onCheckAppUpdateFinish
net.youmi.android.dev.OnlineConfigCallBack -> net.youmi.android.dev.OnlineConfigCallBack:
    void onGetOnlineConfigSuccessful(java.lang.String,java.lang.String) -> onGetOnlineConfigSuccessful
    void onGetOnlineConfigFailed(java.lang.String) -> onGetOnlineConfigFailed
net.youmi.android.dev.a -> net.youmi.android.dev.a:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
net.youmi.android.dev.b -> net.youmi.android.dev.b:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    net.youmi.android.dev.AppUpdateInfo a(android.content.Context,java.lang.String) -> a
    net.youmi.android.dev.AppUpdateInfo b(android.content.Context) -> b
net.youmi.android.dev.c -> net.youmi.android.dev.c:
    net.youmi.android.dev.CheckAppUpdateCallBack a -> a
    android.content.Context b -> b
    void run() -> run
    void a(net.youmi.android.dev.AppUpdateInfo) -> a
    net.youmi.android.dev.CheckAppUpdateCallBack a(net.youmi.android.dev.c) -> a
net.youmi.android.dev.d -> net.youmi.android.dev.d:
    net.youmi.android.dev.AppUpdateInfo a -> a
    net.youmi.android.dev.c b -> b
    void run() -> run
net.youmi.android.dev.e -> net.youmi.android.dev.e:
    net.youmi.android.dev.OnlineConfigCallBack a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
    void a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.dev.e) -> a
    net.youmi.android.dev.OnlineConfigCallBack b(net.youmi.android.dev.e) -> b
net.youmi.android.dev.f -> net.youmi.android.dev.f:
    java.lang.String a -> a
    net.youmi.android.dev.e b -> b
    void run() -> run
net.youmi.android.diy.AdObject -> net.youmi.android.diy.AdObject:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    android.graphics.Bitmap k -> k
    org.json.JSONArray l -> l
    java.util.ArrayList m -> m
    java.lang.String n -> n
    void setAdId(int) -> setAdId
    int getAdId() -> getAdId
    void setPackageName(java.lang.String) -> setPackageName
    java.lang.String getPackageName() -> getPackageName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getAppName() -> getAppName
    void setVersionCode(int) -> setVersionCode
    int getVersionCode() -> getVersionCode
    void setVersionName(java.lang.String) -> setVersionName
    java.lang.String getVersionName() -> getVersionName
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getDescription() -> getDescription
    void setAdText(java.lang.String) -> setAdText
    java.lang.String getAdText() -> getAdText
    void setSize(java.lang.String) -> setSize
    java.lang.String getSize() -> getSize
    void setCategory(java.lang.String) -> setCategory
    java.lang.String getCategory() -> getCategory
    android.graphics.Bitmap getIcon() -> getIcon
    void setIcon(android.graphics.Bitmap) -> setIcon
    java.lang.String getIconUrl() -> getIconUrl
    void setIconUrl(java.lang.String) -> setIconUrl
    java.util.ArrayList getScreenShortcuts() -> getScreenShortcuts
    void setAuthor(java.lang.String) -> setAuthor
    java.lang.String getAuthor() -> getAuthor
net.youmi.android.diy.DiyAdWebView -> net.youmi.android.diy.DiyAdWebView:
    net.youmi.android.diy.banner.a a -> a
    android.widget.RelativeLayout b -> b
    net.youmi.android.a.k.a.l c -> c
    net.youmi.android.a.h.l d -> d
    boolean e -> e
    int f -> f
    boolean g -> g
    android.content.Context h -> h
    net.youmi.android.diy.banner.DiyAdSize i -> i
    int j -> j
    boolean isInited() -> isInited
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void maybeNeedToInit() -> maybeNeedToInit
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    boolean canShowAdNow() -> canShowAdNow
    void run() -> run
net.youmi.android.diy.DiyManager -> net.youmi.android.diy.DiyManager:
    int b -> b
    boolean a -> a
    java.lang.String BANNERURL -> BANNERURL
    void showRecommendWall(android.content.Context) -> showRecommendWall
    void showRecommendGameWall(android.content.Context) -> showRecommendGameWall
    void showRecommendAppWall(android.content.Context) -> showRecommendAppWall
    void a(android.content.Context,int) -> a
    boolean checkDiyAdConfig(android.content.Context) -> checkDiyAdConfig
net.youmi.android.diy.a.a -> net.youmi.android.diy.a.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.diy.a.a.a -> net.youmi.android.diy.a.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.diy.a.a.b -> net.youmi.android.diy.a.a.b:
    int[] a -> a
net.youmi.android.diy.a.a.c -> net.youmi.android.diy.a.a.c:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.diy.banner.DiyAdSize -> net.youmi.android.diy.banner.DiyAdSize:
    int HEIGHT_BANNER -> HEIGHT_BANNER
    int HEIGHT_MINI_BANNER -> HEIGHT_MINI_BANNER
    int MATCH_SCREEN -> MATCH_SCREEN
    net.youmi.android.diy.banner.DiyAdSize SIZE_320x60 -> SIZE_320x60
    net.youmi.android.diy.banner.DiyAdSize SIZE_MATCH_SCREENx60 -> SIZE_MATCH_SCREENx60
    net.youmi.android.diy.banner.DiyAdSize SIZE_320x32 -> SIZE_320x32
    net.youmi.android.diy.banner.DiyAdSize SIZE_MATCH_SCREENx32 -> SIZE_MATCH_SCREENx32
    int a -> a
    int b -> b
    int getHeight() -> getHeight
    int getWidth() -> getWidth
net.youmi.android.diy.banner.DiyBanner -> net.youmi.android.diy.banner.DiyBanner:
    int TYPE_BANNER -> TYPE_BANNER
    int TYPE_MINI_BANNER -> TYPE_MINI_BANNER
    java.lang.String a(net.youmi.android.diy.banner.DiyAdSize) -> a
net.youmi.android.diy.banner.a -> net.youmi.android.diy.banner.a:
    net.youmi.android.diy.DiyAdWebView a -> a
    void run() -> run
    net.youmi.android.diy.DiyAdWebView a(net.youmi.android.diy.banner.a) -> a
net.youmi.android.diy.banner.b -> net.youmi.android.diy.banner.b:
    net.youmi.android.diy.banner.a a -> a
    void run() -> run
net.youmi.android.e.a.a -> net.youmi.android.e.a.a:
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    long l() -> l
    java.lang.String m() -> m
net.youmi.android.e.a.b -> net.youmi.android.e.a.b:
    java.lang.String a -> a
    net.youmi.android.e.a.d b -> b
    java.lang.String a() -> a
    net.youmi.android.e.a.d b() -> b
    byte[] a(byte[],java.lang.String,int) -> a
    boolean a(android.content.Context,java.lang.String,byte[],long,int) -> a
    byte[] a(android.content.Context,java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.e.a.c -> net.youmi.android.e.a.c:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
net.youmi.android.e.a.d -> net.youmi.android.e.a.d:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    java.lang.String d -> d
    int e -> e
    android.database.sqlite.SQLiteDatabase f -> f
    net.youmi.android.e.a.d d(android.content.Context) -> d
    net.youmi.android.e.a.d e(android.content.Context) -> e
    net.youmi.android.e.a.d f(android.content.Context) -> f
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String b() -> b
    java.lang.String c(java.lang.String) -> c
    boolean a(java.lang.String,byte[],long) -> a
    boolean a(java.util.List) -> a
    byte[] a(java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,byte[]) -> a
    void a(android.content.ContentValues,java.lang.String,long) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String) -> a
    int a(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String) -> a
    void a() -> a
    boolean b(java.lang.String) -> b
    boolean d(java.lang.String) -> d
    void close() -> close
net.youmi.android.e.a.e -> net.youmi.android.e.a.e:
    java.lang.String a -> a
    byte[] b -> b
    long c -> c
    byte[] a() -> a
    java.lang.String b() -> b
    long c() -> c
net.youmi.android.e.a.f -> net.youmi.android.e.a.f:
    net.youmi.android.e.a.g a -> a
    int a() -> a
    net.youmi.android.e.a.d b() -> b
    boolean a(net.youmi.android.e.a.a) -> a
    java.lang.String c() -> c
    boolean b(net.youmi.android.e.a.a) -> b
    boolean c(java.lang.String) -> c
net.youmi.android.e.a.g -> net.youmi.android.e.a.g:
    net.youmi.android.e.a.b a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String a() -> a
    net.youmi.android.e.a.d b() -> b
    boolean a(java.lang.String,java.lang.String,long) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    int c() -> c
net.youmi.android.e.b.a -> net.youmi.android.e.b.a:
net.youmi.android.e.b.a.a -> net.youmi.android.e.b.a.a:
    boolean b(java.lang.String) -> b
    void b(net.youmi.android.e.b.b) -> b
    void j(net.youmi.android.e.b.b) -> j
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void c(net.youmi.android.e.b.b) -> c
    void k(net.youmi.android.e.b.b) -> k
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,long,long,int,long) -> a
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> b
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> b
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
net.youmi.android.e.b.a.b -> net.youmi.android.e.b.a.b:
    android.content.Context a -> a
    net.youmi.android.c.f.a b -> b
    java.util.HashMap c -> c
    java.util.HashSet d -> d
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap a(net.youmi.android.e.b.b) -> a
    android.graphics.Bitmap a(java.io.File) -> a
    boolean a(net.youmi.android.e.b.b,android.graphics.Bitmap) -> a
    void i(net.youmi.android.e.b.b) -> i
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.c -> net.youmi.android.e.b.a.c:
    java.util.HashSet a -> a
    java.util.HashMap b -> b
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    android.content.Context c -> c
    android.content.Context c() -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.io.File a(net.youmi.android.e.b.b,java.lang.String) -> a
    net.youmi.android.c.f.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void j(net.youmi.android.e.b.b) -> j
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
    void h(net.youmi.android.e.b.b) -> h
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void k(net.youmi.android.e.b.b) -> k
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void i(net.youmi.android.e.b.b) -> i
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.g) -> a
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.d -> net.youmi.android.e.b.a.d:
    net.youmi.android.e.b.a.d a -> a
    int b -> b
    int c -> c
    java.util.HashMap d -> d
    net.youmi.android.e.b.a.d a() -> a
    boolean a(android.content.Context,net.youmi.android.e.b.b,java.io.File,net.youmi.android.e.b.e) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,net.youmi.android.e.b.a.j) -> a
net.youmi.android.e.b.a.e -> net.youmi.android.e.b.a.e:
    net.youmi.android.e.b.a.e a(java.lang.String,java.lang.String) -> a
net.youmi.android.e.b.a.f -> net.youmi.android.e.b.a.f:
    int a -> a
    java.io.File b -> b
    java.io.File c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    net.youmi.android.c.h.d h -> h
    android.content.Context i -> i
    int j -> j
    int k -> k
    void run() -> run
    void a(boolean) -> a
    void f() -> f
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    long d() -> d
    int e() -> e
net.youmi.android.e.b.a.g -> net.youmi.android.e.b.a.g:
    net.youmi.android.e.b.h a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void a() -> a
    void b() -> b
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    void run() -> run
net.youmi.android.e.b.a.h -> net.youmi.android.e.b.a.h:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.e.b.a.i -> net.youmi.android.e.b.a.i:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.e.b.a.j -> net.youmi.android.e.b.a.j:
    boolean a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.e.b.a.f c -> c
    java.io.File d -> d
    java.io.File e -> e
    android.content.Context f -> f
    net.youmi.android.e.b.a.k g -> g
    net.youmi.android.e.b.e h -> h
    net.youmi.android.e.b.b.a i -> i
    net.youmi.android.e.b.b.f j -> j
    net.youmi.android.e.b.b.g k -> k
    net.youmi.android.e.b.b.b l -> l
    net.youmi.android.e.b.b.j m -> m
    net.youmi.android.e.b.b.i n -> n
    net.youmi.android.e.b.b.h o -> o
    net.youmi.android.e.b.b.e p -> p
    net.youmi.android.e.b.b.d q -> q
    net.youmi.android.e.b.b.c r -> r
    void a(java.io.File) -> a
    int hashCode() -> hashCode
    java.io.File a() -> a
    java.io.File b() -> b
    net.youmi.android.e.b.b c() -> c
    net.youmi.android.e.b.a.f d() -> d
    net.youmi.android.e.b.e e() -> e
    boolean f() -> f
    net.youmi.android.e.b.b.a t() -> t
    net.youmi.android.e.b.b.a g() -> g
    net.youmi.android.e.b.b.a h() -> h
    net.youmi.android.e.b.b.a i() -> i
    net.youmi.android.e.b.b.a j() -> j
    net.youmi.android.e.b.b.a k() -> k
    net.youmi.android.e.b.b.a l() -> l
    net.youmi.android.e.b.b.a m() -> m
    net.youmi.android.e.b.b.a n() -> n
    void a(net.youmi.android.e.b.b.a) -> a
    boolean o() -> o
    java.lang.Void a(java.lang.Void[]) -> a
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void a(int,long,long,long) -> a
    void a(net.youmi.android.e.b.a.k[]) -> a
    void a(net.youmi.android.e.b.a.k) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.e.b.a.k -> net.youmi.android.e.b.a.k:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
net.youmi.android.e.b.b -> net.youmi.android.e.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(long) -> a
    long d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    java.lang.String f() -> f
net.youmi.android.e.b.b.a -> net.youmi.android.e.b.b.a:
    long a -> a
    net.youmi.android.e.b.a.j b -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.b -> net.youmi.android.e.b.b.b:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.c -> net.youmi.android.e.b.b.c:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.d -> net.youmi.android.e.b.b.d:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.e -> net.youmi.android.e.b.b.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.f -> net.youmi.android.e.b.b.f:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.g -> net.youmi.android.e.b.b.g:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.h -> net.youmi.android.e.b.b.h:
    long c -> c
    boolean d -> d
    long e -> e
    int f -> f
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.i -> net.youmi.android.e.b.b.i:
    long c -> c
    boolean d -> d
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.j -> net.youmi.android.e.b.b.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.c -> net.youmi.android.e.b.c:
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(int) -> a
net.youmi.android.e.b.d -> net.youmi.android.e.b.d:
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.e.b.e -> net.youmi.android.e.b.e:
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.f -> net.youmi.android.e.b.f:
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
net.youmi.android.e.b.g -> net.youmi.android.e.b.g:
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void i(net.youmi.android.e.b.b) -> i
    void e(net.youmi.android.e.b.b,java.io.File) -> e
net.youmi.android.e.b.h -> net.youmi.android.e.b.h:
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.g,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.g) -> a
net.youmi.android.e.b.i -> net.youmi.android.e.b.i:
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.e.b.j -> net.youmi.android.e.b.j:
    net.youmi.android.e.b.j a -> a
    net.youmi.android.e.b.j a() -> a
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.f.a -> net.youmi.android.f.a:
    android.content.Context e -> e
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams f -> f
    android.widget.LinearLayout b -> b
    net.youmi.android.f.g c -> c
    int g -> g
    boolean h -> h
    int d -> d
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
net.youmi.android.f.a.a -> net.youmi.android.f.a.a:
    java.lang.String[] a -> a
    net.youmi.android.f.a.d b -> b
    net.youmi.android.f.a.d c -> c
    net.youmi.android.f.a.d d -> d
    net.youmi.android.f.a.d e -> e
    net.youmi.android.f.a.d f -> f
    net.youmi.android.f.a.d g -> g
    net.youmi.android.f.a.d[] l -> l
    java.lang.String a() -> a
    void a(java.lang.String,int,int,long,int,long) -> a
    void a(java.lang.String,long) -> a
    net.youmi.android.f.c.a a(java.lang.String) -> a
    java.util.ArrayList a(int) -> a
    long b(java.lang.String) -> b
net.youmi.android.f.a.b -> net.youmi.android.f.a.b:
    android.database.sqlite.SQLiteDatabase c -> c
    net.youmi.android.f.a.a a -> a
    net.youmi.android.f.a.b d -> d
    net.youmi.android.f.a.c b -> b
    void a(android.content.Context) -> a
    net.youmi.android.f.a.b b(android.content.Context) -> b
net.youmi.android.f.a.c -> net.youmi.android.f.a.c:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
net.youmi.android.f.a.d -> net.youmi.android.f.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
net.youmi.android.f.a.e -> net.youmi.android.f.a.e:
    java.lang.String h -> h
    android.database.sqlite.SQLiteDatabase i -> i
    net.youmi.android.f.a.d[] j -> j
    java.lang.String a(java.lang.String,net.youmi.android.f.a.d[]) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
net.youmi.android.f.a.f -> net.youmi.android.f.a.f:
net.youmi.android.f.a.g -> net.youmi.android.f.a.g:
    net.youmi.android.f.a.d k -> k
net.youmi.android.f.b -> net.youmi.android.f.b:
    int c -> c
    int d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    void a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,int) -> a
    int a() -> a
    int b() -> b
net.youmi.android.f.b.a -> net.youmi.android.f.b.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.f.b.a.a -> net.youmi.android.f.b.a.a:
    java.lang.String a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.f.b.a.b -> net.youmi.android.f.b.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.f.b.a.c -> net.youmi.android.f.b.a.c:
    int[] a -> a
net.youmi.android.f.b.b -> net.youmi.android.f.b.b:
    int e -> e
    android.content.Context a() -> a
    net.youmi.android.a.h.f c() -> c
    android.app.Activity b() -> b
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f f() -> f
    net.youmi.android.a.h.f a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.f b(net.youmi.android.a.h.p) -> b
    net.youmi.android.a.h.f a(net.youmi.android.a.h.p) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.i,net.youmi.android.a.h.o) -> a
    net.youmi.android.a.h.f a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.f a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.f a(java.lang.String) -> a
    void a(net.youmi.android.a.k.a.d) -> a
    net.youmi.android.a.h.f a(int,net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.f a(net.youmi.android.a.h.n) -> a
    net.youmi.android.a.h.f a(int) -> a
net.youmi.android.f.c -> net.youmi.android.f.c:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
net.youmi.android.f.c.a -> net.youmi.android.f.c.a:
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    long b() -> b
    void b(long) -> b
    void c(long) -> c
    long c() -> c
    void d(long) -> d
    void e(long) -> e
net.youmi.android.f.d -> net.youmi.android.f.d:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.f.e -> net.youmi.android.f.e:
    void a(android.content.Context,int) -> a
    void a(android.content.Context,long) -> a
    void a(android.content.Context) -> a
    net.youmi.android.f.a.b b(android.content.Context) -> b
    int c(android.content.Context) -> c
net.youmi.android.f.f -> net.youmi.android.f.f:
    net.youmi.android.a.k.a.e e -> e
    net.youmi.android.a.k.a.o f -> f
    net.youmi.android.a.k.a.g g -> g
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout h -> h
    net.youmi.android.a.h.d i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    android.content.Context l -> l
    void a(java.lang.String) -> a
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
net.youmi.android.f.g -> net.youmi.android.f.g:
    android.widget.RelativeLayout a -> a
    net.youmi.android.a.k.a.l b -> b
    net.youmi.android.a.h.l c -> c
    boolean d -> d
    boolean e -> e
    android.content.Context f -> f
    int g -> g
    int h -> h
    java.lang.String i -> i
    net.youmi.android.f.a j -> j
    int k -> k
    void setClickableToast(net.youmi.android.f.a) -> setClickableToast
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    void run() -> run
    net.youmi.android.f.a a(net.youmi.android.f.g) -> a
    net.youmi.android.f.a a(net.youmi.android.f.g,net.youmi.android.f.a) -> a
net.youmi.android.f.h -> net.youmi.android.f.h:
    net.youmi.android.f.g a -> a
    void run() -> run
net.youmi.android.g.a -> net.youmi.android.g.a:
    net.youmi.android.g.a a(java.lang.String) -> a
    net.youmi.android.g.a b(java.lang.String) -> b
    net.youmi.android.g.a a(long) -> a
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.a.a -> net.youmi.android.g.a.a:
    boolean a(long,long) -> a
net.youmi.android.g.a.b -> net.youmi.android.g.a.b:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.g.b -> net.youmi.android.g.b:
    java.util.HashMap a -> a
    net.youmi.android.g.f a() -> a
    net.youmi.android.g.a b() -> b
    net.youmi.android.g.b c() -> c
    net.youmi.android.g.b c(java.lang.String) -> c
    net.youmi.android.g.b d(java.lang.String) -> d
    net.youmi.android.g.b e(java.lang.String) -> e
    net.youmi.android.g.b f(java.lang.String) -> f
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.c -> net.youmi.android.g.c:
    java.lang.String a -> a
    net.youmi.android.g.c b -> b
    net.youmi.android.g.c a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(net.youmi.android.g.e) -> a
    boolean a(java.util.List) -> a
    boolean b(java.util.List) -> b
    java.util.List a(int,int) -> a
net.youmi.android.g.d -> net.youmi.android.g.d:
    void a(android.content.Context) -> a
    boolean b(android.content.Context,net.youmi.android.g.e) -> b
    boolean b(android.content.Context,java.util.List) -> b
    org.apache.http.params.HttpParams b(android.content.Context) -> b
    boolean a(android.content.Context,net.youmi.android.g.e) -> a
    boolean a(android.content.Context,java.util.List) -> a
net.youmi.android.g.e -> net.youmi.android.g.e:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    long d() -> d
    void a(long) -> a
    int e() -> e
    void b(int) -> b
net.youmi.android.g.f -> net.youmi.android.g.f:
    net.youmi.android.g.f a(long) -> a
    net.youmi.android.g.f b(long) -> b
    net.youmi.android.g.f d() -> d
    net.youmi.android.g.e a(net.youmi.android.g.k) -> a
net.youmi.android.g.g -> net.youmi.android.g.g:
    net.youmi.android.g.k a -> a
    android.content.Context b -> b
    int c -> c
    void run() -> run
net.youmi.android.g.h -> net.youmi.android.g.h:
    java.lang.String a -> a
    net.youmi.android.g.h b -> b
    net.youmi.android.g.h a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    net.youmi.android.g.i a(int,java.lang.String) -> a
    boolean a(net.youmi.android.g.i) -> a
    boolean a(java.util.List) -> a
    java.util.List a(android.database.Cursor) -> a
net.youmi.android.g.i -> net.youmi.android.g.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    long c() -> c
    void a(long) -> a
    int d() -> d
    void b(int) -> b
net.youmi.android.g.j -> net.youmi.android.g.j:
    java.util.concurrent.ExecutorService a -> a
    android.content.Context b -> b
    net.youmi.android.g.e c -> c
    java.util.List d -> d
    void a(android.content.Context,java.util.List) -> a
    void run() -> run
net.youmi.android.g.k -> net.youmi.android.g.k:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Queue f -> f
    java.util.concurrent.ExecutorService g -> g
    java.lang.String a(java.lang.String) -> a
    void a(int) -> a
    net.youmi.android.g.k a(net.youmi.android.g.b) -> a
    java.lang.String a() -> a
    boolean b(net.youmi.android.g.b) -> b
    void b() -> b
    void c(net.youmi.android.g.b) -> c
net.youmi.android.h.a.a -> net.youmi.android.h.a.a:
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    java.lang.String l -> l
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String a(android.content.Context,net.youmi.android.banner.AdSize) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.h.a.b -> net.youmi.android.h.a.b:
    java.lang.String a(int) -> a
net.youmi.android.h.a.c -> net.youmi.android.h.a.c:
    java.lang.String a -> a
    java.lang.String a() -> a
net.youmi.android.i.a -> net.youmi.android.i.a:
net.youmi.android.i.a.a -> net.youmi.android.i.a.a:
    android.graphics.Bitmap a(java.lang.String) -> a
net.youmi.android.i.a.b -> net.youmi.android.i.a.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
net.youmi.android.i.b -> net.youmi.android.i.b:
    android.content.Context a -> a
    net.youmi.android.i.c b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.view.View e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(android.widget.TableRow,int,android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void setBackEnable(boolean) -> setBackEnable
    void setForwardEnable(boolean) -> setForwardEnable
    void onClick(android.view.View) -> onClick
net.youmi.android.i.c -> net.youmi.android.i.c:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
net.youmi.android.i.d -> net.youmi.android.i.d:
    void a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
    int[] d() -> d
    int[] e() -> e
    int[] f() -> f
net.youmi.android.i.e -> net.youmi.android.i.e:
    net.youmi.android.i.d a -> a
net.youmi.android.i.f -> net.youmi.android.i.f:
    net.youmi.android.i.d a -> a
net.youmi.android.offers.EarnPointsOrderInfo -> net.youmi.android.offers.EarnPointsOrderInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    long h -> h
    int i -> i
    java.lang.String getOrderID() -> getOrderID
    void a(java.lang.String) -> a
    int getChannelId() -> getChannelId
    void a(int) -> a
    java.lang.String getCustomUserID() -> getCustomUserID
    void b(java.lang.String) -> b
    int getStatus() -> getStatus
    void b(int) -> b
    java.lang.String getMessage() -> getMessage
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    int getPoints() -> getPoints
    void c(int) -> c
    long getSettlingTime() -> getSettlingTime
    void a(long) -> a
    int a() -> a
    void d(int) -> d
net.youmi.android.offers.EarnPointsOrderList -> net.youmi.android.offers.EarnPointsOrderList:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    java.lang.String getCurrencyName() -> getCurrencyName
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a() -> a
    net.youmi.android.offers.EarnPointsOrderInfo get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
net.youmi.android.offers.OffersAdSize -> net.youmi.android.offers.OffersAdSize:
    int HEIGHT_BANNER -> HEIGHT_BANNER
    int HEIGHT_MINI_BANNER -> HEIGHT_MINI_BANNER
    int MATCH_SCREEN -> MATCH_SCREEN
    net.youmi.android.offers.OffersAdSize SIZE_320x60 -> SIZE_320x60
    net.youmi.android.offers.OffersAdSize SIZE_MATCH_SCREENx60 -> SIZE_MATCH_SCREENx60
    net.youmi.android.offers.OffersAdSize SIZE_320x32 -> SIZE_320x32
    net.youmi.android.offers.OffersAdSize SIZE_MATCH_SCREENx32 -> SIZE_MATCH_SCREENx32
    int a -> a
    int b -> b
    int getHeight() -> getHeight
    int getWidth() -> getWidth
net.youmi.android.offers.OffersBanner -> net.youmi.android.offers.OffersBanner:
    java.lang.String a(net.youmi.android.offers.OffersAdSize) -> a
net.youmi.android.offers.OffersManager -> net.youmi.android.offers.OffersManager:
    int STYLE_SPOT_CENTER -> STYLE_SPOT_CENTER
    int STYLE_SPOT_TOP_DOWN_REVERSE -> STYLE_SPOT_TOP_DOWN_REVERSE
    net.youmi.android.offers.OffersManager a -> a
    android.content.Context b -> b
    net.youmi.android.offers.OffersManager getInstance(android.content.Context) -> getInstance
    boolean checkOffersAdConfig() -> checkOffersAdConfig
    boolean checkOffersAdConfig(boolean) -> checkOffersAdConfig
    android.content.Intent getShowOffersWallIntent(int) -> getShowOffersWallIntent
    boolean showOffersSpot() -> showOffersSpot
    boolean showOffersSpot(int) -> showOffersSpot
    void showOffersWall() -> showOffersWall
    void showOffersWallDialog(android.app.Activity,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void setCustomUserId(java.lang.String) -> setCustomUserId
    java.lang.String getCustomUserId() -> getCustomUserId
    void onAppLaunch() -> onAppLaunch
    void onAppExit() -> onAppExit
    android.content.Context a(net.youmi.android.offers.OffersManager) -> a
net.youmi.android.offers.OffersReceiver -> net.youmi.android.offers.OffersReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.offers.OffersWallDialogListener -> net.youmi.android.offers.OffersWallDialogListener:
net.youmi.android.offers.PointsChangeNotify -> net.youmi.android.offers.PointsChangeNotify:
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.PointsManager -> net.youmi.android.offers.PointsManager:
    android.content.Context a -> a
    net.youmi.android.offers.PointsManager b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.offers.PointsManager getInstance(android.content.Context) -> getInstance
    int queryPoints() -> queryPoints
    boolean awardPoints(int) -> awardPoints
    boolean spendPoints(int) -> spendPoints
    void registerNotify(net.youmi.android.offers.PointsChangeNotify) -> registerNotify
    void unRegisterNotify(net.youmi.android.offers.PointsChangeNotify) -> unRegisterNotify
    void setEnableEarnPointsNotification(boolean) -> setEnableEarnPointsNotification
    boolean isEnableEarnPointsNotification() -> isEnableEarnPointsNotification
    void setEnableEarnPointsToastTips(boolean) -> setEnableEarnPointsToastTips
    boolean isEnableEarnPointsToastTips() -> isEnableEarnPointsToastTips
net.youmi.android.offers.PointsReceiver -> net.youmi.android.offers.PointsReceiver:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String getActionName_EarnPoints(android.content.Context) -> getActionName_EarnPoints
    java.lang.String getActionName_ViewPoints(android.content.Context) -> getActionName_ViewPoints
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onEarnPoints(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onEarnPoints
    void onViewPoints(android.content.Context) -> onViewPoints
net.youmi.android.offers.a -> net.youmi.android.offers.a:
    java.lang.String a -> a
    net.youmi.android.offers.OffersManager b -> b
    void run() -> run
net.youmi.android.offers.a.a -> net.youmi.android.offers.a.a:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
net.youmi.android.offers.b -> net.youmi.android.offers.b:
    net.youmi.android.offers.c.c a -> a
    net.youmi.android.offers.c b -> b
    boolean c -> c
    long d -> d
    void a() -> a
    void a(android.content.Context,net.youmi.android.offers.c.c) -> a
    void b(android.content.Context,net.youmi.android.offers.c.c) -> b
    void c(android.content.Context,net.youmi.android.offers.c.c) -> c
net.youmi.android.offers.b.a.a -> net.youmi.android.offers.b.a.a:
    boolean a(int) -> a
    net.youmi.android.a.h.b.a a(int,int) -> a
net.youmi.android.offers.b.a.a.a -> net.youmi.android.offers.b.a.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.b -> net.youmi.android.offers.b.a.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.c -> net.youmi.android.offers.b.a.a.c:
    int[] a -> a
net.youmi.android.offers.b.a.a.d -> net.youmi.android.offers.b.a.a.d:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.a.a.e -> net.youmi.android.offers.b.a.a.e:
    org.json.JSONObject a(net.youmi.android.a.h.e,net.youmi.android.a.h.b,org.json.JSONObject) -> a
net.youmi.android.offers.b.b.a.a -> net.youmi.android.offers.b.b.a.a:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.offers.b.b.b.a -> net.youmi.android.offers.b.b.b.a:
    android.content.Intent a(android.content.Context,int) -> a
    net.youmi.android.a.h.p a(android.content.Context) -> a
    boolean a(android.content.Context,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,int,int,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,double,double,net.youmi.android.offers.OffersWallDialogListener) -> a
    java.lang.String b(android.content.Context,int) -> b
net.youmi.android.offers.b.b.c.a -> net.youmi.android.offers.b.b.c.a:
    void a(int,int) -> a
net.youmi.android.offers.b.b.c.b -> net.youmi.android.offers.b.b.c.b:
    android.content.Context a -> a
    net.youmi.android.offers.b.b.c.b b -> b
    net.youmi.android.offers.b.b.c.b a(android.content.Context) -> a
    void a() -> a
net.youmi.android.offers.b.b.c.c -> net.youmi.android.offers.b.b.c.c:
    net.youmi.android.offers.b.b.c.c a -> a
    java.util.HashSet b -> b
    net.youmi.android.offers.b.b.c.c a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.b.b.c.d -> net.youmi.android.offers.b.b.c.d:
    net.youmi.android.offers.b.b.c.d a -> a
    java.util.HashSet b -> b
    net.youmi.android.offers.b.b.c.d a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
net.youmi.android.offers.b.b.c.e -> net.youmi.android.offers.b.b.c.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.offers.b.b.c.e d -> d
    android.content.Context e -> e
    net.youmi.android.offers.b.b.c.e a(android.content.Context) -> a
    int a() -> a
    boolean a(int) -> a
    boolean b(int) -> b
    boolean a(android.content.Context,int) -> a
    int b(android.content.Context) -> b
net.youmi.android.offers.b.b.c.f -> net.youmi.android.offers.b.b.c.f:
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.c.k.a) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.c.k.a) -> b
net.youmi.android.offers.b.b.c.g -> net.youmi.android.offers.b.b.c.g:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
net.youmi.android.offers.b.b.c.h -> net.youmi.android.offers.b.b.c.h:
    android.app.PendingIntent e(android.content.Context) -> e
    void a(android.content.Context) -> a
    void f(android.content.Context) -> f
    void a(android.content.Context,long) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
net.youmi.android.offers.b.b.c.i -> net.youmi.android.offers.b.b.c.i:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.b.b.c.j -> net.youmi.android.offers.b.b.c.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    long a(android.content.Context,java.lang.String) -> a
    boolean d(android.content.Context) -> d
net.youmi.android.offers.b.b.c.k -> net.youmi.android.offers.b.b.c.k:
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
net.youmi.android.offers.b.b.c.l -> net.youmi.android.offers.b.b.c.l:
    net.youmi.android.offers.PointsChangeNotify a -> a
    int b -> b
    void run() -> run
net.youmi.android.offers.b.b.c.m -> net.youmi.android.offers.b.b.c.m:
    net.youmi.android.offers.b.b.c.a a -> a
    int b -> b
    int c -> c
    void run() -> run
net.youmi.android.offers.b.b.d.a -> net.youmi.android.offers.b.b.d.a:
    net.youmi.android.offers.b.b.d.b a -> a
    void a() -> a
    void a(android.content.Context) -> a
net.youmi.android.offers.b.b.d.b -> net.youmi.android.offers.b.b.d.b:
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.l b -> b
    int b() -> b
    void a() -> a
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    boolean proxySetVisibility(int) -> proxySetVisibility
net.youmi.android.offers.b.b.e.a -> net.youmi.android.offers.b.b.e.a:
    android.content.Context c -> c
    net.youmi.android.offers.b d -> d
    net.youmi.android.offers.b.b.e.a e -> e
    android.view.WindowManager f -> f
    android.view.WindowManager$LayoutParams g -> g
    android.widget.LinearLayout a -> a
    android.widget.LinearLayout$LayoutParams b -> b
    android.view.animation.Animation h -> h
    android.view.animation.Animation i -> i
    int j -> j
    android.view.animation.Animation k -> k
    android.view.animation.Animation l -> l
    android.view.animation.Animation m -> m
    android.view.animation.Animation n -> n
    boolean o -> o
    net.youmi.android.offers.b.b.e.a a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    void a() -> a
    void a(int) -> a
    void d() -> d
    void a(android.content.Context,net.youmi.android.offers.b) -> a
    void b(android.content.Context,net.youmi.android.offers.b) -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.offers.c -> net.youmi.android.offers.c:
    void a(android.content.Context,net.youmi.android.offers.b) -> a
    void b(android.content.Context,net.youmi.android.offers.b) -> b
net.youmi.android.offers.c.a -> net.youmi.android.offers.c.a:
    net.youmi.android.offers.c.f e -> e
    android.widget.RelativeLayout f -> f
    net.youmi.android.a.k.a.l a -> a
    net.youmi.android.a.h.l g -> g
    boolean b -> b
    int c -> c
    boolean h -> h
    android.content.Context i -> i
    net.youmi.android.offers.OffersAdSize d -> d
    int j -> j
    boolean a() -> a
    void b() -> b
    void startLoad() -> startLoad
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void d() -> d
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    boolean canShowAdNow() -> canShowAdNow
    void run() -> run
net.youmi.android.offers.c.b -> net.youmi.android.offers.c.b:
    net.youmi.android.offers.OffersAdSize c -> c
    net.youmi.android.offers.OffersAdSize d -> d
    net.youmi.android.offers.OffersAdSize e -> e
    void a(int) -> a
    void b(int) -> b
    net.youmi.android.offers.OffersAdSize a(android.content.Context,double) -> a
net.youmi.android.offers.c.c -> net.youmi.android.offers.c.c:
    net.youmi.android.offers.c.e f -> f
    boolean e -> e
    void e() -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void f() -> f
    void b() -> b
    void run() -> run
    void startLoad() -> startLoad
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    net.youmi.android.offers.c.e a(net.youmi.android.offers.c.c) -> a
net.youmi.android.offers.c.d -> net.youmi.android.offers.c.d:
    net.youmi.android.offers.c.c a -> a
    void run() -> run
net.youmi.android.offers.c.e -> net.youmi.android.offers.c.e:
    void a(android.content.Context,net.youmi.android.offers.c.c) -> a
    void b(android.content.Context,net.youmi.android.offers.c.c) -> b
    void c(android.content.Context,net.youmi.android.offers.c.c) -> c
net.youmi.android.offers.c.f -> net.youmi.android.offers.c.f:
    net.youmi.android.offers.c.a b -> b
    net.youmi.android.offers.c.g a -> a
    void a() -> a
    void b() -> b
net.youmi.android.offers.c.g -> net.youmi.android.offers.c.g:
    net.youmi.android.offers.c.a a -> a
    boolean b -> b
    void a() -> a
    void run() -> run
    net.youmi.android.offers.c.a a(net.youmi.android.offers.c.g) -> a
net.youmi.android.offers.c.h -> net.youmi.android.offers.c.h:
    net.youmi.android.offers.c.g a -> a
    void run() -> run
net.youmi.android.offers.d -> net.youmi.android.offers.d:
    android.content.Context a -> a
    net.youmi.android.offers.d b -> b
    net.youmi.android.offers.d a(android.content.Context) -> a
    void a(net.youmi.android.offers.EarnPointsOrderList) -> a
net.youmi.android.offers.e -> net.youmi.android.offers.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> b
    void b(android.content.Context,org.json.JSONObject) -> b
    boolean a(org.json.JSONObject) -> a
    void c(android.content.Context,org.json.JSONObject) -> c
    void c(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> c
net.youmi.android.offers.f -> net.youmi.android.offers.f:
    android.content.Context a -> a
    net.youmi.android.offers.EarnPointsOrderList b -> b
    net.youmi.android.offers.e c -> c
    void run() -> run
net.youmi.android.spot.SpotDialogListener -> net.youmi.android.spot.SpotDialogListener:
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
net.youmi.android.spot.SpotManager -> net.youmi.android.spot.SpotManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String i -> i
    java.lang.String d -> d
    long j -> j
    long k -> k
    int l -> l
    long m -> m
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String abtest -> abtest
    java.lang.String A -> A
    java.lang.String B -> B
    net.youmi.android.spot.i n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    long r -> r
    long h -> h
    net.youmi.android.spot.SpotManager s -> s
    android.content.Context t -> t
    android.content.BroadcastReceiver u -> u
    void setLoading(boolean) -> setLoading
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    net.youmi.android.spot.SpotManager getInstance(android.content.Context) -> getInstance
    void setSpotTimeout(long) -> setSpotTimeout
    long getSpotTimeout() -> getSpotTimeout
    void loadSpotAds() -> loadSpotAds
    void a(boolean,boolean) -> a
    void a(boolean,boolean,net.youmi.android.spot.SpotDialogListener) -> a
    void showSpotAds(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> showSpotAds
    void showSpotAds(android.content.Context) -> showSpotAds
    void a(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> a
    void a(net.youmi.android.spot.SpotDialogListener) -> a
    boolean a() -> a
    boolean checkLoadComplete() -> checkLoadComplete
    void a(android.content.Context,java.lang.String) -> a
    boolean disMiss(boolean) -> disMiss
    boolean checkSpotAdConfig(android.content.Context) -> checkSpotAdConfig
    void setShowInterval(int) -> setShowInterval
    void setAutoCloseSpot(boolean) -> setAutoCloseSpot
    void setCloseTime(long) -> setCloseTime
    void unregisterSceenReceiver() -> unregisterSceenReceiver
    void checkPermission(android.content.Context) -> checkPermission
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.spot.SpotManager,boolean) -> a
    android.content.Context a(net.youmi.android.spot.SpotManager) -> a
    net.youmi.android.spot.i a(net.youmi.android.spot.SpotManager,net.youmi.android.spot.i) -> a
    net.youmi.android.spot.i b(net.youmi.android.spot.SpotManager) -> b
    boolean c(net.youmi.android.spot.SpotManager) -> c
    long d(net.youmi.android.spot.SpotManager) -> d
net.youmi.android.spot.a -> net.youmi.android.spot.a:
    android.content.Context e -> e
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams f -> f
    android.widget.LinearLayout b -> b
    net.youmi.android.spot.i c -> c
    int g -> g
    boolean h -> h
    int d -> d
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
net.youmi.android.spot.b -> net.youmi.android.spot.b:
    boolean a -> a
    android.content.Context b -> b
    net.youmi.android.spot.SpotManager c -> c
    net.youmi.android.spot.SpotDialogListener d -> d
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.spot.c -> net.youmi.android.spot.c:
    java.lang.String a -> a
    net.youmi.android.spot.b b -> b
    void run() -> run
net.youmi.android.spot.d -> net.youmi.android.spot.d:
    net.youmi.android.spot.SpotManager a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.spot.e -> net.youmi.android.spot.e:
    boolean a -> a
    net.youmi.android.spot.SpotDialogListener b -> b
    net.youmi.android.spot.SpotManager c -> c
    void run() -> run
net.youmi.android.spot.f -> net.youmi.android.spot.f:
    net.youmi.android.spot.SpotManager a -> a
    void run() -> run
net.youmi.android.spot.g -> net.youmi.android.spot.g:
    java.lang.String a -> a
    net.youmi.android.spot.f b -> b
    void run() -> run
net.youmi.android.spot.h -> net.youmi.android.spot.h:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.spot.SpotDialogListener c -> c
    net.youmi.android.spot.SpotManager d -> d
    void run() -> run
net.youmi.android.spot.i -> net.youmi.android.spot.i:
    android.widget.RelativeLayout d -> d
    net.youmi.android.a.k.a.l e -> e
    net.youmi.android.a.h.l f -> f
    boolean g -> g
    boolean h -> h
    android.content.Context i -> i
    int a -> a
    boolean j -> j
    long k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    net.youmi.android.spot.a o -> o
    net.youmi.android.spot.SpotDialogListener p -> p
    net.youmi.android.spot.SpotManager q -> q
    int r -> r
    android.os.Handler b -> b
    java.lang.Runnable c -> c
    void setClickableToast(net.youmi.android.spot.a) -> setClickableToast
    void setSpotDialogLinster(net.youmi.android.spot.SpotDialogListener) -> setSpotDialogLinster
    void setSpotManager(net.youmi.android.spot.SpotManager) -> setSpotManager
    void onAttachedToWindow() -> onAttachedToWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a() -> a
    boolean proxyClearWebViewHistory() -> proxyClearWebViewHistory
    boolean proxyCloseCurrentWindow() -> proxyCloseCurrentWindow
    boolean proxyLoadUrl(java.lang.String) -> proxyLoadUrl
    boolean proxyPostUrl(java.lang.String,byte[]) -> proxyPostUrl
    net.youmi.android.a.h.f js_SDK_Handler_ClearCurrentBrowserHistory() -> js_SDK_Handler_ClearCurrentBrowserHistory
    boolean js_SDK_Handler_RunOnUIThread(java.lang.Runnable) -> js_SDK_Handler_RunOnUIThread
    void onWebPageFinished(android.webkit.WebView,java.lang.String) -> onWebPageFinished
    void onWebPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onWebPageStarted
    void onWebReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onWebReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean proxySetVisibility(int) -> proxySetVisibility
    void setCanShowAdNow(boolean) -> setCanShowAdNow
    void run() -> run
    void setAutoClose(boolean) -> setAutoClose
    long getCloseSpotTime() -> getCloseSpotTime
    void setCloseSpotTime(long) -> setCloseSpotTime
    boolean a(net.youmi.android.spot.i) -> a
    net.youmi.android.spot.SpotDialogListener b(net.youmi.android.spot.i) -> b
    net.youmi.android.a.k.a.l c(net.youmi.android.spot.i) -> c
    net.youmi.android.a.k.a.l a(net.youmi.android.spot.i,net.youmi.android.a.k.a.l) -> a
    net.youmi.android.spot.a d(net.youmi.android.spot.i) -> d
    net.youmi.android.spot.a a(net.youmi.android.spot.i,net.youmi.android.spot.a) -> a
    net.youmi.android.spot.SpotManager e(net.youmi.android.spot.i) -> e
net.youmi.android.spot.j -> net.youmi.android.spot.j:
    net.youmi.android.spot.i a -> a
    void run() -> run
net.youmi.android.spot.k -> net.youmi.android.spot.k:
    net.youmi.android.spot.j a -> a
    void run() -> run
net.youmi.android.spot.l -> net.youmi.android.spot.l:
    net.youmi.android.spot.i a -> a
    void run() -> run
net.youmi.android.spot.m -> net.youmi.android.spot.m:
    net.youmi.android.spot.i a -> a
    void run() -> run
